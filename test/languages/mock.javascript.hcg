# Mock version of JavaScript with comments and automatic semicolon "insertion". 
# This is NOT a complete example of the JavaScript specification

@IGNORE g:ws g:nl tk:comments


<> javascript > statements                                                          f:r{ { ty:"js", stmts:$sym1 } }


<> statements > ( statement | declaration )(+)


<> statement > for_statement
    | block_statement
    | expression_statement
    | return_statement
    | empty_statement

<> empty_statement > \;

<> for_statement > t:for \( expression \; expression \; expression \) statement


<> return_statement > \return asi
    | \return expression asi


<> block_statement > { statements }                                               f:r{ { ty:"block", statements:$sym2 } }


<> expression_statement > expression_list asi                                     f:r{ { ty:"expression_statement", exprs:$sym1 } }


<> declaration > function_declaration
    | var_declaration                                                             


<> function_declaration > \function g:id \( g:id(*\, ) \) { statements? }


<> var_declaration > \var assignment_expression(+\, ) asi                         
                                                                                f:r{ { ty:"var", assignments:$sym2 } }


<> expression_list > expression(+\, )


<> expression > additive_expression
    | assignment_expression


<> assignment_expression > id = expression                                        
                                                                                f:r{ { ty: "assignment", left:$sym1, right:$sym3 } }

<> additive_expression > multiplicative_expression ( \+ | \- ) additive_expression   
                                                                                f:r{ { ty: $sym2 == "+" ?  "add" : "sub", left:$sym1, right:$sym3 } }
    | multiplicative_expression

<> multiplicative_expression > unary_expression ( \* | \/ ) multiplicative_expression
                                                                                f:r{ { ty: $sym2 == "*" ?  "mul" : "div", left:$sym1, right:$sym3 } }
    | unary_expression


<> unary_expression > g:num                                                     f:r{ { ty:"num", val:$sym1 } }
    | id
    | \( expression \)                                                          f:r{ { ty:"parenthesized", val:$sym2 } }

<> id > g:id                                                                    f:r{ { ty:"id", val:$sym1 } }


<> asi > ( \; | ?={ | ?=g:nl | ?=$eof )

<> comments > \/* ( g:ws | g:nl | g:id | g:num | g:sym )(*) \*/
    | \// ( g:ws | g:id | g:num | g:sym )(*) g:nl