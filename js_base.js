const e = (tk, r, o, l, s) => { throw new SyntaxError(l.errorMessage(`unexpected token ${tk !== "$" ? tk[0] == "θ" || tk[0] == "τ" ? l.tx : tk : "EOF"} on production ${s} `)) },
    nf = () => -1,
    class_tail = function(sym) {
        this.heritage = sym[0];
        this.body = sym[2]
    },
    lex_declaration = function(v) {
        this.id = v.id;
        this.expr = v.init
    },
    var_declaration = function(v) {
        this.id = v.id;
        this.expr = v.init
    },
    S$0 = function(sym, env, lex, state) { return sym[0]; },
    statement_list$0 = function(sym, env, lex, state) { return [sym[0]] },
    statement_list$1 = function(sym, env, lex, state) { return (sym[0].push(sym[1]), sym[0]) },
    block$0 = function(sym, env, lex, state) { return sym[1] },
    empty_statement$0 = function(sym, env, lex, state) { this.type = "empty" },
    expression_statement$0 = function(sym, env, lex, state) { return sym[0] },
    if_statement$0 = function(sym, env, lex, state) { return (new env.functions.if_stmt(sym[2], sym[4], sym[6])) },
    if_statement$1 = function(sym, env, lex, state) { return (new env.functions.if_stmt(sym[2], sym[4])) },
    iteration_statement$0 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[2], sym[4], sym[6], sym[8])) },
    iteration_statement$1 = function(sym, env, lex, state) { return (new env.functions.for_stmt(null, sym[4], sym[6], sym[8])) },
    iteration_statement$2 = function(sym, env, lex, state) { return (new env.functions.for_stmt(null, null, sym[6], sym[8])) },
    iteration_statement$3 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[2], null, sym[6], sym[8])) },
    iteration_statement$4 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[2], sym[4], null, sym[8])) },
    iteration_statement$5 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[2], null, null, sym[8])) },
    iteration_statement$6 = function(sym, env, lex, state) { return (new env.functions.for_stmt(null, null, null, sym[8])) },
    iteration_statement$7 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[3], sym[5], sym[7], sym[9])) },
    iteration_statement$8 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[3], sym[5], null, sym[9])) },
    iteration_statement$9 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[3], null, sym[7], sym[9])) },
    iteration_statement$10 = function(sym, env, lex, state) { return (new env.functions.for_stmt(sym[3], null, null, sym[9])) },
    iteration_statement$11 = function(sym, env, lex, state) { return (new env.functions.for_in_stmt(sym[2], sym[4], sym[6])) },
    iteration_statement$12 = function(sym, env, lex, state) { return (new env.functions.for_in_stmt(sym[3], sym[5], sym[7])) },
    iteration_statement$13 = function(sym, env, lex, state) { return (new env.functions.for_of_stmt(sym[2], sym[4], sym[6])) },
    iteration_statement$14 = function(sym, env, lex, state) { return (new env.functions.for_of_stmt(sym[3], sym[5], sym[7], true)) },
    iteration_statement$15 = function(sym, env, lex, state) { return (new env.functions.for_of_stmt(sym[4], sym[6], sym[8], true)) },
    continue_statement$0 = function(sym, env, lex, state) { return (new env.functions.continue_stmt(sym[1])) },
    break_statement$0 = function(sym, env, lex, state) { return (new env.functions.break_stmt(sym[1])) },
    return_statement$0 = function(sym, env, lex, state) { return (new env.functions.return_stmt(sym[1])) },
    case_block$0 = function(sym, env, lex, state) { return [] },
    case_block$1 = function(sym, env, lex, state) { return sym[1].concat(sym[2].concat(sym[3])) },
    case_block$2 = function(sym, env, lex, state) { return sym[1].concat(sym[2]) },
    case_clauses$0 = function(sym, env, lex, state) { return sym[0].concat(sym[1]) },
    case_clause$0 = function(sym, env, lex, state) { return (new env.functions.case_stmt(sym[1], sym[3])) },
    case_clause$1 = function(sym, env, lex, state) { return (new env.functions.case_stmt(sym[1])) },
    default_clause$0 = function(sym, env, lex, state) { return (new env.functions.default_case_stmt(sym[2])) },
    default_clause$1 = function(sym, env, lex, state) { return (new env.functions.default_case_stmt()) },
    try_statement$0 = function(sym, env, lex, state) { return (new env.functions.try_stmt(sym[1], sym[2])) },
    try_statement$1 = function(sym, env, lex, state) { return (new env.functions.try_stmt(sym[1], null, sym[2])) },
    try_statement$2 = function(sym, env, lex, state) { return (new env.functions.try_stmt(sym[1], sym[2], sym[3])) },
    variable_declaration_list$0 = function(sym, env, lex, state) { return [new env.functions.var_declaration(sym[0], e)] },
    variable_declaration_list$1 = function(sym, env, lex, state) { return sym[0].push(new env.functions.var_declaration(sym[1], e)) },
    variable_declaration$0 = function(sym, env, lex, state) { return { id: sym[0], init: sym[1] } },
    variable_declaration$1 = function(sym, env, lex, state) { return { id: sym[0], init: null } },
    let_or_const$0 = function(sym, env, lex, state) { return "let" },
    let_or_const$1 = function(sym, env, lex, state) { return "const" },
    binding_list$0 = function(sym, env, lex, state) { return [new env.functions.lex_declaration(sym[0], e)] },
    binding_list$1 = function(sym, env, lex, state) { return sym[0].push(new env.functions.lex_declaration(sym[1], e)) },
    class_tail$0 = function(sym, env, lex, state) { return new env.functions.class_tail(sym) },
    class_tail$1 = function(sym, env, lex, state) { return new env.functions.class_tail([null, ...sym[0]]) },
    class_tail$2 = function(sym, env, lex, state) { return new env.functions.class_tail([sym[0], null, null]) },
    class_tail$3 = function(sym, env, lex, state) { return null },
    class_element_list$0 = function(sym, env, lex, state) { return (sym[0].push(sym[1])) },
    class_element$0 = function(sym, env, lex, state) { return (sym[1].static = true, sym[1]) },
    expression$0 = function(sym, env, lex, state) { return (sym[0].push(sym[2]), sym[0]) },
    arguments$0 = function(sym, env, lex, state) { return []; },
    argument_list$0 = function(sym, env, lex, state) { return (sym[0].push(new env.functions.spread_expr(env, sym.slice(2, 4))), env[0]) },
    array_literal$0 = function(sym, env, lex, state) { return [] },
    element_list$0 = function(sym, env, lex, state) { return [sym[1]] },
    element_list$1 = function(sym, env, lex, state) { return (sym[0].push(sym[2]), sym[0]) },
    cover_parenthesized_expression_and_arrow_parameter_list$0 = function(sym, env, lex, state) { return [sym[0].push(new env.functions.spread_expr(env, sym.slice(1, 3)))] },
    symbols = ["{",
        "}",
        "(",
        ")",
        "[",
        "]",
        ".",
        "...",
        ";",
        ",",
        "<",
        ">",
        "<=",
        ">=",
        "==",
        "!=",
        "===",
        "!==",
        "+",
        "-",
        "*",
        "%",
        "/",
        "**",
        "++",
        "--",
        "<<",
        ">>",
        ">>>",
        "&",
        "|",
        "^",
        "!",
        "~",
        "&&",
        "||",
        "?",
        ":",
        "+=",
        "-=",
        "*=",
        "%=",
        "/=",
        "**=",
        "<<=",
        ">>=",
        ">>>=",
        "&=",
        "|=",
        "^=",
        "=>"
    ],
    goto = [(v, r = gt0[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt1[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt2[v]) => (r >= 0 ? r : -1),
        (v, r = gt3[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt4[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt5[v]) => (r >= 0 ? r : -1),
        (v, r = gt6[v]) => (r >= 0 ? r : -1),
        (v, r = gt7[v]) => (r >= 0 ? r : -1),
        (v, r = gt8[v]) => (r >= 0 ? r : -1),
        (v, r = gt9[v]) => (r >= 0 ? r : -1),
        (v, r = gt10[v]) => (r >= 0 ? r : -1),
        (v, r = gt11[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt12[v]) => (r >= 0 ? r : -1),
        (v, r = gt13[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt14[v]) => (r >= 0 ? r : -1),
        (v, r = gt15[v]) => (r >= 0 ? r : -1),
        (v, r = gt16[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt17[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt18[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt19[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt20[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt21[v]) => (r >= 0 ? r : -1),
        (v, r = gt22[v]) => (r >= 0 ? r : -1),
        (v, r = gt23[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt24[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt25[v]) => (r >= 0 ? r : -1),
        (v, r = gt26[v]) => (r >= 0 ? r : -1),
        (v, r = gt27[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt28[v]) => (r >= 0 ? r : -1),
        (v, r = gt29[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt30[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt1[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt31[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt32[v]) => (r >= 0 ? r : -1),
        (v, r = gt33[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt34[v]) => (r >= 0 ? r : -1),
        (v, r = gt35[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt36[v]) => (r >= 0 ? r : -1),
        (v, r = gt37[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt38[v]) => (r >= 0 ? r : -1),
        (v, r = gt39[v]) => (r >= 0 ? r : -1),
        (v, r = gt40[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt41[v]) => (r >= 0 ? r : -1),
        (v, r = gt42[v]) => (r >= 0 ? r : -1),
        (v, r = gt43[v]) => (r >= 0 ? r : -1),
        (v, r = gt44[v]) => (r >= 0 ? r : -1),
        (v, r = gt45[v]) => (r >= 0 ? r : -1),
        (v, r = gt46[v]) => (r >= 0 ? r : -1),
        (v, r = gt47[v]) => (r >= 0 ? r : -1),
        (v, r = gt48[v]) => (r >= 0 ? r : -1),
        (v, r = gt49[v]) => (r >= 0 ? r : -1),
        (v, r = gt50[v]) => (r >= 0 ? r : -1),
        (v, r = gt51[v]) => (r >= 0 ? r : -1),
        (v, r = gt52[v]) => (r >= 0 ? r : -1),
        (v, r = gt53[v]) => (r >= 0 ? r : -1),
        (v, r = gt54[v]) => (r >= 0 ? r : -1),
        (v, r = gt55[v]) => (r >= 0 ? r : -1),
        (v, r = gt56[v]) => (r >= 0 ? r : -1),
        (v, r = gt57[v]) => (r >= 0 ? r : -1),
        (v, r = gt58[v]) => (r >= 0 ? r : -1),
        (v, r = gt59[v]) => (r >= 0 ? r : -1),
        (v, r = gt60[v]) => (r >= 0 ? r : -1),
        (v, r = gt61[v]) => (r >= 0 ? r : -1),
        (v, r = gt62[v]) => (r >= 0 ? r : -1),
        (v, r = gt63[v]) => (r >= 0 ? r : -1),
        (v, r = gt64[v]) => (r >= 0 ? r : -1),
        (v, r = gt65[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt66[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt67[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt68[v]) => (r >= 0 ? r : -1),
        (v, r = gt69[v]) => (r >= 0 ? r : -1),
        (v, r = gt70[v]) => (r >= 0 ? r : -1),
        (v, r = gt71[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt72[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt73[v]) => (r >= 0 ? r : -1),
        (v, r = gt74[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt75[v]) => (r >= 0 ? r : -1),
        (v, r = gt76[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt77[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt78[v]) => (r >= 0 ? r : -1),
        (v, r = gt79[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt80[v]) => (r >= 0 ? r : -1),
        (v, r = gt81[v]) => (r >= 0 ? r : -1),
        (v, r = gt82[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt83[v]) => (r >= 0 ? r : -1),
        (v, r = gt84[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt85[v]) => (r >= 0 ? r : -1),
        (v, r = gt86[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt87[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt88[v]) => (r >= 0 ? r : -1),
        (v, r = gt89[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt90[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt91[v]) => (r >= 0 ? r : -1),
        (v, r = gt92[v]) => (r >= 0 ? r : -1),
        (v, r = gt17[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt93[v]) => (r >= 0 ? r : -1),
        (v, r = gt16[v]) => (r >= 0 ? r : -1),
        (v, r = gt94[v]) => (r >= 0 ? r : -1),
        (v, r = gt95[v]) => (r >= 0 ? r : -1),
        (v, r = gt96[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt97[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt98[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt99[v]) => (r >= 0 ? r : -1),
        (v, r = gt100[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt101[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt102[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt103[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt104[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt105[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt106[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt107[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt108[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt109[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt110[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt111[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt112[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt38[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt113[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt114[v]) => (r >= 0 ? r : -1),
        (v, r = gt115[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt4[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt116[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt117[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt118[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt119[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt110[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt116[v]) => (r >= 0 ? r : -1),
        (v, r = gt117[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt120[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt121[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt122[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt123[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt124[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt125[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt126[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt127[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt128[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt1[v]) => (r >= 0 ? r : -1),
        (v, r = gt129[v]) => (r >= 0 ? r : -1),
        (v, r = gt130[v]) => (r >= 0 ? r : -1),
        (v, r = gt131[v]) => (r >= 0 ? r : -1),
        (v, r = gt132[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt133[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt134[v]) => (r >= 0 ? r : -1),
        (v, r = gt135[v]) => (r >= 0 ? r : -1),
        (v, r = gt136[v]) => (r >= 0 ? r : -1),
        (v, r = gt137[v]) => (r >= 0 ? r : -1),
        (v, r = gt138[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt139[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt140[v]) => (r >= 0 ? r : -1),
        (v, r = gt141[v]) => (r >= 0 ? r : -1),
        (v, r = gt142[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt143[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt144[v]) => (r >= 0 ? r : -1),
        (v, r = gt145[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt146[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt147[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt148[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt149[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt150[v]) => (r >= 0 ? r : -1),
        (v, r = gt151[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt152[v]) => (r >= 0 ? r : -1),
        (v, r = gt153[v]) => (r >= 0 ? r : -1),
        (v, r = gt154[v]) => (r >= 0 ? r : -1),
        (v, r = gt155[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt156[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt157[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt158[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt159[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt160[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt161[v]) => (r >= 0 ? r : -1),
        (v, r = gt162[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt163[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt164[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt165[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt166[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt167[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt168[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt169[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt170[v]) => (r >= 0 ? r : -1),
        (v, r = gt171[v]) => (r >= 0 ? r : -1),
        (v, r = gt172[v]) => (r >= 0 ? r : -1),
        (v, r = gt173[v]) => (r >= 0 ? r : -1),
        (v, r = gt174[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt175[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt176[v]) => (r >= 0 ? r : -1),
        (v, r = gt177[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt178[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt179[v]) => (r >= 0 ? r : -1),
        (v, r = gt165[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt169[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt180[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt181[v]) => (r >= 0 ? r : -1),
        (v, r = gt182[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt183[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt184[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt185[v]) => (r >= 0 ? r : -1),
        (v, r = gt186[v]) => (r >= 0 ? r : -1),
        (v, r = gt187[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt188[v]) => (r >= 0 ? r : -1),
        (v, r = gt189[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt190[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt191[v]) => (r >= 0 ? r : -1),
        (v, r = gt192[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt193[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt194[v]) => (r >= 0 ? r : -1),
        nf,
        (v, r = gt184[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt195[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt196[v]) => (r >= 0 ? r : -1),
        (v, r = gt197[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt198[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        (v, r = gt199[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        (v, r = gt200[v]) => (r >= 0 ? r : -1),
        (v, r = gt1[v]) => (r >= 0 ? r : -1),
        (v, r = gt200[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        (v, r = gt201[v]) => (r >= 0 ? r : -1),
        nf,
        nf,
        nf,
        nf,
        nf,
        (v, r = gt1[v]) => (r >= 0 ? r : -1),
        nf
    ],
    err = [(v) => (["$"]).includes(v) ? 1 : 0,
        (v) => (["$"]).includes(v) ? 1 : 0,
        (v) => 0,
        (v) => 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["τfrom"]).includes(v) ? 1 : 0,
        (v) => ([",", "τfrom"]).includes(v) ? 1 : 0,
        (v) => (["τfrom"]).includes(v) ? 1 : 0,
        (v) => (["τfrom"]).includes(v) ? 1 : 0,
        (v) => ([";", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => ([",", "τfrom", "}"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["τfrom", ";"]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["$"]).includes(v) ? 1 : 0,
        (v) => (["$"]).includes(v) ? 1 : 0,
        (v) => (["{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$", "τdefault", "τcase"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τcatch", "τfinally", "τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τin", "τof"]).includes(v) ? 1 : 0,
        (v) => (["τin", "τof"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τdefault", "}", "τcase"]).includes(v) ? 1 : 0,
        (v) => (["}", "τdefault", "τcase"]).includes(v) ? 1 : 0,
        (v) => (["τcase", "}"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τfinally", "τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => (["τelse", "τwhile", ";", ")", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "τelse", ")", "}", "$"]).includes(v) ? 1 : 0,
        (v) => ([";", ","]).includes(v) ? 1 : 0,
        (v) => ([";", ","]).includes(v) ? 1 : 0,
        (v) => ([";", "τimport", "τexport", "{", "τvar", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["θid", "{", "["]).includes(v) ? 1 : 0,
        (v) => ([";", ","]).includes(v) ? 1 : 0,
        (v) => ([";", ","]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "τelse", ")", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => ([",", ")"]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => ([",", ")"]).includes(v) ? 1 : 0,
        (v) => (["}"]).includes(v) ? 1 : 0,
        (v) => (["}"]).includes(v) ? 1 : 0,
        (v) => ([")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["=>"]).includes(v) ? 1 : 0,
        (v) => 0,
        (v) => 0,
        (v) => (["=>"]).includes(v) ? 1 : 0,
        (v) => 0,
        (v) => (["=>", ".", "(", "[", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", "}", "$"]).includes(v) ? 1 : 0,
        (v) => (["{"]).includes(v) ? 1 : 0,
        (v) => (["}"]).includes(v) ? 1 : 0,
        (v) => (["θid", "θstr", "θnum", "[", "τget", "τset", "τstatic", ";", "}"]).includes(v) ? 1 : 0,
        (v) => (["θid", "θstr", "θnum", "[", "τget", "τset", "τstatic", ";", "}"]).includes(v) ? 1 : 0,
        (v) => (["θid", "θstr", "θnum", "[", "τget", "τset", "τstatic", ";", "}", ","]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => ([";", ")", ":", ",", "]"]).includes(v) ? 1 : 0,
        (v) => (["τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{", "**", "*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => ([".", "(", "[", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => ([".", "(", "[", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["=>", "(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => ([")", ","]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["(", ":"]).includes(v) ? 1 : 0,
        (v) => (["(", ":"]).includes(v) ? 1 : 0,
        (v) => (["(", ":"]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => ([";", ",", "}", ")", "]"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["]", ","]).includes(v) ? 1 : 0,
        (v) => (["]", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "{", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "...", ","]).includes(v) ? 1 : 0,
        (v) => (["]", ","]).includes(v) ? 1 : 0,
        (v) => ([")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "{", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!"]).includes(v) ? 1 : 0,
        (v) => ([")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}", "**"]).includes(v) ? 1 : 0,
        (v) => (["**", "*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["*", "/", "%", "+", "-", "<<", ">>", ">>>", "<", ">", "<=", ">=", "τinstanceof", "τin", "==", "!=", "===", "!==", "^", "&", "|", "&&", "?", "||", ")", "]", ":", "τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ",", "}"]).includes(v) ? 1 : 0,
        (v) => (["=>", "(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["=", ")", ",", "]", "}"]).includes(v) ? 1 : 0,
        (v) => (["=", ")"]).includes(v) ? 1 : 0,
        (v) => (["=", ")"]).includes(v) ? 1 : 0,
        (v) => (["}"]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => (["]", ","]).includes(v) ? 1 : 0,
        (v) => (["]", ","]).includes(v) ? 1 : 0,
        (v) => (["}", ","]).includes(v) ? 1 : 0,
        (v) => ([",", ")", "]", "}"]).includes(v) ? 1 : 0,
        (v) => (["}", ",", ")", "]"]).includes(v) ? 1 : 0,
        (v) => (["]", ")"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["τimport", "τexport", "{", "τvar", ";", "τthis", "θid", "τyield", "τawait", "τtrue", "τfalse", "τnull", "θstr", "θnum", "[", "τfunction", "τclass", "(", "τsuper", "τnew", "++", "--", "τdelete", "τvoid", "τtypeof", "+", "-", "~", "!", "τif", "τdo", "τwhile", "τfor", "τswitch", "τcontinue", "τbreak", "τreturn", "τwith", "τthrow", "τtry", "τdebugger", "τlet", "τconst", ":", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**="]).includes(v) ? 1 : 0,
        (v) => (["(", ":", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => (["(", "[", ".", "τin", "τof", "=", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{"]).includes(v) ? 1 : 0,
        (v) => ([";", ":"]).includes(v) ? 1 : 0,
        (v) => (["=", "(", "[", ".", "τin", "τof", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "{", "}", ","]).includes(v) ? 1 : 0,
        (v) => ([")"]).includes(v) ? 1 : 0,
        (v) => (["τas", "=", "(", "τextends", "{", ",", "τfrom", "}", "τin", "τof", ")", ";", "=>", "[", ".", "*=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "**=", "++", "--", "]", ":"]).includes(v) ? 1 : 0
    ],
    eh = [e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e,
        e
    ],
    gt0 = [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt1 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 112, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt2 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 113, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, 119, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, 115, 116, 118, 121, 122, 117, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt3 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 125, 126, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 128, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 127],
    gt4 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 136],
    gt5 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 176, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt6 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 180, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt7 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 181, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt8 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 182, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt9 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 183, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt10 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 184, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt11 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 185, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt12 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 186, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt13 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 187, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt14 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 189],
    gt15 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 194],
    gt16 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, -1, 195, 196, 59, 60, 89, -1, -1, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt17 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 255],
    gt18 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 198, 177, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt19 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, 201, 200, 204, 203, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt20 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 207],
    gt21 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 209, 210, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 208],
    gt22 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 214, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt23 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 218],
    gt24 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 221, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt25 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 227, -1, -1, 228],
    gt26 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 232, -1, -1, 228],
    gt27 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 234, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt28 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 237, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt29 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 238],
    gt30 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 457, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 240, 241, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 243, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 242],
    gt31 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 260, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt32 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 261, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt33 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 263, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt34 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 266],
    gt35 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 267],
    gt36 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 269, 270, -1, -1, 272, -1, 273, -1, -1, 245, 246, -1, -1, -1, -1, -1, 275],
    gt37 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 277, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, 279, 281, -1, 282, 283, 278, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt38 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 285, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt39 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 286, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt40 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 287, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt41 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 288, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt42 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, 289, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt43 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, 290, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt44 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, 291, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt45 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, 292, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt46 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 293, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt47 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 294, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt48 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 295, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt49 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 296, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt50 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 297, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt51 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 298, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt52 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 299, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt53 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 300, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt54 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 301, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt55 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 302, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt56 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 303, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt57 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 304, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt58 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 305, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt59 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 306, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt60 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 307, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt61 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 308, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt62 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 309, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt63 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 310, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt64 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 311, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt65 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 178, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 312, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt66 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 119, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 115, 116, 118, 121, 122, 117, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246, -1, -1, -1, 244, -1, 69],
    gt67 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 313],
    gt68 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 314, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt69 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, 316, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 317, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt70 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 319, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt71 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 320],
    gt72 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 321],
    gt73 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, 326, 325, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt74 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 328],
    gt75 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 330, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt76 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 331, 333, 332, 335, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 336, 283, 334, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt77 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 338, 210],
    gt78 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 340, 342, 343, 344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 347, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt79 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 348, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt80 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 352, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 351, 353],
    gt81 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 356],
    gt82 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 357, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt83 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, 358, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 359, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt84 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 361, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt85 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 363, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt86 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 369, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 367, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 364, 368, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt87 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 371, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt88 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 375, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt89 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 377, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, 376, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 378, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt90 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 380, 381],
    gt91 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 386],
    gt92 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 387],
    gt93 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, 201, 200, 204, 257, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt94 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 389, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt95 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 369, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 367, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 390, 368, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt96 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 392, 381],
    gt97 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 119, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 394, 118, 121, 122, 117, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246, -1, -1, -1, 244, -1, 69],
    gt98 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 395, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt99 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 397, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt100 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 398, 399, 333, 332, 335, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 336, 283, 334, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt101 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 402, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 128, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 127],
    gt102 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 406],
    gt103 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 408],
    gt104 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 411, 283, 409, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt105 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 416, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 415],
    gt106 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 417],
    gt107 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 422, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt108 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, 427, 426, 425, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt109 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 430, 333, 332, 335, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 336, 283, 334, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt110 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 431, 342, 343, 344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 347, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt111 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 434, 344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 347, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt112 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 435, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 347, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 245, 246],
    gt113 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, 441, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, 119, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, 115, 116, 118, 121, 122, 117, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt114 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 448, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt115 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 451, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 450, 126, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 128, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 127],
    gt116 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 461, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 462, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 459, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt117 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 465],
    gt118 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 467],
    gt119 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 468, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 243, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 242],
    gt120 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 476, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 475, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 336, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt121 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, 121, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 477, -1, -1, -1, 479, -1, 273, -1, -1, 245, 246, -1, -1, -1, -1, -1, 275],
    gt122 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 480, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt123 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 483, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, 485, -1, 282, 283, 484, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt124 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 486, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt125 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 488, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt126 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 490, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt127 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 492, 493, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 336, 283, 334, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt128 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 497, 129, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 496, 353],
    gt129 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 499, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt130 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 500, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt131 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 501, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt132 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 502, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt133 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 505, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt134 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 510, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt135 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 512, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt136 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 513, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt137 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 514, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt138 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 515, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt139 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 517, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 458],
    gt140 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 457, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 458],
    gt141 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 519],
    gt142 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 521, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt143 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 522, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 523],
    gt144 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 525, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt145 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 526, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt146 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 528, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt147 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 284, 129, 130, -1, -1, -1, -1, -1, 411, 283, 534, -1, -1, -1, -1, -1, -1, -1, -1, 275],
    gt148 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 536, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt149 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, 537, 538, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt150 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 545, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt151 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 547, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt152 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 549, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt153 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 550, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt154 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 552, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt155 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 553, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt156 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 555, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt157 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 561, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt158 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 563, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt159 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 565, 567, 566],
    gt160 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 572, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt161 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, 574, 538, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt162 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, 575, 538, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt163 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, 579, 538, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt164 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 580, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt165 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 582, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt166 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 585, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt167 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 587, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt168 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 589, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt169 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 593, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt170 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 596, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt171 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 597, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt172 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 598, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt173 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 599, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt174 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 600, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt175 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, -1, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 602, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt176 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 606, 604],
    gt177 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 607, 567],
    gt178 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 609, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, -1, 62, -1, 69],
    gt179 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 611],
    gt180 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 443, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, 616, 538, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt181 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 619, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt182 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 620, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt183 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 621, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt184 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 622, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt185 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 625, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt186 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 626, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt187 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 627, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt188 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 629, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt189 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 630, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt190 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 631, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt191 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 633, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt192 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 634],
    gt193 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 606],
    gt194 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 638, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt195 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 641, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt196 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 643, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt197 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 644, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt198 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 645, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt199 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 646, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt200 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 648, 5, 6, 7, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, 108, 109, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],
    gt201 = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 649, -1, -1, 13, 8, 22, 10, 11, 12, 94, -1, -1, 14, 15, 16, 17, 95, -1, -1, -1, -1, 18, -1, 19, 20, -1, -1, -1, 21, 9, -1, -1, -1, -1, -1, -1, 83, 66, -1, -1, -1, -1, -1, -1, -1, 29, 92, -1, -1, -1, -1, 91, 67, 85, -1, -1, -1, -1, -1, -1, -1, 26, 30, 54, 56, 59, 60, 89, 55, 90, -1, -1, 58, 65, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, 27, -1, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 75, 76, 74, 73, 104, 62, -1, 69],

    sf = [(t, e, o, l, s) => { o.push(null); return 20483 },
        (t, e, o, l, s) => 94,
        (t, e, o, l, s) => 98,
        (t, e, o, l, s) => 102,
        (t, e, o, l, s) => 178,
        (t, e, o, l, s) => 182,
        (t, e, o, l, s) => 186,
        (t, e, o, l, s) => 190,
        (t, e, o, l, s) => 194,
        (t, e, o, l, s) => 198,
        (t, e, o, l, s) => 202,
        (t, e, o, l, s) => 210,
        (t, e, o, l, s) => 214,
        (t, e, o, l, s) => 230,
        (t, e, o, l, s) => 246,
        (t, e, o, l, s) => 282,
        (t, e, o, l, s) => 286,
        (t, e, o, l, s) => 290,
        (t, e, o, l, s) => 310,
        (t, e, o, l, s) => 314,
        (t, e, o, l, s) => 318,
        (t, e, o, l, s) => 322,
        (t, e, o, l, s) => 326,
        (t, e, o, l, s) => 330,
        (t, e, o, l, s) => 338,
        (t, e, o, l, s) => 346,
        (t, e, o, l, s) => 350,
        (t, e, o, l, s) => 354,
        (t, e, o, l, s) => 374,
        (t, e, o, l, s) => 386,
        (t, e, o, l, s) => 390,
        (t, e, o, l, s) => 394,
        (t, e, o, l, s) => 398,
        (t, e, o, l, s) => 402,
        (t, e, o, l, s) => 406,
        (t, e, o, l, s) => 410,
        (t, e, o, l, s) => 414,
        (t, e, o, l, s) => 422,
        (t, e, o, l, s) => 426,
        (t, e, o, l, s) => 430,
        (t, e, o, l, s) => 442,
        (t, e, o, l, s) => 446,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (S$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 5
        },
        (t, e, o, l, s) => 1031,
        (t, e, o, l, s) => 20487,
        (t, e, o, l, s) => 21511,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 22535
        },
        (t, e, o, l, s) => 23559,
        (t, e, o, l, s) => 24583,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.block_stmt(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 28679
        },
        (t, e, o, l, s) => 458,
        (t, e, o, l, s) => 482,
        (t, e, o, l, s) => 494,
        (t, e, o, l, s) => 498,
        (t, e, o, l, s) => 526,
        (t, e, o, l, s) => 530,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new empty_statement$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 30727
        },
        (t, e, o, l, s) => 534,
        (t, e, o, l, s) => 538,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 87047
        },
        (t, e, o, l, s) => 111623,
        (t, e, o, l, s) => 542,
        (t, e, o, l, s) => 126983,
        (t, e, o, l, s) => 550,
        (t, e, o, l, s) => 554,
        (t, e, o, l, s) => 558,
        (t, e, o, l, s) => 562,
        (t, e, o, l, s) => 566,
        (t, e, o, l, s) => 570,
        (t, e, o, l, s) => 574,
        (t, e, o, l, s) => 578,
        (t, e, o, l, s) => 582,
        (t, e, o, l, s) => 586,
        (t, e, o, l, s) => 590,
        (t, e, o, l, s) => 594,
        (t, e, o, l, s) => 598,
        (t, e, o, l, s) => 602,
        (t, e, o, l, s) => 113671,
        (t, e, o, l, s) => 606,
        (t, e, o, l, s) => 610,
        (t, e, o, l, s) => 114695,
        (t, e, o, l, s) => 614,
        (t, e, o, l, s) => 115719,
        (t, e, o, l, s) => 618,
        (t, e, o, l, s) => 116743,
        (t, e, o, l, s) => 117767,
        (t, e, o, l, s) => 622,
        (t, e, o, l, s) => 626,
        (t, e, o, l, s) => 118791,
        (t, e, o, l, s) => 630,
        (t, e, o, l, s) => 634,
        (t, e, o, l, s) => 638,
        (t, e, o, l, s) => 642,
        (t, e, o, l, s) => 119815,
        (t, e, o, l, s) => 646,
        (t, e, o, l, s) => 650,
        (t, e, o, l, s) => 654,
        (t, e, o, l, s) => 658,
        (t, e, o, l, s) => 662,
        (t, e, o, l, s) => 666,
        (t, e, o, l, s) => 120839,
        (t, e, o, l, s) => 670,
        (t, e, o, l, s) => 674,
        (t, e, o, l, s) => 678,
        (t, e, o, l, s) => 121863,
        (t, e, o, l, s) => 682,
        (t, e, o, l, s) => 686,
        (t, e, o, l, s) => 122887,
        (t, e, o, l, s) => 690,
        (t, e, o, l, s) => 694,
        (t, e, o, l, s) => 698,
        (t, e, o, l, s) => 123911,
        (t, e, o, l, s) => 124935,
        (t, e, o, l, s) => 702,
        (t, e, o, l, s) => 125959,
        (t, e, o, l, s) => 718,
        (t, e, o, l, s) => 88071,
        (t, e, o, l, s) => 754,
        (t, e, o, l, s) => 762,
        (t, e, o, l, s) => 766,
        (t, e, o, l, s) => 89095,
        (t, e, o, l, s) => 770,
        (t, e, o, l, s) => 774,
        (t, e, o, l, s) => 790,
        (t, e, o, l, s) => 90119,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.this_expr(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 98311
        },
        (t, e, o, l, s) => 98311,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.array_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 98311
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.obj_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 98311
        },
        (t, e, o, l, s) => 71687,
        (t, e, o, l, s) => 147463,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.yield_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 147463
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.await_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 147463
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.identifier(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 149511
        },
        (t, e, o, l, s) => 141319,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.bool_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 145415
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.null_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 144391
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.string_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 142343
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.numeric_literal(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 143367
        },
        (t, e, o, l, s) => 798,
        (t, e, o, l, s) => 810,
        (t, e, o, l, s) => 822,
        (t, e, o, l, s) => 62471,
        (t, e, o, l, s) => 826,
        (t, e, o, l, s) => 77831,
        (t, e, o, l, s) => 25607,
        (t, e, o, l, s) => 846,
        (t, e, o, l, s) => 850,
        (t, e, o, l, s) => 854,
        (t, e, o, l, s) => 862,
        (t, e, o, l, s) => 866,
        (t, e, o, l, s) => 870,
        (t, e, o, l, s) => 92167,
        (t, e, o, l, s) => 94215,
        (t, e, o, l, s) => 878,
        (t, e, o, l, s) => 882,
        (t, e, o, l, s) => 27655,
        (t, e, o, l, s) => 890,
        (t, e, o, l, s) => 894,
        (t, e, o, l, s) => 898,
        (t, e, o, l, s) => 902,
        (t, e, o, l, s) => 906,
        (t, e, o, l, s) => 918,
        (t, e, o, l, s) => 922,
        (t, e, o, l, s) => 926,
        (t, e, o, l, s) => 934,
        (t, e, o, l, s) => 942,
        (t, e, o, l, s) => 946,
        (t, e, o, l, s) => 958,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (let_or_const$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 58375
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (let_or_const$1(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 58375
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (statement_list$1(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 22539
        },
        (t, e, o, l, s) => 1010,
        (t, e, o, l, s) => 99339,
        (t, e, o, l, s) => 1014,
        (t, e, o, l, s) => 1018,
        (t, e, o, l, s) => 100359,
        (t, e, o, l, s) => 101383,
        (t, e, o, l, s) => 1034,
        (t, e, o, l, s) => 1038,
        (t, e, o, l, s) => 102407,
        (t, e, o, l, s) => 1050,
        (t, e, o, l, s) => 990,
        (t, e, o, l, s) => 1058,
        (t, e, o, l, s) => 1062,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (variable_declaration_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 55303
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (variable_declaration$1(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 56327
        },
        (t, e, o, l, s) => 1026,
        (t, e, o, l, s) => 35847,
        (t, e, o, l, s) => 130055,
        (t, e, o, l, s) => 1074,
        (t, e, o, l, s) => 1086,
        (t, e, o, l, s) => 1106,
        (t, e, o, l, s) => 1122,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (expression_statement$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 31755
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.post_inc_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 126987
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.post_dec_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 126987
        },
        (t, e, o, l, s) => 112647,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.delete_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.void_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.typeof_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.unary_or_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.negate_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.unary_not_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 125963
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.pre_inc_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 126987
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.pre_dec_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 126987
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.call_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 94219
        },
        (t, e, o, l, s) => 1262,
        (t, e, o, l, s) => 1274,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.call_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 76811
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.new_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 89099
        },
        (t, e, o, l, s) => 1290,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.await_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 128011
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (array_literal$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 107531
        },
        (t, e, o, l, s) => 1294,
        (t, e, o, l, s) => 1298,
        (t, e, o, l, s) => 1310,
        (t, e, o, l, s) => 1318,
        (t, e, o, l, s) => 109575,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 108551
        },
        (t, e, o, l, s) => { o.push(null); return 64515 },
        (t, e, o, l, s) => 1350,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.class_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 78859
        },
        (t, e, o, l, s) => 1358,
        (t, e, o, l, s) => 1366,
        (t, e, o, l, s) => 1382,
        (t, e, o, l, s) => 1386,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (arguments$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 129035
        },
        (t, e, o, l, s) => 1398,
        (t, e, o, l, s) => 1402,
        (t, e, o, l, s) => 1418,
        (t, e, o, l, s) => 1422,
        (t, e, o, l, s) => 95243,
        (t, e, o, l, s) => 1442,
        (t, e, o, l, s) => 1450,
        (t, e, o, l, s) => 1462,
        (t, e, o, l, s) => 1466,
        (t, e, o, l, s) => 1482,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.continue_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 36875
        },
        (t, e, o, l, s) => 1490,
        (t, e, o, l, s) => 146439,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.yield_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 146439
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.await_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 146439
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.break_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 37899
        },
        (t, e, o, l, s) => 1494,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.return_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 38923
        },
        (t, e, o, l, s) => 1498,
        (t, e, o, l, s) => 1518,
        (t, e, o, l, s) => 1530,
        (t, e, o, l, s) => 1534,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.debugger_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 53259
        },
        (t, e, o, l, s) => 1538,
        (t, e, o, l, s) => 1542,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (binding_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 59399
        },
        (t, e, o, l, s) => 103431,
        (t, e, o, l, s) => 994,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (block$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 29711
        },
        (t, e, o, l, s) => 99343,
        (t, e, o, l, s) => 1574,
        (t, e, o, l, s) => 105483,
        (t, e, o, l, s) => 1586,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.spread_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 101387
        },
        (t, e, o, l, s) => 1602,
        (t, e, o, l, s) => 1606,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.var_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 54287
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (variable_declaration$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 56331
        },
        (t, e, o, l, s) => 131083,
        (t, e, o, l, s) => 1614,
        (t, e, o, l, s) => 1618,
        (t, e, o, l, s) => 1622,
        (t, e, o, l, s) => 134151,
        (t, e, o, l, s) => 137223,
        (t, e, o, l, s) => 1630,
        (t, e, o, l, s) => 139271,
        (t, e, o, l, s) => 132107,
        (t, e, o, l, s) => 1642,
        (t, e, o, l, s) => 1650,
        (t, e, o, l, s) => 1654,
        (t, e, o, l, s) => 1658,
        (t, e, o, l, s) => 135175,
        (t, e, o, l, s) => 136199,
        (t, e, o, l, s) => 138247,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (expression$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 87055
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.assignment_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 111631
        },
        (t, e, o, l, s) => 1674,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.or_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 114703
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.and_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 115727
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.b_or_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 116751
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.b_xor_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 117775
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.b_and_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 118799
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.eqality_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 119823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.neqality_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 119823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.eq_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 119823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.neq_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 119823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.lt_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.gt_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.gr_eq_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.lt_eq_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.instanceof_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.in_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 120847
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.l_shift_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 121871
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.r_shift_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 121871
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.r_shift_fill_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 121871
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.add_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 122895
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.sub_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 122895
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.mult_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 123919
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.div_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 123919
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.mod_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 123919
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.expo_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 124943
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.call_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 94223
        },
        (t, e, o, l, s) => 1678,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (arguments$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 96267
        },
        (t, e, o, l, s) => 1682,
        (t, e, o, l, s) => 1686,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 97287
        },
        (t, e, o, l, s) => 1694,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.member_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 90127
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.new_member_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 90127
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.new_target_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 93199
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (array_literal$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 107535
        },
        (t, e, o, l, s) => 109579,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (element_list$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 108555
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (block$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 107535
        },
        (t, e, o, l, s) => 1698,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.spread_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 110603
        },
        (t, e, o, l, s) => 1714,
        (t, e, o, l, s) => 64519,
        (t, e, o, l, s) => 1718,
        (t, e, o, l, s) => 66567,
        (t, e, o, l, s) => 65543,
        (t, e, o, l, s) => 67591,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.class_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 78863
        },
        (t, e, o, l, s) => 1730,
        (t, e, o, l, s) => 1734,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (class_tail$3(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 79883
        },
        (t, e, o, l, s) => 81927,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 82951
        },
        (t, e, o, l, s) => 83975,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (block$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 80907
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (element_list$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 129039
        },
        (t, e, o, l, s) => 1746,
        (t, e, o, l, s) => 1750,
        (t, e, o, l, s) => 1754,
        (t, e, o, l, s) => 1758,
        (t, e, o, l, s) => 148487,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.yield_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 148487
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (new e.functions.await_id(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 148487
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.supper_expr(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 91151
        },
        (t, e, o, l, s) => 1762,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.arrow(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 70671
        },
        (t, e, o, l, s) => 72711,
        (t, e, o, l, s) => 1770,
        (t, e, o, l, s) => 1778,
        (t, e, o, l, s) => 1782,
        (t, e, o, l, s) => 1786,
        (t, e, o, l, s) => 1790,
        (t, e, o, l, s) => 1798,
        (t, e, o, l, s) => 1810,
        (t, e, o, l, s) => 1814,
        (t, e, o, l, s) => 1818,
        (t, e, o, l, s) => 1822,
        (t, e, o, l, s) => 1826,
        (t, e, o, l, s) => 1842,
        (t, e, o, l, s) => 1854,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (continue_statement$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 36879
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (break_statement$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 37903
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (return_statement$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 38927
        },
        (t, e, o, l, s) => 1858,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.label_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 46095
        },
        (t, e, o, l, s) => 47111,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.throw_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 48143
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (try_statement$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 49167
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (try_statement$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 49167
        },
        (t, e, o, l, s) => 1866,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (new e.functions.lex_stmt(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 57359
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (variable_declaration$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 60427
        },
        (t, e, o, l, s) => 1878,
        (t, e, o, l, s) => 1882,
        (t, e, o, l, s) => 99347,
        (t, e, o, l, s) => 100367,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (block$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 106507
        },
        (t, e, o, l, s) => 104463,
        (t, e, o, l, s) => 101391,
        (t, e, o, l, s) => 1894,
        (t, e, o, l, s) => 63495,
        (t, e, o, l, s) => 1898,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (variable_declaration_list$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 55311
        },
        (t, e, o, l, s) => 131087,
        (t, e, o, l, s) => 1914,
        (t, e, o, l, s) => 133131,
        (t, e, o, l, s) => 139275,
        (t, e, o, l, s) => 1926,
        (t, e, o, l, s) => 132111,
        (t, e, o, l, s) => 136203,
        (t, e, o, l, s) => 1930,
        (t, e, o, l, s) => 140299,
        (t, e, o, l, s) => 138251,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (new e.functions.call_expr(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 94227
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (block$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 96271
        },
        (t, e, o, l, s) => 1950,
        (t, e, o, l, s) => 1958,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.spread_expr(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 97291
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (new e.functions.member_expr(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 90131
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (block$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 107539
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (element_list$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 108559
        },
        (t, e, o, l, s) => 1966,
        (t, e, o, l, s) => 64523,
        (t, e, o, l, s) => 1978,
        (t, e, o, l, s) => 1982,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (class_tail$2(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 79887
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (class_tail$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 79887
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (class_element_list$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 82955
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (class_element$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 83979
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (element_list$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 129043
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (cover_parenthesized_expression_and_arrow_parameter_list$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 129043
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (new e.functions.supper_expr(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 91155
        },
        (t, e, o, l, s) => 1994,
        (t, e, o, l, s) => 72715,
        (t, e, o, l, s) => 69639,
        (t, e, o, l, s) => 2014,
        (t, e, o, l, s) => 2018,
        (t, e, o, l, s) => 2026,
        (t, e, o, l, s) => 2030,
        (t, e, o, l, s) => 2034,
        (t, e, o, l, s) => 2038,
        (t, e, o, l, s) => 2046,
        (t, e, o, l, s) => 34827,
        (t, e, o, l, s) => 2066,
        (t, e, o, l, s) => 2074,
        (t, e, o, l, s) => 2082,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (try_statement$2(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 49171
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (new e.functions.finally_stmt(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 51211
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (binding_list$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 59407
        },
        (t, e, o, l, s) => 2110,
        (t, e, o, l, s) => 2118,
        (t, e, o, l, s) => 2122,
        (t, e, o, l, s) => 2126,
        (t, e, o, l, s) => 86023,
        (t, e, o, l, s) => 2130,
        (t, e, o, l, s) => 131091,
        (t, e, o, l, s) => 134159,
        (t, e, o, l, s) => 137231,
        (t, e, o, l, s) => 132115,
        (t, e, o, l, s) => 2134,
        (t, e, o, l, s) => 2142,
        (t, e, o, l, s) => 135183,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (new e.functions.condition_expr(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 113687
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (block$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 96275
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (expression$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 97295
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (element_list$1(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 108563
        },
        (t, e, o, l, s) => { o.push(null); return 68611 },
        (t, e, o, l, s) => 64527,
        (t, e, o, l, s) => 65551,
        (t, e, o, l, s) => 2158,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (class_tail$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 79891
        },
        (t, e, o, l, s) => 2162,
        (t, e, o, l, s) => 2166,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (block$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 72719
        },
        (t, e, o, l, s) => 2170,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (if_statement$1(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 32791
        },
        (t, e, o, l, s) => 2174,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (new e.functions.while_stmt(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 33815
        },
        (t, e, o, l, s) => 2178,
        (t, e, o, l, s) => 2186,
        (t, e, o, l, s) => 2194,
        (t, e, o, l, s) => 2206,
        (t, e, o, l, s) => 2218,
        (t, e, o, l, s) => 2226,
        (t, e, o, l, s) => 2230,
        (t, e, o, l, s) => 2234,
        (t, e, o, l, s) => 2238,
        (t, e, o, l, s) => 2242,
        (t, e, o, l, s) => 2250,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (new e.functions.switch_stmt(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 40983
        },
        (t, e, o, l, s) => 2258,
        (t, e, o, l, s) => 2274,
        (t, e, o, l, s) => 2278,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (new e.functions.with_stmt(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 39959
        },
        (t, e, o, l, s) => 2282,
        (t, e, o, l, s) => 52231,
        (t, e, o, l, s) => 2286,
        (t, e, o, l, s) => 2294,
        (t, e, o, l, s) => 2306,
        (t, e, o, l, s) => 131095,
        (t, e, o, l, s) => 132119,
        (t, e, o, l, s) => 2310,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (argument_list$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 97299
        },
        (t, e, o, l, s) => 2314,
        (t, e, o, l, s) => 68615,
        (t, e, o, l, s) => 129051,
        (t, e, o, l, s) => 2326,
        (t, e, o, l, s) => 2334,
        (t, e, o, l, s) => 2338,
        (t, e, o, l, s) => 2346,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 6, 0);
            o[ln] = (iteration_statement$6(o.slice(-6), e, l, s));
            o.length = ln + 1;;
            return 33819
        },
        (t, e, o, l, s) => 2354,
        (t, e, o, l, s) => 2362,
        (t, e, o, l, s) => 2366,
        (t, e, o, l, s) => 2370,
        (t, e, o, l, s) => 2378,
        (t, e, o, l, s) => 2382,
        (t, e, o, l, s) => 2406,
        (t, e, o, l, s) => 2414,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (case_block$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 41995
        },
        (t, e, o, l, s) => 2422,
        (t, e, o, l, s) => 2434,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (statement_list$0(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 43015
        },
        (t, e, o, l, s) => 2442,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 1, 0);
            o[ln] = (default_clause$1(o.slice(-1), e, l, s));
            o.length = ln + 1;;
            return 45063
        },
        (t, e, o, l, s) => 2450,
        (t, e, o, l, s) => 2458,
        (t, e, o, l, s) => 2462,
        (t, e, o, l, s) => 132123,
        (t, e, o, l, s) => 61471,
        (t, e, o, l, s) => 2470,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (if_statement$0(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 32799
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (new e.functions.do_while_stmt(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 33823
        },
        (t, e, o, l, s) => 2474,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (iteration_statement$5(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 33823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (iteration_statement$2(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 33823
        },
        (t, e, o, l, s) => 2494,
        (t, e, o, l, s) => 2498,
        (t, e, o, l, s) => 2514,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (iteration_statement$11(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 33823
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (iteration_statement$13(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 33823
        },
        (t, e, o, l, s) => 2530,
        (t, e, o, l, s) => 2542,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (block$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 41999
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 2, 0);
            o[ln] = (case_clauses$0(o.slice(-2), e, l, s));
            o.length = ln + 1;;
            return 43019
        },
        (t, e, o, l, s) => 2546,
        (t, e, o, l, s) => 2550,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (new e.functions.catch_stmt(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 50199
        },
        (t, e, o, l, s) => 2558,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (new e.functions.class_method(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 85023
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 7, 0);
            o[ln] = (new e.functions.class_get_method(o.slice(-7), e, l, s));
            o.length = ln + 1;;
            return 85023
        },
        (t, e, o, l, s) => 2562,
        (t, e, o, l, s) => 61475,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$4(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$3(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$1(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => 2570,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$10(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$12(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$13(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (iteration_statement$14(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 33827
        },
        (t, e, o, l, s) => 2590,
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (case_block$2(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 42003
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (case_clause$1(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 44047
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 3, 0);
            o[ln] = (default_clause$0(o.slice(-3), e, l, s));
            o.length = ln + 1;;
            return 45071
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 8, 0);
            o[ln] = (new e.functions.class_set_method(o.slice(-8), e, l, s));
            o.length = ln + 1;;
            return 85027
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 9, 0);
            o[ln] = (iteration_statement$0(o.slice(-9), e, l, s));
            o.length = ln + 1;;
            return 33831
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 9, 0);
            o[ln] = (iteration_statement$8(o.slice(-9), e, l, s));
            o.length = ln + 1;;
            return 33831
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 9, 0);
            o[ln] = (iteration_statement$9(o.slice(-9), e, l, s));
            o.length = ln + 1;;
            return 33831
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 9, 0);
            o[ln] = (iteration_statement$15(o.slice(-9), e, l, s));
            o.length = ln + 1;;
            return 33831
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 5, 0);
            o[ln] = (case_block$1(o.slice(-5), e, l, s));
            o.length = ln + 1;;
            return 42007
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 4, 0);
            o[ln] = (case_clause$0(o.slice(-4), e, l, s));
            o.length = ln + 1;;
            return 44051
        },
        (t, e, o, l, s) => {
            let ln = Math.max(o.length - 10, 0);
            o[ln] = (iteration_statement$7(o.slice(-10), e, l, s));
            o.length = ln + 1;;
            return 33835
        }
    ],
    rec = [0,
        0,
        4,
        80,
        84,
        88,
        92,
        92,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        96,
        112,
        116,
        212,
        120,
        124,
        340,
        436,
        436,
        436,
        444,
        448,
        452,
        456,
        460,
        464,
        468,
        472,
        476,
        480,
        484,
        488,
        488,
        492,
        492,
        492,
        492,
        492,
        492,
        492,
        492,
        496,
        496,
        344,
        344,
        348,
        348,
        352,
        352,
        352,
        384,
        384,
        384,
        384,
        384,
        384,
        384,
        384,
        576,
        576,
        576,
        584,
        552,
        552,
        552,
        552,
        568,
        568,
        564,
        556,
        560,
        420,
        244,
        240,
        304,
        308,
        504,
        356,
        360,
        368,
        368,
        276,
        128,
        108,
        108,
        132,
        132,
        132,
        160,
        144,
        148,
        152,
        156,
        180,
        188,
        192,
        208,
        100,
        224,
        228,
        228,
        88,
        116,
        388,
        388,
        392,
        396,
        396,
        396,
        396,
        400,
        400,
        332,
        332,
        212,
        216,
        220,
        220,
        508,
        508,
        512,
        516,
        124,
        340,
        436,
        436,
        496,
        496,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        440,
        444,
        448,
        452,
        456,
        460,
        464,
        468,
        468,
        468,
        468,
        472,
        472,
        472,
        472,
        472,
        472,
        476,
        476,
        476,
        480,
        480,
        484,
        484,
        484,
        488,
        492,
        492,
        496,
        388,
        492,
        492,
        492,
        492,
        492,
        492,
        496,
        496,
        368,
        368,
        368,
        376,
        352,
        352,
        300,
        348,
        352,
        364,
        500,
        420,
        420,
        420,
        428,
        424,
        424,
        432,
        240,
        240,
        308,
        308,
        312,
        312,
        316,
        504,
        504,
        504,
        356,
        356,
        372,
        276,
        128,
        132,
        132,
        132,
        132,
        160,
        144,
        144,
        572,
        572,
        572,
        148,
        148,
        152,
        152,
        156,
        180,
        188,
        192,
        208,
        224,
        232,
        236,
        236,
        396,
        404,
        404,
        408,
        352,
        128,
        132,
        192,
        116,
        388,
        388,
        412,
        416,
        408,
        396,
        332,
        396,
        332,
        404,
        332,
        212,
        216,
        220,
        220,
        512,
        512,
        512,
        520,
        524,
        536,
        536,
        544,
        516,
        516,
        516,
        516,
        548,
        528,
        532,
        540,
        540,
        340,
        436,
        436,
        444,
        448,
        452,
        456,
        460,
        464,
        468,
        468,
        468,
        468,
        472,
        472,
        472,
        472,
        472,
        472,
        476,
        476,
        476,
        480,
        480,
        484,
        484,
        484,
        488,
        368,
        368,
        376,
        376,
        380,
        380,
        352,
        352,
        352,
        364,
        420,
        428,
        424,
        424,
        420,
        420,
        424,
        432,
        240,
        252,
        252,
        260,
        256,
        264,
        240,
        308,
        312,
        312,
        312,
        320,
        324,
        328,
        328,
        328,
        332,
        316,
        504,
        504,
        504,
        504,
        580,
        580,
        580,
        356,
        356,
        276,
        284,
        284,
        128,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        160,
        144,
        148,
        152,
        156,
        180,
        184,
        184,
        188,
        192,
        192,
        196,
        200,
        224,
        232,
        236,
        236,
        312,
        128,
        132,
        132,
        192,
        388,
        392,
        416,
        408,
        396,
        332,
        248,
        332,
        332,
        216,
        512,
        512,
        512,
        520,
        536,
        544,
        516,
        516,
        532,
        516,
        516,
        516,
        548,
        548,
        540,
        444,
        368,
        376,
        376,
        380,
        352,
        420,
        424,
        424,
        424,
        240,
        252,
        240,
        312,
        312,
        312,
        324,
        328,
        504,
        504,
        504,
        504,
        356,
        284,
        284,
        272,
        128,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        136,
        140,
        132,
        132,
        132,
        136,
        160,
        156,
        192,
        196,
        200,
        232,
        128,
        132,
        132,
        132,
        332,
        332,
        332,
        336,
        512,
        512,
        524,
        536,
        516,
        516,
        516,
        516,
        528,
        444,
        376,
        380,
        380,
        424,
        240,
        252,
        256,
        240,
        312,
        504,
        504,
        284,
        128,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        160,
        164,
        156,
        196,
        204,
        424,
        128,
        132,
        132,
        132,
        332,
        332,
        332,
        512,
        516,
        516,
        516,
        380,
        240,
        268,
        240,
        504,
        504,
        128,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        164,
        164,
        164,
        168,
        172,
        176,
        196,
        132,
        132,
        132,
        332,
        332,
        332,
        516,
        240,
        240,
        128,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        164,
        164,
        168,
        164,
        164,
        172,
        176,
        196,
        132,
        172,
        332,
        332,
        332,
        240,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        132,
        164,
        164,
        164,
        172,
        176,
        172,
        332,
        132,
        132,
        132,
        132,
        132,
        132,
        164,
        172,
        132
    ],
    sm = [new Map([
            ["$", 1],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["$", 43]
        ]),
        new Map([
            ["$", 44]
        ]),
        new Map([
            ["$", 45]
        ]),
        new Map([
            ["$", 46],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["$", 47],
            ["{", 47],
            ["τvar", 47],
            [";", 47],
            ["τthis", 47],
            ["θid", 47],
            ["τyield", 47],
            ["τawait", 47],
            ["τtrue", 47],
            ["τfalse", 47],
            ["τnull", 47],
            ["θstr", 47],
            ["θnum", 47],
            ["[", 47],
            ["τfunction", 47],
            ["τclass", 47],
            ["(", 47],
            ["τsuper", 47],
            ["τnew", 47],
            ["++", 47],
            ["--", 47],
            ["τdelete", 47],
            ["τvoid", 47],
            ["τtypeof", 47],
            ["+", 47],
            ["-", 47],
            ["~", 47],
            ["!", 47],
            ["τif", 47],
            ["τdo", 47],
            ["τwhile", 47],
            ["τfor", 47],
            ["τswitch", 47],
            ["τcontinue", 47],
            ["τbreak", 47],
            ["τreturn", 47],
            ["τwith", 47],
            ["τthrow", 47],
            ["τtry", 47],
            ["τdebugger", 47],
            ["τlet", 47],
            ["τconst", 47],
            ["}", 47],
            ["τcase", 47],
            ["τdefault", 47]
        ]),
        new Map([
            ["$", 48],
            ["{", 48],
            ["τvar", 48],
            [";", 48],
            ["τthis", 48],
            ["θid", 48],
            ["τyield", 48],
            ["τawait", 48],
            ["τtrue", 48],
            ["τfalse", 48],
            ["τnull", 48],
            ["θstr", 48],
            ["θnum", 48],
            ["[", 48],
            ["τfunction", 48],
            ["τclass", 48],
            ["(", 48],
            ["τsuper", 48],
            ["τnew", 48],
            ["++", 48],
            ["--", 48],
            ["τdelete", 48],
            ["τvoid", 48],
            ["τtypeof", 48],
            ["+", 48],
            ["-", 48],
            ["~", 48],
            ["!", 48],
            ["τif", 48],
            ["τdo", 48],
            ["τwhile", 48],
            ["τfor", 48],
            ["τswitch", 48],
            ["τcontinue", 48],
            ["τbreak", 48],
            ["τreturn", 48],
            ["τwith", 48],
            ["τthrow", 48],
            ["τtry", 48],
            ["τdebugger", 48],
            ["τlet", 48],
            ["τconst", 48],
            ["}", 48],
            ["τcase", 48],
            ["τdefault", 48]
        ]),
        new Map([
            ["$", 49],
            ["{", 49],
            ["τvar", 49],
            [";", 49],
            ["τthis", 49],
            ["θid", 49],
            ["τyield", 49],
            ["τawait", 49],
            ["τtrue", 49],
            ["τfalse", 49],
            ["τnull", 49],
            ["θstr", 49],
            ["θnum", 49],
            ["[", 49],
            ["τfunction", 49],
            ["τclass", 49],
            ["(", 49],
            ["τsuper", 49],
            ["τnew", 49],
            ["++", 49],
            ["--", 49],
            ["τdelete", 49],
            ["τvoid", 49],
            ["τtypeof", 49],
            ["+", 49],
            ["-", 49],
            ["~", 49],
            ["!", 49],
            ["τif", 49],
            ["τdo", 49],
            ["τwhile", 49],
            ["τfor", 49],
            ["τswitch", 49],
            ["τcontinue", 49],
            ["τbreak", 49],
            ["τreturn", 49],
            ["τwith", 49],
            ["τthrow", 49],
            ["τtry", 49],
            ["τdebugger", 49],
            ["τlet", 49],
            ["τconst", 49],
            ["}", 49],
            ["τelse", 49],
            [")", 49],
            ["τcase", 49],
            ["τdefault", 49]
        ]),
        new Map([
            ["$", 50],
            ["{", 50],
            ["τvar", 50],
            [";", 50],
            ["τthis", 50],
            ["θid", 50],
            ["τyield", 50],
            ["τawait", 50],
            ["τtrue", 50],
            ["τfalse", 50],
            ["τnull", 50],
            ["θstr", 50],
            ["θnum", 50],
            ["[", 50],
            ["τfunction", 50],
            ["τclass", 50],
            ["(", 50],
            ["τsuper", 50],
            ["τnew", 50],
            ["++", 50],
            ["--", 50],
            ["τdelete", 50],
            ["τvoid", 50],
            ["τtypeof", 50],
            ["+", 50],
            ["-", 50],
            ["~", 50],
            ["!", 50],
            ["τif", 50],
            ["τdo", 50],
            ["τwhile", 50],
            ["τfor", 50],
            ["τswitch", 50],
            ["τcontinue", 50],
            ["τbreak", 50],
            ["τreturn", 50],
            ["τwith", 50],
            ["τthrow", 50],
            ["τtry", 50],
            ["τdebugger", 50],
            ["τlet", 50],
            ["τconst", 50],
            ["}", 50],
            ["τelse", 50],
            [")", 50],
            ["τcase", 50],
            ["τdefault", 50]
        ]),
        new Map([
            ["}", 51],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42],
            ["...", 52],
            ["τget", 53],
            ["τset", 54]
        ]),
        new Map([
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["$", 57],
            ["{", 57],
            ["τvar", 57],
            [";", 57],
            ["τthis", 57],
            ["θid", 57],
            ["τyield", 57],
            ["τawait", 57],
            ["τtrue", 57],
            ["τfalse", 57],
            ["τnull", 57],
            ["θstr", 57],
            ["θnum", 57],
            ["[", 57],
            ["τfunction", 57],
            ["τclass", 57],
            ["(", 57],
            ["τsuper", 57],
            ["τnew", 57],
            ["++", 57],
            ["--", 57],
            ["τdelete", 57],
            ["τvoid", 57],
            ["τtypeof", 57],
            ["+", 57],
            ["-", 57],
            ["~", 57],
            ["!", 57],
            ["τif", 57],
            ["τdo", 57],
            ["τwhile", 57],
            ["τfor", 57],
            ["τswitch", 57],
            ["τcontinue", 57],
            ["τbreak", 57],
            ["τreturn", 57],
            ["τwith", 57],
            ["τthrow", 57],
            ["τtry", 57],
            ["τdebugger", 57],
            ["τlet", 57],
            ["τconst", 57],
            ["}", 57],
            ["τelse", 57],
            [")", 57],
            ["τcase", 57],
            ["τdefault", 57]
        ]),
        new Map([
            [";", 58],
            [",", 59]
        ]),
        new Map([
            [";", 60],
            [",", 60],
            [")", 60],
            ["]", 60],
            [":", 60]
        ]),
        new Map([
            [";", 61],
            [",", 61],
            ["]", 61],
            [")", 61],
            ["}", 61],
            [":", 61]
        ]),
        new Map([
            ["=", 62],
            [";", 63],
            ["++", 64],
            ["--", 65],
            ["**", 63],
            ["*", 63],
            ["/", 63],
            ["%", 63],
            ["+", 63],
            ["-", 63],
            ["<<", 63],
            [">>", 63],
            [">>>", 63],
            ["<", 63],
            [">", 63],
            ["<=", 63],
            [">=", 63],
            ["τinstanceof", 63],
            ["τin", 63],
            ["==", 63],
            ["!=", 63],
            ["===", 63],
            ["!==", 63],
            ["&", 63],
            ["^", 63],
            ["|", 63],
            ["&&", 63],
            ["||", 63],
            ["?", 63],
            [",", 63],
            ["*=", 66],
            ["/=", 67],
            ["%=", 68],
            ["+=", 69],
            ["-=", 70],
            ["<<=", 71],
            [">>=", 72],
            [">>>=", 73],
            ["&=", 74],
            ["^=", 75],
            ["|=", 76],
            ["**=", 77],
            ["]", 63],
            [")", 63],
            ["}", 63],
            [":", 63]
        ]),
        new Map([
            [";", 78],
            ["?", 79],
            ["||", 80],
            [",", 78],
            ["]", 78],
            [")", 78],
            ["}", 78],
            [":", 78]
        ]),
        new Map([
            [";", 81],
            ["&&", 82],
            ["||", 81],
            ["?", 81],
            [",", 81],
            ["]", 81],
            [")", 81],
            ["}", 81],
            [":", 81]
        ]),
        new Map([
            [";", 83],
            ["|", 84],
            ["&&", 83],
            ["||", 83],
            ["?", 83],
            [",", 83],
            ["]", 83],
            [")", 83],
            ["}", 83],
            [":", 83]
        ]),
        new Map([
            [";", 85],
            ["|", 85],
            ["&&", 85],
            ["||", 85],
            ["?", 85],
            [",", 85],
            ["]", 85],
            [")", 85],
            ["}", 85],
            [":", 85]
        ]),
        new Map([
            [";", 86],
            ["^", 87],
            ["&", 88],
            ["|", 86],
            ["&&", 86],
            ["||", 86],
            ["?", 86],
            [",", 86],
            ["]", 86],
            [")", 86],
            ["}", 86],
            [":", 86]
        ]),
        new Map([
            [";", 89],
            ["==", 90],
            ["!=", 91],
            ["===", 92],
            ["!==", 93],
            ["&", 89],
            ["^", 89],
            ["|", 89],
            ["&&", 89],
            ["||", 89],
            ["?", 89],
            [",", 89],
            ["]", 89],
            [")", 89],
            ["}", 89],
            [":", 89]
        ]),
        new Map([
            [";", 94],
            ["<", 95],
            [">", 96],
            ["<=", 97],
            [">=", 98],
            ["τinstanceof", 99],
            ["τin", 100],
            ["==", 94],
            ["!=", 94],
            ["===", 94],
            ["!==", 94],
            ["&", 94],
            ["^", 94],
            ["|", 94],
            ["&&", 94],
            ["||", 94],
            ["?", 94],
            [",", 94],
            ["]", 94],
            [")", 94],
            ["}", 94],
            [":", 94]
        ]),
        new Map([
            [";", 101],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["<", 101],
            [">", 101],
            ["<=", 101],
            [">=", 101],
            ["τinstanceof", 101],
            ["τin", 101],
            ["==", 101],
            ["!=", 101],
            ["===", 101],
            ["!==", 101],
            ["&", 101],
            ["^", 101],
            ["|", 101],
            ["&&", 101],
            ["||", 101],
            ["?", 101],
            [",", 101],
            ["]", 101],
            [")", 101],
            ["}", 101],
            [":", 101]
        ]),
        new Map([
            [";", 105],
            ["+", 106],
            ["-", 107],
            ["<<", 105],
            [">>", 105],
            [">>>", 105],
            ["<", 105],
            [">", 105],
            ["<=", 105],
            [">=", 105],
            ["τinstanceof", 105],
            ["τin", 105],
            ["==", 105],
            ["!=", 105],
            ["===", 105],
            ["!==", 105],
            ["&", 105],
            ["^", 105],
            ["|", 105],
            ["&&", 105],
            ["||", 105],
            ["?", 105],
            [",", 105],
            ["]", 105],
            [")", 105],
            ["}", 105],
            [":", 105]
        ]),
        new Map([
            [";", 108],
            ["*", 109],
            ["/", 110],
            ["%", 111],
            ["+", 108],
            ["-", 108],
            ["<<", 108],
            [">>", 108],
            [">>>", 108],
            ["<", 108],
            [">", 108],
            ["<=", 108],
            [">=", 108],
            ["τinstanceof", 108],
            ["τin", 108],
            ["==", 108],
            ["!=", 108],
            ["===", 108],
            ["!==", 108],
            ["&", 108],
            ["^", 108],
            ["|", 108],
            ["&&", 108],
            ["||", 108],
            ["?", 108],
            [",", 108],
            ["]", 108],
            [")", 108],
            ["}", 108],
            [":", 108]
        ]),
        new Map([
            [";", 112],
            ["*", 112],
            ["/", 112],
            ["%", 112],
            ["+", 112],
            ["-", 112],
            ["<<", 112],
            [">>", 112],
            [">>>", 112],
            ["<", 112],
            [">", 112],
            ["<=", 112],
            [">=", 112],
            ["τinstanceof", 112],
            ["τin", 112],
            ["==", 112],
            ["!=", 112],
            ["===", 112],
            ["!==", 112],
            ["&", 112],
            ["^", 112],
            ["|", 112],
            ["&&", 112],
            ["||", 112],
            ["?", 112],
            [",", 112],
            ["]", 112],
            [")", 112],
            ["}", 112],
            [":", 112]
        ]),
        new Map([
            [";", 113],
            ["*", 113],
            ["/", 113],
            ["%", 113],
            ["+", 113],
            ["-", 113],
            ["<<", 113],
            [">>", 113],
            [">>>", 113],
            ["<", 113],
            [">", 113],
            ["<=", 113],
            [">=", 113],
            ["τinstanceof", 113],
            ["τin", 113],
            ["==", 113],
            ["!=", 113],
            ["===", 113],
            ["!==", 113],
            ["&", 113],
            ["^", 113],
            ["|", 113],
            ["&&", 113],
            ["||", 113],
            ["?", 113],
            [",", 113],
            ["]", 113],
            [")", 113],
            ["}", 113],
            [":", 113]
        ]),
        new Map([
            ["**", 114],
            [";", 115],
            ["*", 115],
            ["/", 115],
            ["%", 115],
            ["+", 115],
            ["-", 115],
            ["<<", 115],
            [">>", 115],
            [">>>", 115],
            ["<", 115],
            [">", 115],
            ["<=", 115],
            [">=", 115],
            ["τinstanceof", 115],
            ["τin", 115],
            ["==", 115],
            ["!=", 115],
            ["===", 115],
            ["!==", 115],
            ["&", 115],
            ["^", 115],
            ["|", 115],
            ["&&", 115],
            ["||", 115],
            ["?", 115],
            [",", 115],
            ["]", 115],
            [")", 115],
            ["}", 115],
            [":", 115]
        ]),
        new Map([
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 115],
            ["*", 115],
            ["/", 115],
            ["%", 115],
            ["+", 115],
            ["-", 115],
            ["<<", 115],
            [">>", 115],
            [">>>", 115],
            ["<", 115],
            [">", 115],
            ["<=", 115],
            [">=", 115],
            ["τinstanceof", 115],
            ["τin", 115],
            ["==", 115],
            ["!=", 115],
            ["===", 115],
            ["!==", 115],
            ["&", 115],
            ["^", 115],
            ["|", 115],
            ["&&", 115],
            ["||", 115],
            ["?", 115],
            [",", 115],
            ["**", 115],
            ["]", 115],
            [")", 115],
            ["}", 115],
            [":", 115]
        ]),
        new Map([
            [";", 117],
            ["++", 117],
            ["--", 117],
            ["**", 117],
            ["*", 117],
            ["/", 117],
            ["%", 117],
            ["+", 117],
            ["-", 117],
            ["<<", 117],
            [">>", 117],
            [">>>", 117],
            ["<", 117],
            [">", 117],
            ["<=", 117],
            [">=", 117],
            ["τinstanceof", 117],
            ["τin", 117],
            ["==", 117],
            ["!=", 117],
            ["===", 117],
            ["!==", 117],
            ["&", 117],
            ["^", 117],
            ["|", 117],
            ["&&", 117],
            ["||", 117],
            ["?", 117],
            ["=", 117],
            ["*=", 117],
            ["/=", 117],
            ["%=", 117],
            ["+=", 117],
            ["-=", 117],
            ["<<=", 117],
            [">>=", 117],
            [">>>=", 117],
            ["&=", 117],
            ["^=", 117],
            ["|=", 117],
            ["**=", 117],
            [",", 117],
            ["]", 117],
            [")", 117],
            ["}", 117],
            [":", 117],
            ["{", 117],
            ["τof", 117]
        ]),
        new Map([
            [";", 117],
            [".", 118],
            ["[", 119],
            ["++", 117],
            ["--", 117],
            ["**", 117],
            ["*", 117],
            ["/", 117],
            ["%", 117],
            ["+", 117],
            ["-", 117],
            ["<<", 117],
            [">>", 117],
            [">>>", 117],
            ["<", 117],
            [">", 117],
            ["<=", 117],
            [">=", 117],
            ["τinstanceof", 117],
            ["τin", 117],
            ["==", 117],
            ["!=", 117],
            ["===", 117],
            ["!==", 117],
            ["&", 117],
            ["^", 117],
            ["|", 117],
            ["&&", 117],
            ["||", 117],
            ["?", 117],
            ["=", 117],
            ["*=", 117],
            ["/=", 117],
            ["%=", 117],
            ["+=", 117],
            ["-=", 117],
            ["<<=", 117],
            [">>=", 117],
            [">>>=", 117],
            ["&=", 117],
            ["^=", 117],
            ["|=", 117],
            ["**=", 117],
            [",", 117],
            ["(", 120],
            ["]", 117],
            [")", 117],
            ["}", 117],
            [":", 117],
            ["{", 117],
            ["τof", 117]
        ]),
        new Map([
            [";", 121],
            ["[", 122],
            [".", 123],
            ["++", 121],
            ["--", 121],
            ["**", 121],
            ["*", 121],
            ["/", 121],
            ["%", 121],
            ["+", 121],
            ["-", 121],
            ["<<", 121],
            [">>", 121],
            [">>>", 121],
            ["<", 121],
            [">", 121],
            ["<=", 121],
            [">=", 121],
            ["τinstanceof", 121],
            ["τin", 121],
            ["==", 121],
            ["!=", 121],
            ["===", 121],
            ["!==", 121],
            ["&", 121],
            ["^", 121],
            ["|", 121],
            ["&&", 121],
            ["||", 121],
            ["?", 121],
            ["=", 121],
            ["*=", 121],
            ["/=", 121],
            ["%=", 121],
            ["+=", 121],
            ["-=", 121],
            ["<<=", 121],
            [">>=", 121],
            [">>>=", 121],
            ["&=", 121],
            ["^=", 121],
            ["|=", 121],
            ["**=", 121],
            [",", 121],
            ["(", 120],
            ["]", 121],
            [")", 121],
            ["}", 121],
            [":", 121],
            ["{", 121],
            ["τof", 121]
        ]),
        new Map([
            [".", 124],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 125],
            ["[", 125],
            [".", 125],
            ["(", 125],
            ["++", 125],
            ["--", 125],
            ["**", 125],
            ["*", 125],
            ["/", 125],
            ["%", 125],
            ["+", 125],
            ["-", 125],
            ["<<", 125],
            [">>", 125],
            [">>>", 125],
            ["<", 125],
            [">", 125],
            ["<=", 125],
            [">=", 125],
            ["τinstanceof", 125],
            ["τin", 125],
            ["==", 125],
            ["!=", 125],
            ["===", 125],
            ["!==", 125],
            ["&", 125],
            ["^", 125],
            ["|", 125],
            ["&&", 125],
            ["||", 125],
            ["?", 125],
            ["=", 125],
            ["*=", 125],
            ["/=", 125],
            ["%=", 125],
            ["+=", 125],
            ["-=", 125],
            ["<<=", 125],
            [">>=", 125],
            [">>>=", 125],
            ["&=", 125],
            ["^=", 125],
            ["|=", 125],
            ["**=", 125],
            [",", 125],
            ["]", 125],
            [")", 125],
            ["}", 125],
            [":", 125],
            ["{", 125],
            ["τof", 125]
        ]),
        new Map([
            [";", 126],
            ["[", 126],
            [".", 126],
            ["(", 126],
            ["++", 126],
            ["--", 126],
            ["**", 126],
            ["*", 126],
            ["/", 126],
            ["%", 126],
            ["+", 126],
            ["-", 126],
            ["<<", 126],
            [">>", 126],
            [">>>", 126],
            ["<", 126],
            [">", 126],
            ["<=", 126],
            [">=", 126],
            ["τinstanceof", 126],
            ["τin", 126],
            ["==", 126],
            ["!=", 126],
            ["===", 126],
            ["!==", 126],
            ["&", 126],
            ["^", 126],
            ["|", 126],
            ["&&", 126],
            ["||", 126],
            ["?", 126],
            ["=", 126],
            ["*=", 126],
            ["/=", 126],
            ["%=", 126],
            ["+=", 126],
            ["-=", 126],
            ["<<=", 126],
            [">>=", 126],
            [">>>=", 126],
            ["&=", 126],
            ["^=", 126],
            ["|=", 126],
            ["**=", 126],
            [",", 126],
            ["]", 126],
            [")", 126],
            ["}", 126],
            [":", 126],
            ["{", 126],
            ["τof", 126]
        ]),
        new Map([
            [";", 127],
            ["[", 127],
            [".", 127],
            ["(", 127],
            ["++", 127],
            ["--", 127],
            ["**", 127],
            ["*", 127],
            ["/", 127],
            ["%", 127],
            ["+", 127],
            ["-", 127],
            ["<<", 127],
            [">>", 127],
            [">>>", 127],
            ["<", 127],
            [">", 127],
            ["<=", 127],
            [">=", 127],
            ["τinstanceof", 127],
            ["τin", 127],
            ["==", 127],
            ["!=", 127],
            ["===", 127],
            ["!==", 127],
            ["&", 127],
            ["^", 127],
            ["|", 127],
            ["&&", 127],
            ["||", 127],
            ["?", 127],
            ["=", 127],
            ["*=", 127],
            ["/=", 127],
            ["%=", 127],
            ["+=", 127],
            ["-=", 127],
            ["<<=", 127],
            [">>=", 127],
            [">>>=", 127],
            ["&=", 127],
            ["^=", 127],
            ["|=", 127],
            ["**=", 127],
            [",", 127],
            ["}", 127],
            ["]", 127],
            [")", 127],
            [":", 127],
            ["{", 127],
            ["τof", 127]
        ]),
        new Map([
            [";", 127],
            ["[", 127],
            [".", 127],
            ["(", 127],
            ["++", 127],
            ["--", 127],
            ["**", 127],
            ["*", 127],
            ["/", 127],
            ["%", 127],
            ["+", 127],
            ["-", 127],
            ["<<", 127],
            [">>", 127],
            [">>>", 127],
            ["<", 127],
            [">", 127],
            ["<=", 127],
            [">=", 127],
            ["τinstanceof", 127],
            ["τin", 127],
            ["==", 127],
            ["!=", 127],
            ["===", 127],
            ["!==", 127],
            ["&", 127],
            ["^", 127],
            ["|", 127],
            ["&&", 127],
            ["||", 127],
            ["?", 127],
            ["=", 127],
            ["*=", 127],
            ["/=", 127],
            ["%=", 127],
            ["+=", 127],
            ["-=", 127],
            ["<<=", 127],
            [">>=", 127],
            [">>>=", 127],
            ["&=", 127],
            ["^=", 127],
            ["|=", 127],
            ["**=", 127],
            [",", 127],
            ["]", 127],
            [")", 127],
            ["}", 127],
            [":", 127],
            ["{", 127],
            ["τof", 127]
        ]),
        new Map([
            [";", 128],
            ["[", 128],
            [".", 128],
            ["(", 128],
            ["++", 128],
            ["--", 128],
            ["**", 128],
            ["*", 128],
            ["/", 128],
            ["%", 128],
            ["+", 128],
            ["-", 128],
            ["<<", 128],
            [">>", 128],
            [">>>", 128],
            ["<", 128],
            [">", 128],
            ["<=", 128],
            [">=", 128],
            ["τinstanceof", 128],
            ["τin", 128],
            ["==", 128],
            ["!=", 128],
            ["===", 128],
            ["!==", 128],
            ["&", 128],
            ["^", 128],
            ["|", 128],
            ["&&", 128],
            ["||", 128],
            ["?", 128],
            ["=", 128],
            ["*=", 128],
            ["/=", 128],
            ["%=", 128],
            ["+=", 128],
            ["-=", 128],
            ["<<=", 128],
            [">>=", 128],
            [">>>=", 128],
            ["&=", 128],
            ["^=", 128],
            ["|=", 128],
            ["**=", 128],
            [",", 128],
            ["]", 128],
            [")", 128],
            ["}", 128],
            [":", 128],
            ["{", 128],
            ["τof", 128]
        ]),
        new Map([
            [";", 129],
            ["[", 129],
            [".", 129],
            ["(", 129],
            ["++", 129],
            ["--", 129],
            ["**", 129],
            ["*", 129],
            ["/", 129],
            ["%", 129],
            ["+", 129],
            ["-", 129],
            ["<<", 129],
            [">>", 129],
            [">>>", 129],
            ["<", 129],
            [">", 129],
            ["<=", 129],
            [">=", 129],
            ["τinstanceof", 129],
            ["τin", 129],
            ["==", 129],
            ["!=", 129],
            ["===", 129],
            ["!==", 129],
            ["&", 129],
            ["^", 129],
            ["|", 129],
            ["&&", 129],
            ["||", 129],
            ["?", 129],
            ["=", 129],
            ["*=", 129],
            ["/=", 129],
            ["%=", 129],
            ["+=", 129],
            ["-=", 129],
            ["<<=", 129],
            [">>=", 129],
            [">>>=", 129],
            ["&=", 129],
            ["^=", 129],
            ["|=", 129],
            ["**=", 129],
            [",", 129],
            ["]", 129],
            [")", 129],
            ["}", 129],
            [":", 129],
            ["{", 129],
            ["τof", 129]
        ]),
        new Map([
            [";", 127],
            ["[", 127],
            [".", 127],
            ["(", 127],
            ["++", 127],
            ["--", 127],
            ["**", 127],
            ["*", 127],
            ["/", 127],
            ["%", 127],
            ["+", 127],
            ["-", 127],
            ["<<", 127],
            [">>", 127],
            [">>>", 127],
            ["<", 127],
            [">", 127],
            ["<=", 127],
            [">=", 127],
            ["τinstanceof", 127],
            ["τin", 127],
            ["==", 127],
            ["!=", 127],
            ["===", 127],
            ["!==", 127],
            ["&", 127],
            ["^", 127],
            ["|", 127],
            ["&&", 127],
            ["||", 127],
            ["?", 127],
            ["=>", 130],
            ["=", 127],
            ["*=", 127],
            ["/=", 127],
            ["%=", 127],
            ["+=", 127],
            ["-=", 127],
            ["<<=", 127],
            [">>=", 127],
            [">>>=", 127],
            ["&=", 127],
            ["^=", 127],
            ["|=", 127],
            ["**=", 127],
            [",", 127],
            ["]", 127],
            [")", 127],
            ["}", 127],
            [":", 127],
            ["{", 127],
            ["τof", 127]
        ]),
        new Map([
            [";", 131],
            ["[", 131],
            [".", 131],
            ["(", 131],
            ["++", 131],
            ["--", 131],
            ["**", 131],
            ["*", 131],
            ["/", 131],
            ["%", 131],
            ["+", 131],
            ["-", 131],
            ["<<", 131],
            [">>", 131],
            [">>>", 131],
            ["<", 131],
            [">", 131],
            ["<=", 131],
            [">=", 131],
            ["τinstanceof", 131],
            ["τin", 131],
            ["==", 131],
            ["!=", 131],
            ["===", 131],
            ["!==", 131],
            ["&", 131],
            ["^", 131],
            ["|", 131],
            ["&&", 131],
            ["||", 131],
            ["?", 131],
            ["=>", 130],
            ["=", 131],
            ["*=", 131],
            ["/=", 131],
            ["%=", 131],
            ["+=", 131],
            ["-=", 131],
            ["<<=", 131],
            [">>=", 131],
            [">>>=", 131],
            ["&=", 131],
            ["^=", 131],
            ["|=", 131],
            ["**=", 131],
            [",", 131],
            [":", 131],
            ["}", 131],
            ["]", 131],
            [")", 131],
            ["{", 131],
            ["τof", 131]
        ]),
        new Map([
            [";", 132],
            ["[", 132],
            [".", 132],
            ["(", 132],
            ["++", 132],
            ["--", 132],
            ["**", 132],
            ["*", 132],
            ["/", 132],
            ["%", 132],
            ["+", 132],
            ["-", 132],
            ["<<", 132],
            [">>", 132],
            [">>>", 132],
            ["<", 132],
            [">", 132],
            ["<=", 132],
            [">=", 132],
            ["τinstanceof", 132],
            ["τin", 132],
            ["==", 132],
            ["!=", 132],
            ["===", 132],
            ["!==", 132],
            ["&", 132],
            ["^", 132],
            ["|", 132],
            ["&&", 132],
            ["||", 132],
            ["?", 132],
            ["=", 132],
            ["*=", 132],
            ["/=", 132],
            ["%=", 132],
            ["+=", 132],
            ["-=", 132],
            ["<<=", 132],
            [">>=", 132],
            [">>>=", 132],
            ["&=", 132],
            ["^=", 132],
            ["|=", 132],
            ["**=", 132],
            [",", 132],
            [":", 132],
            ["}", 132],
            ["]", 132],
            [")", 132],
            ["{", 132],
            ["τof", 132]
        ]),
        new Map([
            [";", 133],
            ["[", 133],
            [".", 133],
            ["(", 133],
            ["++", 133],
            ["--", 133],
            ["**", 133],
            ["*", 133],
            ["/", 133],
            ["%", 133],
            ["+", 133],
            ["-", 133],
            ["<<", 133],
            [">>", 133],
            [">>>", 133],
            ["<", 133],
            [">", 133],
            ["<=", 133],
            [">=", 133],
            ["τinstanceof", 133],
            ["τin", 133],
            ["==", 133],
            ["!=", 133],
            ["===", 133],
            ["!==", 133],
            ["&", 133],
            ["^", 133],
            ["|", 133],
            ["&&", 133],
            ["||", 133],
            ["?", 133],
            ["=", 133],
            ["*=", 133],
            ["/=", 133],
            ["%=", 133],
            ["+=", 133],
            ["-=", 133],
            ["<<=", 133],
            [">>=", 133],
            [">>>=", 133],
            ["&=", 133],
            ["^=", 133],
            ["|=", 133],
            ["**=", 133],
            [",", 133],
            [":", 133],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["~", 10],
            ["!", 11],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["τsuper", 28],
            ["}", 133],
            ["]", 133],
            [")", 133],
            ["τof", 133]
        ]),
        new Map([
            [";", 134],
            ["[", 134],
            [".", 134],
            ["(", 134],
            ["++", 134],
            ["--", 134],
            ["**", 134],
            ["*", 134],
            ["/", 134],
            ["%", 134],
            ["+", 134],
            ["-", 134],
            ["<<", 134],
            [">>", 134],
            [">>>", 134],
            ["<", 134],
            [">", 134],
            ["<=", 134],
            [">=", 134],
            ["τinstanceof", 134],
            ["τin", 134],
            ["==", 134],
            ["!=", 134],
            ["===", 134],
            ["!==", 134],
            ["&", 134],
            ["^", 134],
            ["|", 134],
            ["&&", 134],
            ["||", 134],
            ["?", 134],
            ["=>", 134],
            ["=", 134],
            ["*=", 134],
            ["/=", 134],
            ["%=", 134],
            ["+=", 134],
            ["-=", 134],
            ["<<=", 134],
            [">>=", 134],
            [">>>=", 134],
            ["&=", 134],
            ["^=", 134],
            ["|=", 134],
            ["**=", 134],
            [",", 134],
            [":", 134],
            ["}", 134],
            ["]", 134],
            ["τextends", 134],
            ["{", 134],
            [")", 134],
            ["τof", 134]
        ]),
        new Map([
            [";", 135],
            ["[", 135],
            [".", 135],
            ["(", 135],
            ["++", 135],
            ["--", 135],
            ["**", 135],
            ["*", 135],
            ["/", 135],
            ["%", 135],
            ["+", 135],
            ["-", 135],
            ["<<", 135],
            [">>", 135],
            [">>>", 135],
            ["<", 135],
            [">", 135],
            ["<=", 135],
            [">=", 135],
            ["τinstanceof", 135],
            ["τin", 135],
            ["==", 135],
            ["!=", 135],
            ["===", 135],
            ["!==", 135],
            ["&", 135],
            ["^", 135],
            ["|", 135],
            ["&&", 135],
            ["||", 135],
            ["?", 135],
            ["=", 135],
            ["*=", 135],
            ["/=", 135],
            ["%=", 135],
            ["+=", 135],
            ["-=", 135],
            ["<<=", 135],
            [">>=", 135],
            [">>>=", 135],
            ["&=", 135],
            ["^=", 135],
            ["|=", 135],
            ["**=", 135],
            [",", 135],
            ["]", 135],
            [")", 135],
            ["}", 135],
            [":", 135],
            ["{", 135],
            ["τof", 135]
        ]),
        new Map([
            [";", 135],
            ["[", 135],
            [".", 135],
            ["(", 135],
            ["++", 135],
            ["--", 135],
            ["**", 135],
            ["*", 135],
            ["/", 135],
            ["%", 135],
            ["+", 135],
            ["-", 135],
            ["<<", 135],
            [">>", 135],
            [">>>", 135],
            ["<", 135],
            [">", 135],
            ["<=", 135],
            [">=", 135],
            ["τinstanceof", 135],
            ["τin", 135],
            ["==", 135],
            ["!=", 135],
            ["===", 135],
            ["!==", 135],
            ["&", 135],
            ["^", 135],
            ["|", 135],
            ["&&", 135],
            ["||", 135],
            ["?", 135],
            ["=", 135],
            ["*=", 135],
            ["/=", 135],
            ["%=", 135],
            ["+=", 135],
            ["-=", 135],
            ["<<=", 135],
            [">>=", 135],
            [">>>=", 135],
            ["&=", 135],
            ["^=", 135],
            ["|=", 135],
            ["**=", 135],
            [",", 135],
            [":", 135],
            ["]", 135],
            [")", 135],
            ["}", 135],
            ["{", 135],
            ["τof", 135]
        ]),
        new Map([
            [";", 136],
            ["[", 136],
            [".", 136],
            ["(", 136],
            ["++", 136],
            ["--", 136],
            ["**", 136],
            ["*", 136],
            ["/", 136],
            ["%", 136],
            ["+", 136],
            ["-", 136],
            ["<<", 136],
            [">>", 136],
            [">>>", 136],
            ["<", 136],
            [">", 136],
            ["<=", 136],
            [">=", 136],
            ["τinstanceof", 136],
            ["τin", 136],
            ["==", 136],
            ["!=", 136],
            ["===", 136],
            ["!==", 136],
            ["&", 136],
            ["^", 136],
            ["|", 136],
            ["&&", 136],
            ["||", 136],
            ["?", 136],
            ["=", 136],
            ["*=", 136],
            ["/=", 136],
            ["%=", 136],
            ["+=", 136],
            ["-=", 136],
            ["<<=", 136],
            [">>=", 136],
            [">>>=", 136],
            ["&=", 136],
            ["^=", 136],
            ["|=", 136],
            ["**=", 136],
            [",", 136],
            ["]", 136],
            [")", 136],
            ["}", 136],
            [":", 136],
            ["{", 136],
            ["τof", 136]
        ]),
        new Map([
            [";", 137],
            ["[", 137],
            [".", 137],
            ["(", 137],
            ["++", 137],
            ["--", 137],
            ["**", 137],
            ["*", 137],
            ["/", 137],
            ["%", 137],
            ["+", 137],
            ["-", 137],
            ["<<", 137],
            [">>", 137],
            [">>>", 137],
            ["<", 137],
            [">", 137],
            ["<=", 137],
            [">=", 137],
            ["τinstanceof", 137],
            ["τin", 137],
            ["==", 137],
            ["!=", 137],
            ["===", 137],
            ["!==", 137],
            ["&", 137],
            ["^", 137],
            ["|", 137],
            ["&&", 137],
            ["||", 137],
            ["?", 137],
            ["=", 137],
            ["*=", 137],
            ["/=", 137],
            ["%=", 137],
            ["+=", 137],
            ["-=", 137],
            ["<<=", 137],
            [">>=", 137],
            [">>>=", 137],
            ["&=", 137],
            ["^=", 137],
            ["|=", 137],
            ["**=", 137],
            [",", 137],
            ["]", 137],
            [")", 137],
            ["}", 137],
            [":", 137],
            ["{", 137],
            ["τof", 137]
        ]),
        new Map([
            [";", 138],
            ["[", 138],
            [".", 138],
            ["(", 138],
            ["++", 138],
            ["--", 138],
            ["**", 138],
            ["*", 138],
            ["/", 138],
            ["%", 138],
            ["+", 138],
            ["-", 138],
            ["<<", 138],
            [">>", 138],
            [">>>", 138],
            ["<", 138],
            [">", 138],
            ["<=", 138],
            [">=", 138],
            ["τinstanceof", 138],
            ["τin", 138],
            ["==", 138],
            ["!=", 138],
            ["===", 138],
            ["!==", 138],
            ["&", 138],
            ["^", 138],
            ["|", 138],
            ["&&", 138],
            ["||", 138],
            ["?", 138],
            ["=", 138],
            ["*=", 138],
            ["/=", 138],
            ["%=", 138],
            ["+=", 138],
            ["-=", 138],
            ["<<=", 138],
            [">>=", 138],
            [">>>=", 138],
            ["&=", 138],
            ["^=", 138],
            ["|=", 138],
            ["**=", 138],
            [",", 138],
            [":", 138],
            ["]", 138],
            [")", 138],
            ["}", 138],
            ["{", 138],
            ["τof", 138]
        ]),
        new Map([
            [";", 139],
            ["[", 139],
            [".", 139],
            ["(", 139],
            ["++", 139],
            ["--", 139],
            ["**", 139],
            ["*", 139],
            ["/", 139],
            ["%", 139],
            ["+", 139],
            ["-", 139],
            ["<<", 139],
            [">>", 139],
            [">>>", 139],
            ["<", 139],
            [">", 139],
            ["<=", 139],
            [">=", 139],
            ["τinstanceof", 139],
            ["τin", 139],
            ["==", 139],
            ["!=", 139],
            ["===", 139],
            ["!==", 139],
            ["&", 139],
            ["^", 139],
            ["|", 139],
            ["&&", 139],
            ["||", 139],
            ["?", 139],
            ["=", 139],
            ["*=", 139],
            ["/=", 139],
            ["%=", 139],
            ["+=", 139],
            ["-=", 139],
            ["<<=", 139],
            [">>=", 139],
            [">>>=", 139],
            ["&=", 139],
            ["^=", 139],
            ["|=", 139],
            ["**=", 139],
            [",", 139],
            [":", 139],
            ["]", 139],
            [")", 139],
            ["}", 139],
            ["{", 139],
            ["τof", 139]
        ]),
        new Map([
            ["]", 140],
            [",", 141],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["...", 142]
        ]),
        new Map([
            [";", 143],
            ["[", 143],
            [".", 143],
            ["(", 143],
            ["++", 143],
            ["--", 143],
            ["**", 143],
            ["*", 143],
            ["/", 143],
            ["%", 143],
            ["+", 143],
            ["-", 143],
            ["<<", 143],
            [">>", 143],
            [">>>", 143],
            ["<", 143],
            [">", 143],
            ["<=", 143],
            [">=", 143],
            ["τinstanceof", 143],
            ["τin", 143],
            ["==", 143],
            ["!=", 143],
            ["===", 143],
            ["!==", 143],
            ["&", 143],
            ["^", 143],
            ["|", 143],
            ["&&", 143],
            ["||", 143],
            ["?", 143],
            ["=", 143],
            ["*=", 143],
            ["/=", 143],
            ["%=", 143],
            ["+=", 143],
            ["-=", 143],
            ["<<=", 143],
            [">>=", 143],
            [">>>=", 143],
            ["&=", 143],
            ["^=", 143],
            ["|=", 143],
            ["**=", 143],
            [",", 143],
            ["]", 143],
            [")", 143],
            ["}", 143],
            [":", 143],
            ["{", 143],
            ["τof", 143]
        ]),
        new Map([
            ["(", 144],
            ["θid", 18]
        ]),
        new Map([
            [";", 145],
            ["[", 145],
            [".", 145],
            ["(", 145],
            ["++", 145],
            ["--", 145],
            ["**", 145],
            ["*", 145],
            ["/", 145],
            ["%", 145],
            ["+", 145],
            ["-", 145],
            ["<<", 145],
            [">>", 145],
            [">>>", 145],
            ["<", 145],
            [">", 145],
            ["<=", 145],
            [">=", 145],
            ["τinstanceof", 145],
            ["τin", 145],
            ["==", 145],
            ["!=", 145],
            ["===", 145],
            ["!==", 145],
            ["&", 145],
            ["^", 145],
            ["|", 145],
            ["&&", 145],
            ["||", 145],
            ["?", 145],
            ["=", 145],
            ["*=", 145],
            ["/=", 145],
            ["%=", 145],
            ["+=", 145],
            ["-=", 145],
            ["<<=", 145],
            [">>=", 145],
            [">>>=", 145],
            ["&=", 145],
            ["^=", 145],
            ["|=", 145],
            ["**=", 145],
            [",", 145],
            ["$", 146],
            ["{", 145],
            ["τvar", 146],
            ["τthis", 146],
            ["θid", 146],
            ["τyield", 146],
            ["τawait", 146],
            ["τtrue", 146],
            ["τfalse", 146],
            ["τnull", 146],
            ["θstr", 146],
            ["θnum", 146],
            ["τfunction", 146],
            ["τclass", 146],
            ["τsuper", 146],
            ["τnew", 146],
            ["τdelete", 146],
            ["τvoid", 146],
            ["τtypeof", 146],
            ["~", 146],
            ["!", 146],
            ["τif", 146],
            ["τdo", 146],
            ["τwhile", 146],
            ["τfor", 146],
            ["τswitch", 146],
            ["τcontinue", 146],
            ["τbreak", 146],
            ["τreturn", 146],
            ["τwith", 146],
            ["τthrow", 146],
            ["τtry", 146],
            ["τdebugger", 146],
            ["τlet", 146],
            ["τconst", 146],
            ["}", 145],
            ["]", 145],
            [")", 145],
            [":", 145],
            ["τof", 145],
            ["τcase", 146],
            ["τdefault", 146]
        ]),
        new Map([
            ["θid", 18],
            ["{", 147],
            ["τextends", 148]
        ]),
        new Map([
            [")", 149],
            ["...", 150],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [".", 151],
            ["[", 152],
            ["(", 120]
        ]),
        new Map([
            [".", 153],
            ["[", 153],
            [";", 153],
            ["(", 153],
            ["++", 153],
            ["--", 153],
            ["**", 153],
            ["*", 153],
            ["/", 153],
            ["%", 153],
            ["+", 153],
            ["-", 153],
            ["<<", 153],
            [">>", 153],
            [">>>", 153],
            ["<", 153],
            [">", 153],
            ["<=", 153],
            [">=", 153],
            ["τinstanceof", 153],
            ["τin", 153],
            ["==", 153],
            ["!=", 153],
            ["===", 153],
            ["!==", 153],
            ["&", 153],
            ["^", 153],
            ["|", 153],
            ["&&", 153],
            ["||", 153],
            ["?", 153],
            ["=", 153],
            ["*=", 153],
            ["/=", 153],
            ["%=", 153],
            ["+=", 153],
            ["-=", 153],
            ["<<=", 153],
            [">>=", 153],
            [">>>=", 153],
            ["&=", 153],
            ["^=", 153],
            ["|=", 153],
            ["**=", 153],
            [",", 153],
            ["]", 153],
            [")", 153],
            ["}", 153],
            [":", 153],
            ["{", 153],
            ["τof", 153]
        ]),
        new Map([
            [";", 154],
            [".", 154],
            ["(", 154],
            ["[", 154],
            ["++", 154],
            ["--", 154],
            ["**", 154],
            ["*", 154],
            ["/", 154],
            ["%", 154],
            ["+", 154],
            ["-", 154],
            ["<<", 154],
            [">>", 154],
            [">>>", 154],
            ["<", 154],
            [">", 154],
            ["<=", 154],
            [">=", 154],
            ["τinstanceof", 154],
            ["τin", 154],
            ["==", 154],
            ["!=", 154],
            ["===", 154],
            ["!==", 154],
            ["&", 154],
            ["^", 154],
            ["|", 154],
            ["&&", 154],
            ["||", 154],
            ["?", 154],
            ["=", 154],
            ["*=", 154],
            ["/=", 154],
            ["%=", 154],
            ["+=", 154],
            ["-=", 154],
            ["<<=", 154],
            [">>=", 154],
            [">>>=", 154],
            ["&=", 154],
            ["^=", 154],
            ["|=", 154],
            ["**=", 154],
            [",", 154],
            ["]", 154],
            [")", 154],
            ["}", 154],
            [":", 154],
            ["{", 154],
            ["τof", 154]
        ]),
        new Map([
            ["=>", 155]
        ]),
        new Map([
            ["(", 156]
        ]),
        new Map([
            ["$", 157],
            ["{", 157],
            ["τvar", 157],
            [";", 157],
            ["τthis", 157],
            ["θid", 157],
            ["τyield", 157],
            ["τawait", 157],
            ["τtrue", 157],
            ["τfalse", 157],
            ["τnull", 157],
            ["θstr", 157],
            ["θnum", 157],
            ["[", 157],
            ["τfunction", 157],
            ["τclass", 157],
            ["(", 157],
            ["τsuper", 157],
            ["τnew", 157],
            ["++", 157],
            ["--", 157],
            ["τdelete", 157],
            ["τvoid", 157],
            ["τtypeof", 157],
            ["+", 157],
            ["-", 157],
            ["~", 157],
            ["!", 157],
            ["τif", 157],
            ["τdo", 157],
            ["τwhile", 157],
            ["τfor", 157],
            ["τswitch", 157],
            ["τcontinue", 157],
            ["τbreak", 157],
            ["τreturn", 157],
            ["τwith", 157],
            ["τthrow", 157],
            ["τtry", 157],
            ["τdebugger", 157],
            ["τlet", 157],
            ["τconst", 157],
            ["}", 157],
            ["τelse", 157],
            [")", 157],
            ["τcase", 157],
            ["τdefault", 157]
        ]),
        new Map([
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            ["(", 158]
        ]),
        new Map([
            ["(", 159],
            ["τawait", 160]
        ]),
        new Map([
            ["(", 161]
        ]),
        new Map([
            [";", 162],
            ["τyield", 163],
            ["τawait", 164],
            ["θid", 18]
        ]),
        new Map([
            [";", 165],
            ["τyield", 163],
            ["τawait", 164],
            ["θid", 18]
        ]),
        new Map([
            [";", 166],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["(", 167]
        ]),
        new Map([
            [":", 168]
        ]),
        new Map([
            ["{", 2]
        ]),
        new Map([
            [";", 169]
        ]),
        new Map([
            ["$", 146],
            ["{", 146],
            ["τvar", 146],
            [";", 146],
            ["τthis", 146],
            ["θid", 146],
            ["τyield", 146],
            ["τawait", 146],
            ["τtrue", 146],
            ["τfalse", 146],
            ["τnull", 146],
            ["θstr", 146],
            ["θnum", 146],
            ["[", 146],
            ["τfunction", 146],
            ["τclass", 146],
            ["(", 146],
            ["τsuper", 146],
            ["τnew", 146],
            ["++", 146],
            ["--", 146],
            ["τdelete", 146],
            ["τvoid", 146],
            ["τtypeof", 146],
            ["+", 146],
            ["-", 146],
            ["~", 146],
            ["!", 146],
            ["τif", 146],
            ["τdo", 146],
            ["τwhile", 146],
            ["τfor", 146],
            ["τswitch", 146],
            ["τcontinue", 146],
            ["τbreak", 146],
            ["τreturn", 146],
            ["τwith", 146],
            ["τthrow", 146],
            ["τtry", 146],
            ["τdebugger", 146],
            ["τlet", 146],
            ["τconst", 146],
            ["}", 146],
            ["τcase", 146],
            ["τdefault", 146]
        ]),
        new Map([
            ["θid", 170],
            ["{", 170],
            ["[", 170]
        ]),
        new Map([
            ["θid", 171],
            ["{", 171],
            ["[", 171]
        ]),
        new Map([
            ["$", 172],
            ["{", 172],
            ["τvar", 172],
            [";", 172],
            ["τthis", 172],
            ["θid", 172],
            ["τyield", 172],
            ["τawait", 172],
            ["τtrue", 172],
            ["τfalse", 172],
            ["τnull", 172],
            ["θstr", 172],
            ["θnum", 172],
            ["[", 172],
            ["τfunction", 172],
            ["τclass", 172],
            ["(", 172],
            ["τsuper", 172],
            ["τnew", 172],
            ["++", 172],
            ["--", 172],
            ["τdelete", 172],
            ["τvoid", 172],
            ["τtypeof", 172],
            ["+", 172],
            ["-", 172],
            ["~", 172],
            ["!", 172],
            ["τif", 172],
            ["τdo", 172],
            ["τwhile", 172],
            ["τfor", 172],
            ["τswitch", 172],
            ["τcontinue", 172],
            ["τbreak", 172],
            ["τreturn", 172],
            ["τwith", 172],
            ["τthrow", 172],
            ["τtry", 172],
            ["τdebugger", 172],
            ["τlet", 172],
            ["τconst", 172],
            ["}", 172],
            ["τcase", 172],
            ["τdefault", 172]
        ]),
        new Map([
            ["}", 173],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            [";", 174],
            ["[", 174],
            [".", 174],
            ["(", 174],
            ["++", 174],
            ["--", 174],
            ["**", 174],
            ["*", 174],
            ["/", 174],
            ["%", 174],
            ["+", 174],
            ["-", 174],
            ["<<", 174],
            [">>", 174],
            [">>>", 174],
            ["<", 174],
            [">", 174],
            ["<=", 174],
            [">=", 174],
            ["τinstanceof", 174],
            ["τin", 174],
            ["==", 174],
            ["!=", 174],
            ["===", 174],
            ["!==", 174],
            ["&", 174],
            ["^", 174],
            ["|", 174],
            ["&&", 174],
            ["||", 174],
            ["?", 174],
            ["=", 174],
            ["*=", 174],
            ["/=", 174],
            ["%=", 174],
            ["+=", 174],
            ["-=", 174],
            ["<<=", 174],
            [">>=", 174],
            [">>>=", 174],
            ["&=", 174],
            ["^=", 174],
            ["|=", 174],
            ["**=", 174],
            [",", 174],
            ["]", 174],
            [")", 174],
            ["}", 174],
            [":", 174],
            ["{", 174],
            ["τof", 174]
        ]),
        new Map([
            ["}", 175],
            [",", 176]
        ]),
        new Map([
            ["}", 177],
            [",", 177]
        ]),
        new Map([
            ["}", 178],
            [",", 178]
        ]),
        new Map([
            [":", 179],
            ["(", 180]
        ]),
        new Map([
            [":", 181],
            ["(", 181]
        ]),
        new Map([
            ["θid", 182],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            [";", 184],
            [",", 185]
        ]),
        new Map([
            [";", 186],
            [",", 186]
        ]),
        new Map([
            [";", 187],
            [",", 187],
            ["=", 188],
            ["τin", 189],
            ["τof", 189]
        ]),
        new Map([
            ["=", 188]
        ]),
        new Map([
            ["=", 190],
            ["]", 190],
            [",", 190],
            [")", 190],
            ["}", 190]
        ]),
        new Map([
            ["}", 191],
            ["...", 192],
            ["θid", 18],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["]", 193],
            [",", 141],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["$", 195],
            ["{", 195],
            ["τvar", 195],
            [";", 195],
            ["τthis", 195],
            ["θid", 195],
            ["τyield", 195],
            ["τawait", 195],
            ["τtrue", 195],
            ["τfalse", 195],
            ["τnull", 195],
            ["θstr", 195],
            ["θnum", 195],
            ["[", 195],
            ["τfunction", 195],
            ["τclass", 195],
            ["(", 195],
            ["τsuper", 195],
            ["τnew", 195],
            ["++", 195],
            ["--", 195],
            ["τdelete", 195],
            ["τvoid", 195],
            ["τtypeof", 195],
            ["+", 195],
            ["-", 195],
            ["~", 195],
            ["!", 195],
            ["τif", 195],
            ["τdo", 195],
            ["τwhile", 195],
            ["τfor", 195],
            ["τswitch", 195],
            ["τcontinue", 195],
            ["τbreak", 195],
            ["τreturn", 195],
            ["τwith", 195],
            ["τthrow", 195],
            ["τtry", 195],
            ["τdebugger", 195],
            ["τlet", 195],
            ["τconst", 195],
            ["}", 195],
            ["τelse", 195],
            [")", 195],
            ["τcase", 195],
            ["τdefault", 195]
        ]),
        new Map([
            [";", 196],
            ["**", 196],
            ["*", 196],
            ["/", 196],
            ["%", 196],
            ["+", 196],
            ["-", 196],
            ["<<", 196],
            [">>", 196],
            [">>>", 196],
            ["<", 196],
            [">", 196],
            ["<=", 196],
            [">=", 196],
            ["τinstanceof", 196],
            ["τin", 196],
            ["==", 196],
            ["!=", 196],
            ["===", 196],
            ["!==", 196],
            ["&", 196],
            ["^", 196],
            ["|", 196],
            ["&&", 196],
            ["||", 196],
            ["?", 196],
            [",", 196],
            ["]", 196],
            [")", 196],
            ["}", 196],
            [":", 196]
        ]),
        new Map([
            [";", 197],
            ["**", 197],
            ["*", 197],
            ["/", 197],
            ["%", 197],
            ["+", 197],
            ["-", 197],
            ["<<", 197],
            [">>", 197],
            [">>>", 197],
            ["<", 197],
            [">", 197],
            ["<=", 197],
            [">=", 197],
            ["τinstanceof", 197],
            ["τin", 197],
            ["==", 197],
            ["!=", 197],
            ["===", 197],
            ["!==", 197],
            ["&", 197],
            ["^", 197],
            ["|", 197],
            ["&&", 197],
            ["||", 197],
            ["?", 197],
            [",", 197],
            ["]", 197],
            [")", 197],
            ["}", 197],
            [":", 197]
        ]),
        new Map([
            ["τthis", 198],
            ["θid", 198],
            ["τyield", 198],
            ["τawait", 198],
            ["τtrue", 198],
            ["τfalse", 198],
            ["τnull", 198],
            ["θstr", 198],
            ["θnum", 198],
            ["[", 198],
            ["{", 198],
            ["τfunction", 198],
            ["τclass", 198],
            ["(", 198],
            ["τsuper", 198],
            ["τnew", 198],
            ["++", 198],
            ["--", 198],
            ["τdelete", 198],
            ["τvoid", 198],
            ["τtypeof", 198],
            ["+", 198],
            ["-", 198],
            ["~", 198],
            ["!", 198]
        ]),
        new Map([
            [";", 199],
            ["*", 199],
            ["/", 199],
            ["%", 199],
            ["+", 199],
            ["-", 199],
            ["<<", 199],
            [">>", 199],
            [">>>", 199],
            ["<", 199],
            [">", 199],
            ["<=", 199],
            [">=", 199],
            ["τinstanceof", 199],
            ["τin", 199],
            ["==", 199],
            ["!=", 199],
            ["===", 199],
            ["!==", 199],
            ["&", 199],
            ["^", 199],
            ["|", 199],
            ["&&", 199],
            ["||", 199],
            ["?", 199],
            [",", 199],
            ["**", 199],
            ["]", 199],
            [")", 199],
            ["}", 199],
            [":", 199]
        ]),
        new Map([
            [";", 63],
            ["++", 64],
            ["--", 65],
            ["*", 63],
            ["/", 63],
            ["%", 63],
            ["+", 63],
            ["-", 63],
            ["<<", 63],
            [">>", 63],
            [">>>", 63],
            ["<", 63],
            [">", 63],
            ["<=", 63],
            [">=", 63],
            ["τinstanceof", 63],
            ["τin", 63],
            ["==", 63],
            ["!=", 63],
            ["===", 63],
            ["!==", 63],
            ["&", 63],
            ["^", 63],
            ["|", 63],
            ["&&", 63],
            ["||", 63],
            ["?", 63],
            [",", 63],
            ["**", 63],
            ["]", 63],
            [")", 63],
            ["}", 63],
            [":", 63]
        ]),
        new Map([
            ["}", 51],
            ["...", 52],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183],
            ["τget", 53],
            ["τset", 54]
        ]),
        new Map([
            [";", 200],
            ["*", 200],
            ["/", 200],
            ["%", 200],
            ["+", 200],
            ["-", 200],
            ["<<", 200],
            [">>", 200],
            [">>>", 200],
            ["<", 200],
            [">", 200],
            ["<=", 200],
            [">=", 200],
            ["τinstanceof", 200],
            ["τin", 200],
            ["==", 200],
            ["!=", 200],
            ["===", 200],
            ["!==", 200],
            ["&", 200],
            ["^", 200],
            ["|", 200],
            ["&&", 200],
            ["||", 200],
            ["?", 200],
            [",", 200],
            ["**", 200],
            ["]", 200],
            [")", 200],
            ["}", 200],
            [":", 200]
        ]),
        new Map([
            [";", 201],
            ["*", 201],
            ["/", 201],
            ["%", 201],
            ["+", 201],
            ["-", 201],
            ["<<", 201],
            [">>", 201],
            [">>>", 201],
            ["<", 201],
            [">", 201],
            ["<=", 201],
            [">=", 201],
            ["τinstanceof", 201],
            ["τin", 201],
            ["==", 201],
            ["!=", 201],
            ["===", 201],
            ["!==", 201],
            ["&", 201],
            ["^", 201],
            ["|", 201],
            ["&&", 201],
            ["||", 201],
            ["?", 201],
            [",", 201],
            ["**", 201],
            ["]", 201],
            [")", 201],
            ["}", 201],
            [":", 201]
        ]),
        new Map([
            [";", 202],
            ["*", 202],
            ["/", 202],
            ["%", 202],
            ["+", 202],
            ["-", 202],
            ["<<", 202],
            [">>", 202],
            [">>>", 202],
            ["<", 202],
            [">", 202],
            ["<=", 202],
            [">=", 202],
            ["τinstanceof", 202],
            ["τin", 202],
            ["==", 202],
            ["!=", 202],
            ["===", 202],
            ["!==", 202],
            ["&", 202],
            ["^", 202],
            ["|", 202],
            ["&&", 202],
            ["||", 202],
            ["?", 202],
            [",", 202],
            ["**", 202],
            ["]", 202],
            [")", 202],
            ["}", 202],
            [":", 202]
        ]),
        new Map([
            [";", 203],
            ["*", 203],
            ["/", 203],
            ["%", 203],
            ["+", 203],
            ["-", 203],
            ["<<", 203],
            [">>", 203],
            [">>>", 203],
            ["<", 203],
            [">", 203],
            ["<=", 203],
            [">=", 203],
            ["τinstanceof", 203],
            ["τin", 203],
            ["==", 203],
            ["!=", 203],
            ["===", 203],
            ["!==", 203],
            ["&", 203],
            ["^", 203],
            ["|", 203],
            ["&&", 203],
            ["||", 203],
            ["?", 203],
            [",", 203],
            ["**", 203],
            ["]", 203],
            [")", 203],
            ["}", 203],
            [":", 203]
        ]),
        new Map([
            [";", 204],
            ["*", 204],
            ["/", 204],
            ["%", 204],
            ["+", 204],
            ["-", 204],
            ["<<", 204],
            [">>", 204],
            [">>>", 204],
            ["<", 204],
            [">", 204],
            ["<=", 204],
            [">=", 204],
            ["τinstanceof", 204],
            ["τin", 204],
            ["==", 204],
            ["!=", 204],
            ["===", 204],
            ["!==", 204],
            ["&", 204],
            ["^", 204],
            ["|", 204],
            ["&&", 204],
            ["||", 204],
            ["?", 204],
            [",", 204],
            ["**", 204],
            ["]", 204],
            [")", 204],
            ["}", 204],
            [":", 204]
        ]),
        new Map([
            [";", 205],
            ["**", 205],
            ["*", 205],
            ["/", 205],
            ["%", 205],
            ["+", 205],
            ["-", 205],
            ["<<", 205],
            [">>", 205],
            [">>>", 205],
            ["<", 205],
            [">", 205],
            ["<=", 205],
            [">=", 205],
            ["τinstanceof", 205],
            ["τin", 205],
            ["==", 205],
            ["!=", 205],
            ["===", 205],
            ["!==", 205],
            ["&", 205],
            ["^", 205],
            ["|", 205],
            ["&&", 205],
            ["||", 205],
            ["?", 205],
            [",", 205],
            ["]", 205],
            [")", 205],
            ["}", 205],
            [":", 205]
        ]),
        new Map([
            [";", 206],
            ["**", 206],
            ["*", 206],
            ["/", 206],
            ["%", 206],
            ["+", 206],
            ["-", 206],
            ["<<", 206],
            [">>", 206],
            [">>>", 206],
            ["<", 206],
            [">", 206],
            ["<=", 206],
            [">=", 206],
            ["τinstanceof", 206],
            ["τin", 206],
            ["==", 206],
            ["!=", 206],
            ["===", 206],
            ["!==", 206],
            ["&", 206],
            ["^", 206],
            ["|", 206],
            ["&&", 206],
            ["||", 206],
            ["?", 206],
            [",", 206],
            ["]", 206],
            [")", 206],
            ["}", 206],
            [":", 206]
        ]),
        new Map([
            ["θid", 18]
        ]),
        new Map([
            [";", 207],
            [".", 207],
            ["(", 207],
            ["[", 207],
            ["++", 207],
            ["--", 207],
            ["**", 207],
            ["*", 207],
            ["/", 207],
            ["%", 207],
            ["+", 207],
            ["-", 207],
            ["<<", 207],
            [">>", 207],
            [">>>", 207],
            ["<", 207],
            [">", 207],
            ["<=", 207],
            [">=", 207],
            ["τinstanceof", 207],
            ["τin", 207],
            ["==", 207],
            ["!=", 207],
            ["===", 207],
            ["!==", 207],
            ["&", 207],
            ["^", 207],
            ["|", 207],
            ["&&", 207],
            ["||", 207],
            ["?", 207],
            ["=", 207],
            ["*=", 207],
            ["/=", 207],
            ["%=", 207],
            ["+=", 207],
            ["-=", 207],
            ["<<=", 207],
            [">>=", 207],
            [">>>=", 207],
            ["&=", 207],
            ["^=", 207],
            ["|=", 207],
            ["**=", 207],
            [",", 207],
            ["]", 207],
            [")", 207],
            ["}", 207],
            [":", 207],
            ["{", 207],
            ["τof", 207]
        ]),
        new Map([
            [")", 208],
            ["...", 209],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["[", 210],
            ["(", 210],
            [".", 210],
            [";", 210],
            ["++", 210],
            ["--", 210],
            ["**", 210],
            ["*", 210],
            ["/", 210],
            ["%", 210],
            ["+", 210],
            ["-", 210],
            ["<<", 210],
            [">>", 210],
            [">>>", 210],
            ["<", 210],
            [">", 210],
            ["<=", 210],
            [">=", 210],
            ["τinstanceof", 210],
            ["τin", 210],
            ["==", 210],
            ["!=", 210],
            ["===", 210],
            ["!==", 210],
            ["&", 210],
            ["^", 210],
            ["|", 210],
            ["&&", 210],
            ["||", 210],
            ["?", 210],
            ["=", 210],
            ["*=", 210],
            ["/=", 210],
            ["%=", 210],
            ["+=", 210],
            ["-=", 210],
            ["<<=", 210],
            [">>=", 210],
            [">>>=", 210],
            ["&=", 210],
            ["^=", 210],
            ["|=", 210],
            ["**=", 210],
            [",", 210],
            ["]", 210],
            [")", 210],
            ["}", 210],
            [":", 210],
            ["{", 210],
            ["τof", 210]
        ]),
        new Map([
            [";", 211],
            ["++", 211],
            ["--", 211],
            ["**", 211],
            ["*", 211],
            ["/", 211],
            ["%", 211],
            ["+", 211],
            ["-", 211],
            ["<<", 211],
            [">>", 211],
            [">>>", 211],
            ["<", 211],
            [">", 211],
            ["<=", 211],
            [">=", 211],
            ["τinstanceof", 211],
            ["τin", 211],
            ["==", 211],
            ["!=", 211],
            ["===", 211],
            ["!==", 211],
            ["&", 211],
            ["^", 211],
            ["|", 211],
            ["&&", 211],
            ["||", 211],
            ["?", 211],
            ["=", 211],
            ["*=", 211],
            ["/=", 211],
            ["%=", 211],
            ["+=", 211],
            ["-=", 211],
            ["<<=", 211],
            [">>=", 211],
            [">>>=", 211],
            ["&=", 211],
            ["^=", 211],
            ["|=", 211],
            ["**=", 211],
            [",", 211],
            ["]", 211],
            [")", 211],
            ["}", 211],
            [":", 211],
            ["{", 211],
            ["τof", 211]
        ]),
        new Map([
            ["τtarget", 212]
        ]),
        new Map([
            [";", 213],
            ["*", 213],
            ["/", 213],
            ["%", 213],
            ["+", 213],
            ["-", 213],
            ["<<", 213],
            [">>", 213],
            [">>>", 213],
            ["<", 213],
            [">", 213],
            ["<=", 213],
            [">=", 213],
            ["τinstanceof", 213],
            ["τin", 213],
            ["==", 213],
            ["!=", 213],
            ["===", 213],
            ["!==", 213],
            ["&", 213],
            ["^", 213],
            ["|", 213],
            ["&&", 213],
            ["||", 213],
            ["?", 213],
            [",", 213],
            ["**", 213],
            ["]", 213],
            [")", 213],
            ["}", 213],
            [":", 213]
        ]),
        new Map([
            [";", 214],
            ["[", 214],
            [".", 214],
            ["(", 214],
            ["++", 214],
            ["--", 214],
            ["**", 214],
            ["*", 214],
            ["/", 214],
            ["%", 214],
            ["+", 214],
            ["-", 214],
            ["<<", 214],
            [">>", 214],
            [">>>", 214],
            ["<", 214],
            [">", 214],
            ["<=", 214],
            [">=", 214],
            ["τinstanceof", 214],
            ["τin", 214],
            ["==", 214],
            ["!=", 214],
            ["===", 214],
            ["!==", 214],
            ["&", 214],
            ["^", 214],
            ["|", 214],
            ["&&", 214],
            ["||", 214],
            ["?", 214],
            ["=", 214],
            ["*=", 214],
            ["/=", 214],
            ["%=", 214],
            ["+=", 214],
            ["-=", 214],
            ["<<=", 214],
            [">>=", 214],
            [">>>=", 214],
            ["&=", 214],
            ["^=", 214],
            ["|=", 214],
            ["**=", 214],
            [",", 214],
            ["]", 214],
            [")", 214],
            ["}", 214],
            [":", 214],
            ["{", 214],
            ["τof", 214]
        ]),
        new Map([
            ["]", 215],
            [",", 216],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["...", 142]
        ]),
        new Map([
            ["]", 217],
            [",", 218]
        ]),
        new Map([
            ["]", 219],
            [",", 219],
            ["τthis", 219],
            ["θid", 219],
            ["τyield", 219],
            ["τawait", 219],
            ["τtrue", 219],
            ["τfalse", 219],
            ["τnull", 219],
            ["θstr", 219],
            ["θnum", 219],
            ["[", 219],
            ["{", 219],
            ["τfunction", 219],
            ["τclass", 219],
            ["(", 219],
            ["τsuper", 219],
            ["τnew", 219],
            ["++", 219],
            ["--", 219],
            ["τdelete", 219],
            ["τvoid", 219],
            ["τtypeof", 219],
            ["+", 219],
            ["-", 219],
            ["~", 219],
            ["!", 219],
            ["...", 219]
        ]),
        new Map([
            ["]", 220],
            [",", 220]
        ]),
        new Map([
            [")", 221],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["(", 222]
        ]),
        new Map([
            ["{", 147],
            ["τextends", 148]
        ]),
        new Map([
            [";", 223],
            ["[", 223],
            [".", 223],
            ["(", 223],
            ["++", 223],
            ["--", 223],
            ["**", 223],
            ["*", 223],
            ["/", 223],
            ["%", 223],
            ["+", 223],
            ["-", 223],
            ["<<", 223],
            [">>", 223],
            [">>>", 223],
            ["<", 223],
            [">", 223],
            ["<=", 223],
            [">=", 223],
            ["τinstanceof", 223],
            ["τin", 223],
            ["==", 223],
            ["!=", 223],
            ["===", 223],
            ["!==", 223],
            ["&", 223],
            ["^", 223],
            ["|", 223],
            ["&&", 223],
            ["||", 223],
            ["?", 223],
            ["=", 223],
            ["*=", 223],
            ["/=", 223],
            ["%=", 223],
            ["+=", 223],
            ["-=", 223],
            ["<<=", 223],
            [">>=", 223],
            [">>>=", 223],
            ["&=", 223],
            ["^=", 223],
            ["|=", 223],
            ["**=", 223],
            [",", 223],
            ["$", 223],
            ["{", 223],
            ["τvar", 223],
            ["τthis", 223],
            ["θid", 223],
            ["τyield", 223],
            ["τawait", 223],
            ["τtrue", 223],
            ["τfalse", 223],
            ["τnull", 223],
            ["θstr", 223],
            ["θnum", 223],
            ["τfunction", 223],
            ["τclass", 223],
            ["τsuper", 223],
            ["τnew", 223],
            ["τdelete", 223],
            ["τvoid", 223],
            ["τtypeof", 223],
            ["~", 223],
            ["!", 223],
            ["τif", 223],
            ["τdo", 223],
            ["τwhile", 223],
            ["τfor", 223],
            ["τswitch", 223],
            ["τcontinue", 223],
            ["τbreak", 223],
            ["τreturn", 223],
            ["τwith", 223],
            ["τthrow", 223],
            ["τtry", 223],
            ["τdebugger", 223],
            ["τlet", 223],
            ["τconst", 223],
            ["}", 223],
            ["]", 223],
            [")", 223],
            [":", 223],
            ["τof", 223],
            ["τcase", 223],
            ["τdefault", 223]
        ]),
        new Map([
            ["{", 224]
        ]),
        new Map([
            ["}", 225],
            ["τstatic", 226],
            [";", 227],
            ["τget", 53],
            ["τset", 54],
            ["θid", 182],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 228],
            ["[", 228],
            [".", 228],
            ["(", 228],
            ["++", 228],
            ["--", 228],
            ["**", 228],
            ["*", 228],
            ["/", 228],
            ["%", 228],
            ["+", 228],
            ["-", 228],
            ["<<", 228],
            [">>", 228],
            [">>>", 228],
            ["<", 228],
            [">", 228],
            ["<=", 228],
            [">=", 228],
            ["τinstanceof", 228],
            ["τin", 228],
            ["==", 228],
            ["!=", 228],
            ["===", 228],
            ["!==", 228],
            ["&", 228],
            ["^", 228],
            ["|", 228],
            ["&&", 228],
            ["||", 228],
            ["?", 228],
            ["=>", 228],
            ["=", 228],
            ["*=", 228],
            ["/=", 228],
            ["%=", 228],
            ["+=", 228],
            ["-=", 228],
            ["<<=", 228],
            [">>=", 228],
            [">>>=", 228],
            ["&=", 228],
            ["^=", 228],
            ["|=", 228],
            ["**=", 228],
            [",", 228],
            ["]", 228],
            [")", 228],
            ["}", 228],
            [":", 228],
            ["{", 228],
            ["τof", 228]
        ]),
        new Map([
            [")", 229],
            [",", 230]
        ]),
        new Map([
            ["τyield", 231],
            ["τawait", 232],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            [".", 233],
            ["(", 233],
            ["[", 233],
            [";", 233],
            ["++", 233],
            ["--", 233],
            ["**", 233],
            ["*", 233],
            ["/", 233],
            ["%", 233],
            ["+", 233],
            ["-", 233],
            ["<<", 233],
            [">>", 233],
            [">>>", 233],
            ["<", 233],
            [">", 233],
            ["<=", 233],
            [">=", 233],
            ["τinstanceof", 233],
            ["τin", 233],
            ["==", 233],
            ["!=", 233],
            ["===", 233],
            ["!==", 233],
            ["&", 233],
            ["^", 233],
            ["|", 233],
            ["&&", 233],
            ["||", 233],
            ["?", 233],
            ["=", 233],
            ["*=", 233],
            ["/=", 233],
            ["%=", 233],
            ["+=", 233],
            ["-=", 233],
            ["<<=", 233],
            [">>=", 233],
            [">>>=", 233],
            ["&=", 233],
            ["^=", 233],
            ["|=", 233],
            ["**=", 233],
            [",", 233],
            ["]", 233],
            [")", 233],
            ["}", 233],
            [":", 233],
            ["{", 233],
            ["τof", 233]
        ]),
        new Map([
            ["{", 234],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["τwhile", 235]
        ]),
        new Map([
            [";", 236],
            ["τvar", 237],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["(", 238]
        ]),
        new Map([
            ["$", 239],
            ["{", 239],
            ["τvar", 239],
            [";", 239],
            ["τthis", 239],
            ["θid", 239],
            ["τyield", 239],
            ["τawait", 239],
            ["τtrue", 239],
            ["τfalse", 239],
            ["τnull", 239],
            ["θstr", 239],
            ["θnum", 239],
            ["[", 239],
            ["τfunction", 239],
            ["τclass", 239],
            ["(", 239],
            ["τsuper", 239],
            ["τnew", 239],
            ["++", 239],
            ["--", 239],
            ["τdelete", 239],
            ["τvoid", 239],
            ["τtypeof", 239],
            ["+", 239],
            ["-", 239],
            ["~", 239],
            ["!", 239],
            ["τif", 239],
            ["τdo", 239],
            ["τwhile", 239],
            ["τfor", 239],
            ["τswitch", 239],
            ["τcontinue", 239],
            ["τbreak", 239],
            ["τreturn", 239],
            ["τwith", 239],
            ["τthrow", 239],
            ["τtry", 239],
            ["τdebugger", 239],
            ["τlet", 239],
            ["τconst", 239],
            ["}", 239],
            ["τelse", 239],
            [")", 239],
            ["τcase", 239],
            ["τdefault", 239]
        ]),
        new Map([
            [";", 240]
        ]),
        new Map([
            [";", 241]
        ]),
        new Map([
            [";", 242]
        ]),
        new Map([
            [";", 243]
        ]),
        new Map([
            ["$", 244],
            ["{", 244],
            ["τvar", 244],
            [";", 244],
            ["τthis", 244],
            ["θid", 244],
            ["τyield", 244],
            ["τawait", 244],
            ["τtrue", 244],
            ["τfalse", 244],
            ["τnull", 244],
            ["θstr", 244],
            ["θnum", 244],
            ["[", 244],
            ["τfunction", 244],
            ["τclass", 244],
            ["(", 244],
            ["τsuper", 244],
            ["τnew", 244],
            ["++", 244],
            ["--", 244],
            ["τdelete", 244],
            ["τvoid", 244],
            ["τtypeof", 244],
            ["+", 244],
            ["-", 244],
            ["~", 244],
            ["!", 244],
            ["τif", 244],
            ["τdo", 244],
            ["τwhile", 244],
            ["τfor", 244],
            ["τswitch", 244],
            ["τcontinue", 244],
            ["τbreak", 244],
            ["τreturn", 244],
            ["τwith", 244],
            ["τthrow", 244],
            ["τtry", 244],
            ["τdebugger", 244],
            ["τlet", 244],
            ["τconst", 244],
            ["}", 244],
            ["τelse", 244],
            [")", 244],
            ["τcase", 244],
            ["τdefault", 244]
        ]),
        new Map([
            [";", 245]
        ]),
        new Map([
            ["$", 246],
            ["{", 246],
            ["τvar", 246],
            [";", 246],
            ["τthis", 246],
            ["θid", 246],
            ["τyield", 246],
            ["τawait", 246],
            ["τtrue", 246],
            ["τfalse", 246],
            ["τnull", 246],
            ["θstr", 246],
            ["θnum", 246],
            ["[", 246],
            ["τfunction", 246],
            ["τclass", 246],
            ["(", 246],
            ["τsuper", 246],
            ["τnew", 246],
            ["++", 246],
            ["--", 246],
            ["τdelete", 246],
            ["τvoid", 246],
            ["τtypeof", 246],
            ["+", 246],
            ["-", 246],
            ["~", 246],
            ["!", 246],
            ["τif", 246],
            ["τdo", 246],
            ["τwhile", 246],
            ["τfor", 246],
            ["τswitch", 246],
            ["τcontinue", 246],
            ["τbreak", 246],
            ["τreturn", 246],
            ["τwith", 246],
            ["τthrow", 246],
            ["τtry", 246],
            ["τdebugger", 246],
            ["τlet", 246],
            ["τconst", 246],
            ["}", 246],
            ["τelse", 246],
            [")", 246],
            ["τcase", 246],
            ["τdefault", 246]
        ]),
        new Map([
            [";", 247],
            [",", 59]
        ]),
        new Map([
            [";", 248],
            [",", 59]
        ]),
        new Map([
            ["τcatch", 249],
            ["τfinally", 250]
        ]),
        new Map([
            ["$", 251],
            ["{", 251],
            ["τvar", 251],
            [";", 251],
            ["τthis", 251],
            ["θid", 251],
            ["τyield", 251],
            ["τawait", 251],
            ["τtrue", 251],
            ["τfalse", 251],
            ["τnull", 251],
            ["θstr", 251],
            ["θnum", 251],
            ["[", 251],
            ["τfunction", 251],
            ["τclass", 251],
            ["(", 251],
            ["τsuper", 251],
            ["τnew", 251],
            ["++", 251],
            ["--", 251],
            ["τdelete", 251],
            ["τvoid", 251],
            ["τtypeof", 251],
            ["+", 251],
            ["-", 251],
            ["~", 251],
            ["!", 251],
            ["τif", 251],
            ["τdo", 251],
            ["τwhile", 251],
            ["τfor", 251],
            ["τswitch", 251],
            ["τcontinue", 251],
            ["τbreak", 251],
            ["τreturn", 251],
            ["τwith", 251],
            ["τthrow", 251],
            ["τtry", 251],
            ["τdebugger", 251],
            ["τlet", 251],
            ["τconst", 251],
            ["}", 251],
            ["τelse", 251],
            [")", 251],
            ["τcase", 251],
            ["τdefault", 251]
        ]),
        new Map([
            [";", 252],
            [",", 253]
        ]),
        new Map([
            [";", 254],
            [",", 254]
        ]),
        new Map([
            ["}", 178],
            [",", 178],
            [";", 127],
            ["[", 127],
            [".", 127],
            ["(", 127],
            ["++", 127],
            ["--", 127],
            ["**", 127],
            ["*", 127],
            ["/", 127],
            ["%", 127],
            ["+", 127],
            ["-", 127],
            ["<<", 127],
            [">>", 127],
            [">>>", 127],
            ["<", 127],
            [">", 127],
            ["<=", 127],
            [">=", 127],
            ["τinstanceof", 127],
            ["τin", 127],
            ["==", 127],
            ["!=", 127],
            ["===", 127],
            ["!==", 127],
            ["&", 127],
            ["^", 127],
            ["|", 127],
            ["&&", 127],
            ["||", 127],
            ["?", 127],
            ["=", 127],
            ["*=", 127],
            ["/=", 127],
            ["%=", 127],
            ["+=", 127],
            ["-=", 127],
            ["<<=", 127],
            [">>=", 127],
            [">>>=", 127],
            ["&=", 127],
            ["^=", 127],
            ["|=", 127],
            ["**=", 127]
        ]),
        new Map([
            [":", 255],
            ["(", 255],
            [";", 135],
            ["[", 135],
            [".", 135],
            ["++", 135],
            ["--", 135],
            ["**", 135],
            ["*", 135],
            ["/", 135],
            ["%", 135],
            ["+", 135],
            ["-", 135],
            ["<<", 135],
            [">>", 135],
            [">>>", 135],
            ["<", 135],
            [">", 135],
            ["<=", 135],
            [">=", 135],
            ["τinstanceof", 135],
            ["τin", 135],
            ["==", 135],
            ["!=", 135],
            ["===", 135],
            ["!==", 135],
            ["&", 135],
            ["^", 135],
            ["|", 135],
            ["&&", 135],
            ["||", 135],
            ["?", 135],
            ["=", 135],
            ["*=", 135],
            ["/=", 135],
            ["%=", 135],
            ["+=", 135],
            ["-=", 135],
            ["<<=", 135],
            [">>=", 135],
            [">>>=", 135],
            ["&=", 135],
            ["^=", 135],
            ["|=", 135],
            ["**=", 135],
            [",", 135]
        ]),
        new Map([
            ["]", 140],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            [",", 141],
            ["...", 142]
        ]),
        new Map([
            [".", 124],
            ["τnew", 256],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["τfinally", 250],
            ["τcatch", 249]
        ]),
        new Map([
            ["$", 257],
            ["{", 257],
            ["τvar", 257],
            [";", 257],
            ["τthis", 257],
            ["θid", 257],
            ["τyield", 257],
            ["τawait", 257],
            ["τtrue", 257],
            ["τfalse", 257],
            ["τnull", 257],
            ["θstr", 257],
            ["θnum", 257],
            ["[", 257],
            ["τfunction", 257],
            ["τclass", 257],
            ["(", 257],
            ["τsuper", 257],
            ["τnew", 257],
            ["++", 257],
            ["--", 257],
            ["τdelete", 257],
            ["τvoid", 257],
            ["τtypeof", 257],
            ["+", 257],
            ["-", 257],
            ["~", 257],
            ["!", 257],
            ["τif", 257],
            ["τdo", 257],
            ["τwhile", 257],
            ["τfor", 257],
            ["τswitch", 257],
            ["τcontinue", 257],
            ["τbreak", 257],
            ["τreturn", 257],
            ["τwith", 257],
            ["τthrow", 257],
            ["τtry", 257],
            ["τdebugger", 257],
            ["τlet", 257],
            ["τconst", 257],
            ["}", 257],
            ["τcatch", 257],
            ["τfinally", 257],
            ["τelse", 257],
            [")", 257],
            ["τcase", 257],
            ["τdefault", 257]
        ]),
        new Map([
            [";", 258],
            ["[", 258],
            [".", 258],
            ["(", 258],
            ["++", 258],
            ["--", 258],
            ["**", 258],
            ["*", 258],
            ["/", 258],
            ["%", 258],
            ["+", 258],
            ["-", 258],
            ["<<", 258],
            [">>", 258],
            [">>>", 258],
            ["<", 258],
            [">", 258],
            ["<=", 258],
            [">=", 258],
            ["τinstanceof", 258],
            ["τin", 258],
            ["==", 258],
            ["!=", 258],
            ["===", 258],
            ["!==", 258],
            ["&", 258],
            ["^", 258],
            ["|", 258],
            ["&&", 258],
            ["||", 258],
            ["?", 258],
            ["=", 258],
            ["*=", 258],
            ["/=", 258],
            ["%=", 258],
            ["+=", 258],
            ["-=", 258],
            ["<<=", 258],
            [">>=", 258],
            [">>>=", 258],
            ["&=", 258],
            ["^=", 258],
            ["|=", 258],
            ["**=", 258],
            [",", 258],
            ["]", 258],
            [")", 258],
            ["}", 258],
            [":", 258],
            ["{", 258],
            ["τof", 258]
        ]),
        new Map([
            ["}", 259],
            ["...", 52],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183],
            ["τget", 53],
            ["τset", 54]
        ]),
        new Map([
            ["}", 260],
            [",", 260]
        ]),
        new Map([
            ["]", 261],
            [",", 220]
        ]),
        new Map([
            ["}", 262],
            [",", 262]
        ]),
        new Map([
            ["(", 263]
        ]),
        new Map([
            ["(", 255]
        ]),
        new Map([
            ["(", 264]
        ]),
        new Map([
            ["$", 265],
            ["{", 265],
            ["τvar", 265],
            [";", 265],
            ["τthis", 265],
            ["θid", 265],
            ["τyield", 265],
            ["τawait", 265],
            ["τtrue", 265],
            ["τfalse", 265],
            ["τnull", 265],
            ["θstr", 265],
            ["θnum", 265],
            ["[", 265],
            ["τfunction", 265],
            ["τclass", 265],
            ["(", 265],
            ["τsuper", 265],
            ["τnew", 265],
            ["++", 265],
            ["--", 265],
            ["τdelete", 265],
            ["τvoid", 265],
            ["τtypeof", 265],
            ["+", 265],
            ["-", 265],
            ["~", 265],
            ["!", 265],
            ["τif", 265],
            ["τdo", 265],
            ["τwhile", 265],
            ["τfor", 265],
            ["τswitch", 265],
            ["τcontinue", 265],
            ["τbreak", 265],
            ["τreturn", 265],
            ["τwith", 265],
            ["τthrow", 265],
            ["τtry", 265],
            ["τdebugger", 265],
            ["τlet", 265],
            ["τconst", 265],
            ["}", 265],
            ["τelse", 265],
            [")", 265],
            ["τcase", 265],
            ["τdefault", 265]
        ]),
        new Map([
            [";", 266],
            [",", 266]
        ]),
        new Map([
            ["=", 267],
            ["]", 267],
            [",", 267],
            [")", 267],
            ["}", 267]
        ]),
        new Map([
            ["}", 268]
        ]),
        new Map([
            ["}", 269],
            [",", 270]
        ]),
        new Map([
            ["}", 271],
            [",", 271]
        ]),
        new Map([
            ["}", 272],
            [",", 272]
        ]),
        new Map([
            [":", 273]
        ]),
        new Map([
            ["}", 274],
            [",", 274],
            ["=", 188],
            ["]", 274],
            [")", 274]
        ]),
        new Map([
            ["=", 275],
            ["]", 275],
            [",", 275],
            [")", 275],
            ["}", 275]
        ]),
        new Map([
            ["]", 276],
            [",", 216],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["]", 277]
        ]),
        new Map([
            ["]", 278],
            [",", 279]
        ]),
        new Map([
            ["]", 280],
            [",", 280]
        ]),
        new Map([
            ["]", 281],
            [",", 281]
        ]),
        new Map([
            ["]", 282],
            [",", 282],
            [")", 282],
            ["}", 282]
        ]),
        new Map([
            ["]", 282],
            [",", 282],
            ["=", 188],
            [")", 282],
            ["}", 282]
        ]),
        new Map([
            [";", 283],
            [",", 283],
            [")", 283],
            ["]", 283],
            [":", 283]
        ]),
        new Map([
            [";", 284],
            [",", 284],
            ["]", 284],
            [")", 284],
            ["}", 284],
            [":", 284]
        ]),
        new Map([
            [":", 285]
        ]),
        new Map([
            [";", 286],
            ["||", 286],
            ["?", 286],
            [",", 286],
            ["&&", 82],
            ["]", 286],
            [")", 286],
            ["}", 286],
            [":", 286]
        ]),
        new Map([
            [";", 287],
            ["&&", 287],
            ["||", 287],
            ["?", 287],
            [",", 287],
            ["]", 287],
            [")", 287],
            ["}", 287],
            [":", 287]
        ]),
        new Map([
            [";", 288],
            ["|", 288],
            ["&&", 288],
            ["||", 288],
            ["?", 288],
            [",", 288],
            ["]", 288],
            [")", 288],
            ["}", 288],
            [":", 288]
        ]),
        new Map([
            [";", 289],
            ["|", 289],
            ["&&", 289],
            ["||", 289],
            ["?", 289],
            [",", 289],
            ["]", 289],
            [")", 289],
            ["}", 289],
            [":", 289]
        ]),
        new Map([
            [";", 290],
            ["&", 290],
            ["^", 290],
            ["|", 290],
            ["&&", 290],
            ["||", 290],
            ["?", 290],
            [",", 290],
            ["==", 90],
            ["!=", 91],
            ["===", 92],
            ["!==", 93],
            ["]", 290],
            [")", 290],
            ["}", 290],
            [":", 290]
        ]),
        new Map([
            [";", 291],
            ["==", 291],
            ["!=", 291],
            ["===", 291],
            ["!==", 291],
            ["&", 291],
            ["^", 291],
            ["|", 291],
            ["&&", 291],
            ["||", 291],
            ["?", 291],
            [",", 291],
            ["<", 95],
            [">", 96],
            ["<=", 97],
            [">=", 98],
            ["τinstanceof", 99],
            ["τin", 100],
            ["]", 291],
            [")", 291],
            ["}", 291],
            [":", 291]
        ]),
        new Map([
            [";", 292],
            ["==", 292],
            ["!=", 292],
            ["===", 292],
            ["!==", 292],
            ["&", 292],
            ["^", 292],
            ["|", 292],
            ["&&", 292],
            ["||", 292],
            ["?", 292],
            [",", 292],
            ["<", 95],
            [">", 96],
            ["<=", 97],
            [">=", 98],
            ["τinstanceof", 99],
            ["τin", 100],
            ["]", 292],
            [")", 292],
            ["}", 292],
            [":", 292]
        ]),
        new Map([
            [";", 293],
            ["==", 293],
            ["!=", 293],
            ["===", 293],
            ["!==", 293],
            ["&", 293],
            ["^", 293],
            ["|", 293],
            ["&&", 293],
            ["||", 293],
            ["?", 293],
            [",", 293],
            ["<", 95],
            [">", 96],
            ["<=", 97],
            [">=", 98],
            ["τinstanceof", 99],
            ["τin", 100],
            ["]", 293],
            [")", 293],
            ["}", 293],
            [":", 293]
        ]),
        new Map([
            [";", 294],
            ["==", 294],
            ["!=", 294],
            ["===", 294],
            ["!==", 294],
            ["&", 294],
            ["^", 294],
            ["|", 294],
            ["&&", 294],
            ["||", 294],
            ["?", 294],
            [",", 294],
            ["<", 95],
            [">", 96],
            ["<=", 97],
            [">=", 98],
            ["τinstanceof", 99],
            ["τin", 100],
            ["]", 294],
            [")", 294],
            ["}", 294],
            [":", 294]
        ]),
        new Map([
            [";", 295],
            ["<", 295],
            [">", 295],
            ["<=", 295],
            [">=", 295],
            ["τinstanceof", 295],
            ["τin", 295],
            ["==", 295],
            ["!=", 295],
            ["===", 295],
            ["!==", 295],
            ["&", 295],
            ["^", 295],
            ["|", 295],
            ["&&", 295],
            ["||", 295],
            ["?", 295],
            [",", 295],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 295],
            [")", 295],
            ["}", 295],
            [":", 295]
        ]),
        new Map([
            [";", 296],
            ["<", 296],
            [">", 296],
            ["<=", 296],
            [">=", 296],
            ["τinstanceof", 296],
            ["τin", 296],
            ["==", 296],
            ["!=", 296],
            ["===", 296],
            ["!==", 296],
            ["&", 296],
            ["^", 296],
            ["|", 296],
            ["&&", 296],
            ["||", 296],
            ["?", 296],
            [",", 296],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 296],
            [")", 296],
            ["}", 296],
            [":", 296]
        ]),
        new Map([
            [";", 297],
            ["<", 297],
            [">", 297],
            ["<=", 297],
            [">=", 297],
            ["τinstanceof", 297],
            ["τin", 297],
            ["==", 297],
            ["!=", 297],
            ["===", 297],
            ["!==", 297],
            ["&", 297],
            ["^", 297],
            ["|", 297],
            ["&&", 297],
            ["||", 297],
            ["?", 297],
            [",", 297],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 297],
            [")", 297],
            ["}", 297],
            [":", 297]
        ]),
        new Map([
            [";", 298],
            ["<", 298],
            [">", 298],
            ["<=", 298],
            [">=", 298],
            ["τinstanceof", 298],
            ["τin", 298],
            ["==", 298],
            ["!=", 298],
            ["===", 298],
            ["!==", 298],
            ["&", 298],
            ["^", 298],
            ["|", 298],
            ["&&", 298],
            ["||", 298],
            ["?", 298],
            [",", 298],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 298],
            [")", 298],
            ["}", 298],
            [":", 298]
        ]),
        new Map([
            [";", 299],
            ["<", 299],
            [">", 299],
            ["<=", 299],
            [">=", 299],
            ["τinstanceof", 299],
            ["τin", 299],
            ["==", 299],
            ["!=", 299],
            ["===", 299],
            ["!==", 299],
            ["&", 299],
            ["^", 299],
            ["|", 299],
            ["&&", 299],
            ["||", 299],
            ["?", 299],
            [",", 299],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 299],
            [")", 299],
            ["}", 299],
            [":", 299]
        ]),
        new Map([
            [";", 300],
            ["<", 300],
            [">", 300],
            ["<=", 300],
            [">=", 300],
            ["τinstanceof", 300],
            ["τin", 300],
            ["==", 300],
            ["!=", 300],
            ["===", 300],
            ["!==", 300],
            ["&", 300],
            ["^", 300],
            ["|", 300],
            ["&&", 300],
            ["||", 300],
            ["?", 300],
            [",", 300],
            ["<<", 102],
            [">>", 103],
            [">>>", 104],
            ["]", 300],
            [")", 300],
            ["}", 300],
            [":", 300]
        ]),
        new Map([
            [";", 301],
            ["<<", 301],
            [">>", 301],
            [">>>", 301],
            ["<", 301],
            [">", 301],
            ["<=", 301],
            [">=", 301],
            ["τinstanceof", 301],
            ["τin", 301],
            ["==", 301],
            ["!=", 301],
            ["===", 301],
            ["!==", 301],
            ["&", 301],
            ["^", 301],
            ["|", 301],
            ["&&", 301],
            ["||", 301],
            ["?", 301],
            [",", 301],
            ["+", 106],
            ["-", 107],
            ["]", 301],
            [")", 301],
            ["}", 301],
            [":", 301]
        ]),
        new Map([
            [";", 302],
            ["<<", 302],
            [">>", 302],
            [">>>", 302],
            ["<", 302],
            [">", 302],
            ["<=", 302],
            [">=", 302],
            ["τinstanceof", 302],
            ["τin", 302],
            ["==", 302],
            ["!=", 302],
            ["===", 302],
            ["!==", 302],
            ["&", 302],
            ["^", 302],
            ["|", 302],
            ["&&", 302],
            ["||", 302],
            ["?", 302],
            [",", 302],
            ["+", 106],
            ["-", 107],
            ["]", 302],
            [")", 302],
            ["}", 302],
            [":", 302]
        ]),
        new Map([
            [";", 303],
            ["<<", 303],
            [">>", 303],
            [">>>", 303],
            ["<", 303],
            [">", 303],
            ["<=", 303],
            [">=", 303],
            ["τinstanceof", 303],
            ["τin", 303],
            ["==", 303],
            ["!=", 303],
            ["===", 303],
            ["!==", 303],
            ["&", 303],
            ["^", 303],
            ["|", 303],
            ["&&", 303],
            ["||", 303],
            ["?", 303],
            [",", 303],
            ["+", 106],
            ["-", 107],
            ["]", 303],
            [")", 303],
            ["}", 303],
            [":", 303]
        ]),
        new Map([
            [";", 304],
            ["+", 304],
            ["-", 304],
            ["<<", 304],
            [">>", 304],
            [">>>", 304],
            ["<", 304],
            [">", 304],
            ["<=", 304],
            [">=", 304],
            ["τinstanceof", 304],
            ["τin", 304],
            ["==", 304],
            ["!=", 304],
            ["===", 304],
            ["!==", 304],
            ["&", 304],
            ["^", 304],
            ["|", 304],
            ["&&", 304],
            ["||", 304],
            ["?", 304],
            [",", 304],
            ["*", 109],
            ["/", 110],
            ["%", 111],
            ["]", 304],
            [")", 304],
            ["}", 304],
            [":", 304]
        ]),
        new Map([
            [";", 305],
            ["+", 305],
            ["-", 305],
            ["<<", 305],
            [">>", 305],
            [">>>", 305],
            ["<", 305],
            [">", 305],
            ["<=", 305],
            [">=", 305],
            ["τinstanceof", 305],
            ["τin", 305],
            ["==", 305],
            ["!=", 305],
            ["===", 305],
            ["!==", 305],
            ["&", 305],
            ["^", 305],
            ["|", 305],
            ["&&", 305],
            ["||", 305],
            ["?", 305],
            [",", 305],
            ["*", 109],
            ["/", 110],
            ["%", 111],
            ["]", 305],
            [")", 305],
            ["}", 305],
            [":", 305]
        ]),
        new Map([
            [";", 306],
            ["*", 306],
            ["/", 306],
            ["%", 306],
            ["+", 306],
            ["-", 306],
            ["<<", 306],
            [">>", 306],
            [">>>", 306],
            ["<", 306],
            [">", 306],
            ["<=", 306],
            [">=", 306],
            ["τinstanceof", 306],
            ["τin", 306],
            ["==", 306],
            ["!=", 306],
            ["===", 306],
            ["!==", 306],
            ["&", 306],
            ["^", 306],
            ["|", 306],
            ["&&", 306],
            ["||", 306],
            ["?", 306],
            [",", 306],
            ["]", 306],
            [")", 306],
            ["}", 306],
            [":", 306]
        ]),
        new Map([
            [";", 307],
            ["*", 307],
            ["/", 307],
            ["%", 307],
            ["+", 307],
            ["-", 307],
            ["<<", 307],
            [">>", 307],
            [">>>", 307],
            ["<", 307],
            [">", 307],
            ["<=", 307],
            [">=", 307],
            ["τinstanceof", 307],
            ["τin", 307],
            ["==", 307],
            ["!=", 307],
            ["===", 307],
            ["!==", 307],
            ["&", 307],
            ["^", 307],
            ["|", 307],
            ["&&", 307],
            ["||", 307],
            ["?", 307],
            [",", 307],
            ["]", 307],
            [")", 307],
            ["}", 307],
            [":", 307]
        ]),
        new Map([
            [";", 308],
            ["*", 308],
            ["/", 308],
            ["%", 308],
            ["+", 308],
            ["-", 308],
            ["<<", 308],
            [">>", 308],
            [">>>", 308],
            ["<", 308],
            [">", 308],
            ["<=", 308],
            [">=", 308],
            ["τinstanceof", 308],
            ["τin", 308],
            ["==", 308],
            ["!=", 308],
            ["===", 308],
            ["!==", 308],
            ["&", 308],
            ["^", 308],
            ["|", 308],
            ["&&", 308],
            ["||", 308],
            ["?", 308],
            [",", 308],
            ["]", 308],
            [")", 308],
            ["}", 308],
            [":", 308]
        ]),
        new Map([
            [";", 309],
            ["*", 309],
            ["/", 309],
            ["%", 309],
            ["+", 309],
            ["-", 309],
            ["<<", 309],
            [">>", 309],
            [">>>", 309],
            ["<", 309],
            [">", 309],
            ["<=", 309],
            [">=", 309],
            ["τinstanceof", 309],
            ["τin", 309],
            ["==", 309],
            ["!=", 309],
            ["===", 309],
            ["!==", 309],
            ["&", 309],
            ["^", 309],
            ["|", 309],
            ["&&", 309],
            ["||", 309],
            ["?", 309],
            [",", 309],
            ["]", 309],
            [")", 309],
            ["}", 309],
            [":", 309]
        ]),
        new Map([
            [";", 310],
            [".", 310],
            ["(", 310],
            ["[", 310],
            ["++", 310],
            ["--", 310],
            ["**", 310],
            ["*", 310],
            ["/", 310],
            ["%", 310],
            ["+", 310],
            ["-", 310],
            ["<<", 310],
            [">>", 310],
            [">>>", 310],
            ["<", 310],
            [">", 310],
            ["<=", 310],
            [">=", 310],
            ["τinstanceof", 310],
            ["τin", 310],
            ["==", 310],
            ["!=", 310],
            ["===", 310],
            ["!==", 310],
            ["&", 310],
            ["^", 310],
            ["|", 310],
            ["&&", 310],
            ["||", 310],
            ["?", 310],
            ["=", 310],
            ["*=", 310],
            ["/=", 310],
            ["%=", 310],
            ["+=", 310],
            ["-=", 310],
            ["<<=", 310],
            [">>=", 310],
            [">>>=", 310],
            ["&=", 310],
            ["^=", 310],
            ["|=", 310],
            ["**=", 310],
            [",", 310],
            ["]", 310],
            [")", 310],
            ["}", 310],
            [":", 310],
            ["{", 310],
            ["τof", 310]
        ]),
        new Map([
            ["]", 311],
            [",", 59]
        ]),
        new Map([
            [";", 312],
            [".", 312],
            ["(", 312],
            ["[", 312],
            ["++", 312],
            ["--", 312],
            ["**", 312],
            ["*", 312],
            ["/", 312],
            ["%", 312],
            ["+", 312],
            ["-", 312],
            ["<<", 312],
            [">>", 312],
            [">>>", 312],
            ["<", 312],
            [">", 312],
            ["<=", 312],
            [">=", 312],
            ["τinstanceof", 312],
            ["τin", 312],
            ["==", 312],
            ["!=", 312],
            ["===", 312],
            ["!==", 312],
            ["&", 312],
            ["^", 312],
            ["|", 312],
            ["&&", 312],
            ["||", 312],
            ["?", 312],
            ["=", 312],
            ["*=", 312],
            ["/=", 312],
            ["%=", 312],
            ["+=", 312],
            ["-=", 312],
            ["<<=", 312],
            [">>=", 312],
            [">>>=", 312],
            ["&=", 312],
            ["^=", 312],
            ["|=", 312],
            ["**=", 312],
            [",", 312],
            ["]", 312],
            [")", 312],
            ["}", 312],
            [":", 312],
            ["{", 312],
            ["τof", 312]
        ]),
        new Map([
            [")", 313],
            [",", 314]
        ]),
        new Map([
            [")", 315],
            [",", 315]
        ]),
        new Map([
            ["]", 316],
            [",", 59]
        ]),
        new Map([
            [";", 317],
            ["[", 317],
            [".", 317],
            ["(", 317],
            ["++", 317],
            ["--", 317],
            ["**", 317],
            ["*", 317],
            ["/", 317],
            ["%", 317],
            ["+", 317],
            ["-", 317],
            ["<<", 317],
            [">>", 317],
            [">>>", 317],
            ["<", 317],
            [">", 317],
            ["<=", 317],
            [">=", 317],
            ["τinstanceof", 317],
            ["τin", 317],
            ["==", 317],
            ["!=", 317],
            ["===", 317],
            ["!==", 317],
            ["&", 317],
            ["^", 317],
            ["|", 317],
            ["&&", 317],
            ["||", 317],
            ["?", 317],
            ["=", 317],
            ["*=", 317],
            ["/=", 317],
            ["%=", 317],
            ["+=", 317],
            ["-=", 317],
            ["<<=", 317],
            [">>=", 317],
            [">>>=", 317],
            ["&=", 317],
            ["^=", 317],
            ["|=", 317],
            ["**=", 317],
            [",", 317],
            ["]", 317],
            [")", 317],
            ["}", 317],
            [":", 317],
            ["{", 317],
            ["τof", 317]
        ]),
        new Map([
            [";", 318],
            ["[", 318],
            [".", 318],
            ["(", 318],
            ["++", 318],
            ["--", 318],
            ["**", 318],
            ["*", 318],
            ["/", 318],
            ["%", 318],
            ["+", 318],
            ["-", 318],
            ["<<", 318],
            [">>", 318],
            [">>>", 318],
            ["<", 318],
            [">", 318],
            ["<=", 318],
            [">=", 318],
            ["τinstanceof", 318],
            ["τin", 318],
            ["==", 318],
            ["!=", 318],
            ["===", 318],
            ["!==", 318],
            ["&", 318],
            ["^", 318],
            ["|", 318],
            ["&&", 318],
            ["||", 318],
            ["?", 318],
            ["=", 318],
            ["*=", 318],
            ["/=", 318],
            ["%=", 318],
            ["+=", 318],
            ["-=", 318],
            ["<<=", 318],
            [">>=", 318],
            [">>>=", 318],
            ["&=", 318],
            ["^=", 318],
            ["|=", 318],
            ["**=", 318],
            [",", 318],
            ["]", 318],
            [")", 318],
            ["}", 318],
            [":", 318],
            ["{", 318],
            ["τof", 318]
        ]),
        new Map([
            [".", 319],
            ["[", 319],
            [";", 319],
            ["(", 319],
            ["++", 319],
            ["--", 319],
            ["**", 319],
            ["*", 319],
            ["/", 319],
            ["%", 319],
            ["+", 319],
            ["-", 319],
            ["<<", 319],
            [">>", 319],
            [">>>", 319],
            ["<", 319],
            [">", 319],
            ["<=", 319],
            [">=", 319],
            ["τinstanceof", 319],
            ["τin", 319],
            ["==", 319],
            ["!=", 319],
            ["===", 319],
            ["!==", 319],
            ["&", 319],
            ["^", 319],
            ["|", 319],
            ["&&", 319],
            ["||", 319],
            ["?", 319],
            ["=", 319],
            ["*=", 319],
            ["/=", 319],
            ["%=", 319],
            ["+=", 319],
            ["-=", 319],
            ["<<=", 319],
            [">>=", 319],
            [">>>=", 319],
            ["&=", 319],
            ["^=", 319],
            ["|=", 319],
            ["**=", 319],
            [",", 319],
            ["]", 319],
            [")", 319],
            ["}", 319],
            [":", 319],
            ["{", 319],
            ["τof", 319]
        ]),
        new Map([
            [";", 320],
            ["[", 320],
            [".", 320],
            ["(", 320],
            ["++", 320],
            ["--", 320],
            ["**", 320],
            ["*", 320],
            ["/", 320],
            ["%", 320],
            ["+", 320],
            ["-", 320],
            ["<<", 320],
            [">>", 320],
            [">>>", 320],
            ["<", 320],
            [">", 320],
            ["<=", 320],
            [">=", 320],
            ["τinstanceof", 320],
            ["τin", 320],
            ["==", 320],
            ["!=", 320],
            ["===", 320],
            ["!==", 320],
            ["&", 320],
            ["^", 320],
            ["|", 320],
            ["&&", 320],
            ["||", 320],
            ["?", 320],
            ["=", 320],
            ["*=", 320],
            ["/=", 320],
            ["%=", 320],
            ["+=", 320],
            ["-=", 320],
            ["<<=", 320],
            [">>=", 320],
            [">>>=", 320],
            ["&=", 320],
            ["^=", 320],
            ["|=", 320],
            ["**=", 320],
            [",", 320],
            ["]", 320],
            [")", 320],
            ["}", 320],
            [":", 320],
            ["{", 320],
            ["τof", 320]
        ]),
        new Map([
            ["]", 321],
            [",", 321],
            ["τthis", 321],
            ["θid", 321],
            ["τyield", 321],
            ["τawait", 321],
            ["τtrue", 321],
            ["τfalse", 321],
            ["τnull", 321],
            ["θstr", 321],
            ["θnum", 321],
            ["[", 321],
            ["{", 321],
            ["τfunction", 321],
            ["τclass", 321],
            ["(", 321],
            ["τsuper", 321],
            ["τnew", 321],
            ["++", 321],
            ["--", 321],
            ["τdelete", 321],
            ["τvoid", 321],
            ["τtypeof", 321],
            ["+", 321],
            ["-", 321],
            ["~", 321],
            ["!", 321],
            ["...", 321]
        ]),
        new Map([
            ["]", 322],
            [",", 322]
        ]),
        new Map([
            [";", 323],
            ["[", 323],
            [".", 323],
            ["(", 323],
            ["++", 323],
            ["--", 323],
            ["**", 323],
            ["*", 323],
            ["/", 323],
            ["%", 323],
            ["+", 323],
            ["-", 323],
            ["<<", 323],
            [">>", 323],
            [">>>", 323],
            ["<", 323],
            [">", 323],
            ["<=", 323],
            [">=", 323],
            ["τinstanceof", 323],
            ["τin", 323],
            ["==", 323],
            ["!=", 323],
            ["===", 323],
            ["!==", 323],
            ["&", 323],
            ["^", 323],
            ["|", 323],
            ["&&", 323],
            ["||", 323],
            ["?", 323],
            ["=", 323],
            ["*=", 323],
            ["/=", 323],
            ["%=", 323],
            ["+=", 323],
            ["-=", 323],
            ["<<=", 323],
            [">>=", 323],
            [">>>=", 323],
            ["&=", 323],
            ["^=", 323],
            ["|=", 323],
            ["**=", 323],
            [",", 323],
            ["]", 323],
            [")", 323],
            ["}", 323],
            [":", 323],
            ["{", 323],
            ["τof", 323]
        ]),
        new Map([
            ["]", 324],
            [",", 216]
        ]),
        new Map([
            ["]", 219],
            [",", 219],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["...", 142]
        ]),
        new Map([
            ["]", 325],
            [",", 325]
        ]),
        new Map([
            [")", 326]
        ]),
        new Map([
            [")", 327]
        ]),
        new Map([
            [")", 327],
            [",", 328]
        ]),
        new Map([
            [")", 329]
        ]),
        new Map([
            [")", 330],
            [",", 330]
        ]),
        new Map([
            [")", 331],
            [",", 331]
        ]),
        new Map([
            [";", 332],
            ["[", 332],
            [".", 332],
            ["(", 332],
            ["++", 332],
            ["--", 332],
            ["**", 332],
            ["*", 332],
            ["/", 332],
            ["%", 332],
            ["+", 332],
            ["-", 332],
            ["<<", 332],
            [">>", 332],
            [">>>", 332],
            ["<", 332],
            [">", 332],
            ["<=", 332],
            [">=", 332],
            ["τinstanceof", 332],
            ["τin", 332],
            ["==", 332],
            ["!=", 332],
            ["===", 332],
            ["!==", 332],
            ["&", 332],
            ["^", 332],
            ["|", 332],
            ["&&", 332],
            ["||", 332],
            ["?", 332],
            ["=", 332],
            ["*=", 332],
            ["/=", 332],
            ["%=", 332],
            ["+=", 332],
            ["-=", 332],
            ["<<=", 332],
            [">>=", 332],
            [">>>=", 332],
            ["&=", 332],
            ["^=", 332],
            ["|=", 332],
            ["**=", 332],
            [",", 332],
            ["$", 332],
            ["{", 332],
            ["τvar", 332],
            ["τthis", 332],
            ["θid", 332],
            ["τyield", 332],
            ["τawait", 332],
            ["τtrue", 332],
            ["τfalse", 332],
            ["τnull", 332],
            ["θstr", 332],
            ["θnum", 332],
            ["τfunction", 332],
            ["τclass", 332],
            ["τsuper", 332],
            ["τnew", 332],
            ["τdelete", 332],
            ["τvoid", 332],
            ["τtypeof", 332],
            ["~", 332],
            ["!", 332],
            ["τif", 332],
            ["τdo", 332],
            ["τwhile", 332],
            ["τfor", 332],
            ["τswitch", 332],
            ["τcontinue", 332],
            ["τbreak", 332],
            ["τreturn", 332],
            ["τwith", 332],
            ["τthrow", 332],
            ["τtry", 332],
            ["τdebugger", 332],
            ["τlet", 332],
            ["τconst", 332],
            ["}", 332],
            ["]", 332],
            [")", 332],
            [":", 332],
            ["τof", 332],
            ["τcase", 332],
            ["τdefault", 332]
        ]),
        new Map([
            ["}", 333],
            ["τstatic", 226],
            [";", 227],
            ["τget", 53],
            ["τset", 54],
            ["θid", 182],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["}", 334]
        ]),
        new Map([
            [";", 335],
            ["[", 335],
            [".", 335],
            ["(", 335],
            ["++", 335],
            ["--", 335],
            ["**", 335],
            ["*", 335],
            ["/", 335],
            ["%", 335],
            ["+", 335],
            ["-", 335],
            ["<<", 335],
            [">>", 335],
            [">>>", 335],
            ["<", 335],
            [">", 335],
            ["<=", 335],
            [">=", 335],
            ["τinstanceof", 335],
            ["τin", 335],
            ["==", 335],
            ["!=", 335],
            ["===", 335],
            ["!==", 335],
            ["&", 335],
            ["^", 335],
            ["|", 335],
            ["&&", 335],
            ["||", 335],
            ["?", 335],
            ["=", 335],
            ["*=", 335],
            ["/=", 335],
            ["%=", 335],
            ["+=", 335],
            ["-=", 335],
            ["<<=", 335],
            [">>=", 335],
            [">>>=", 335],
            ["&=", 335],
            ["^=", 335],
            ["|=", 335],
            ["**=", 335],
            [",", 335],
            ["$", 335],
            ["{", 335],
            ["τvar", 335],
            ["τthis", 335],
            ["θid", 335],
            ["τyield", 335],
            ["τawait", 335],
            ["τtrue", 335],
            ["τfalse", 335],
            ["τnull", 335],
            ["θstr", 335],
            ["θnum", 335],
            ["τfunction", 335],
            ["τclass", 335],
            ["τsuper", 335],
            ["τnew", 335],
            ["τdelete", 335],
            ["τvoid", 335],
            ["τtypeof", 335],
            ["~", 335],
            ["!", 335],
            ["τif", 335],
            ["τdo", 335],
            ["τwhile", 335],
            ["τfor", 335],
            ["τswitch", 335],
            ["τcontinue", 335],
            ["τbreak", 335],
            ["τreturn", 335],
            ["τwith", 335],
            ["τthrow", 335],
            ["τtry", 335],
            ["τdebugger", 335],
            ["τlet", 335],
            ["τconst", 335],
            ["}", 335],
            ["]", 335],
            [")", 335],
            [":", 335],
            ["τof", 335],
            ["τcase", 335],
            ["τdefault", 335]
        ]),
        new Map([
            ["}", 336],
            ["τstatic", 226],
            [";", 227],
            ["τget", 53],
            ["τset", 54],
            ["θid", 182],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["}", 337],
            ["θid", 337],
            ["θstr", 337],
            ["θnum", 337],
            ["[", 337],
            ["τget", 337],
            ["τset", 337],
            ["τstatic", 337],
            [";", 337]
        ]),
        new Map([
            ["}", 338],
            ["θid", 338],
            ["θstr", 338],
            ["θnum", 338],
            ["[", 338],
            ["τget", 338],
            ["τset", 338],
            ["τstatic", 338],
            [";", 338]
        ]),
        new Map([
            ["τget", 53],
            ["τset", 54],
            ["θid", 182],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["(", 180]
        ]),
        new Map([
            ["{", 339]
        ]),
        new Map([
            [";", 340],
            ["[", 340],
            [".", 340],
            ["(", 340],
            ["++", 340],
            ["--", 340],
            ["**", 340],
            ["*", 340],
            ["/", 340],
            ["%", 340],
            ["+", 340],
            ["-", 340],
            ["<<", 340],
            [">>", 340],
            [">>>", 340],
            ["<", 340],
            [">", 340],
            ["<=", 340],
            [">=", 340],
            ["τinstanceof", 340],
            ["τin", 340],
            ["==", 340],
            ["!=", 340],
            ["===", 340],
            ["!==", 340],
            ["&", 340],
            ["^", 340],
            ["|", 340],
            ["&&", 340],
            ["||", 340],
            ["?", 340],
            ["=>", 340],
            ["=", 340],
            ["*=", 340],
            ["/=", 340],
            ["%=", 340],
            ["+=", 340],
            ["-=", 340],
            ["<<=", 340],
            [">>=", 340],
            [">>>=", 340],
            ["&=", 340],
            ["^=", 340],
            ["|=", 340],
            ["**=", 340],
            [",", 340],
            ["]", 340],
            [")", 340],
            ["}", 340],
            [":", 340],
            ["{", 340],
            ["τof", 340]
        ]),
        new Map([
            [")", 341],
            ["...", 342],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [")", 343]
        ]),
        new Map([
            [")", 344]
        ]),
        new Map([
            [")", 345]
        ]),
        new Map([
            [")", 346]
        ]),
        new Map([
            [")", 347]
        ]),
        new Map([
            [".", 348],
            ["[", 348],
            [";", 348],
            ["(", 348],
            ["++", 348],
            ["--", 348],
            ["**", 348],
            ["*", 348],
            ["/", 348],
            ["%", 348],
            ["+", 348],
            ["-", 348],
            ["<<", 348],
            [">>", 348],
            [">>>", 348],
            ["<", 348],
            [">", 348],
            ["<=", 348],
            [">=", 348],
            ["τinstanceof", 348],
            ["τin", 348],
            ["==", 348],
            ["!=", 348],
            ["===", 348],
            ["!==", 348],
            ["&", 348],
            ["^", 348],
            ["|", 348],
            ["&&", 348],
            ["||", 348],
            ["?", 348],
            ["=", 348],
            ["*=", 348],
            ["/=", 348],
            ["%=", 348],
            ["+=", 348],
            ["-=", 348],
            ["<<=", 348],
            [">>=", 348],
            [">>>=", 348],
            ["&=", 348],
            ["^=", 348],
            ["|=", 348],
            ["**=", 348],
            [",", 348],
            ["]", 348],
            [")", 348],
            ["}", 348],
            [":", 348],
            ["{", 348],
            ["τof", 348]
        ]),
        new Map([
            ["]", 349],
            [",", 59]
        ]),
        new Map([
            [";", 350],
            [",", 350],
            ["]", 350],
            [")", 350],
            ["}", 350],
            [":", 350]
        ]),
        new Map([
            [";", 351],
            [",", 351],
            ["]", 351],
            [")", 351],
            ["}", 351],
            [":", 351]
        ]),
        new Map([
            ["}", 352],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42],
            ["...", 52],
            ["τget", 53],
            ["τset", 54]
        ]),
        new Map([
            [")", 353],
            [",", 59]
        ]),
        new Map([
            ["(", 354]
        ]),
        new Map([
            [")", 355],
            [",", 59]
        ]),
        new Map([
            [";", 356],
            [",", 59]
        ]),
        new Map([
            [";", 357],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 358]
        ]),
        new Map([
            ["τin", 359],
            ["τof", 360],
            ["=", 62],
            [";", 63],
            ["++", 64],
            ["--", 65],
            ["**", 63],
            ["*", 63],
            ["/", 63],
            ["%", 63],
            ["+", 63],
            ["-", 63],
            ["<<", 63],
            [">>", 63],
            [">>>", 63],
            ["<", 63],
            [">", 63],
            ["<=", 63],
            [">=", 63],
            ["τinstanceof", 63],
            ["==", 63],
            ["!=", 63],
            ["===", 63],
            ["!==", 63],
            ["&", 63],
            ["^", 63],
            ["|", 63],
            ["&&", 63],
            ["||", 63],
            ["?", 63],
            [",", 63],
            ["*=", 66],
            ["/=", 67],
            ["%=", 68],
            ["+=", 69],
            ["-=", 70],
            ["<<=", 71],
            [">>=", 72],
            [">>>=", 73],
            ["&=", 74],
            ["^=", 75],
            ["|=", 76],
            ["**=", 77]
        ]),
        new Map([
            ["τin", 361],
            ["τof", 362]
        ]),
        new Map([
            ["τvar", 363],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            [")", 364],
            [",", 59]
        ]),
        new Map([
            ["$", 365],
            ["{", 365],
            ["τvar", 365],
            [";", 365],
            ["τthis", 365],
            ["θid", 365],
            ["τyield", 365],
            ["τawait", 365],
            ["τtrue", 365],
            ["τfalse", 365],
            ["τnull", 365],
            ["θstr", 365],
            ["θnum", 365],
            ["[", 365],
            ["τfunction", 365],
            ["τclass", 365],
            ["(", 365],
            ["τsuper", 365],
            ["τnew", 365],
            ["++", 365],
            ["--", 365],
            ["τdelete", 365],
            ["τvoid", 365],
            ["τtypeof", 365],
            ["+", 365],
            ["-", 365],
            ["~", 365],
            ["!", 365],
            ["τif", 365],
            ["τdo", 365],
            ["τwhile", 365],
            ["τfor", 365],
            ["τswitch", 365],
            ["τcontinue", 365],
            ["τbreak", 365],
            ["τreturn", 365],
            ["τwith", 365],
            ["τthrow", 365],
            ["τtry", 365],
            ["τdebugger", 365],
            ["τlet", 365],
            ["τconst", 365],
            ["}", 365],
            ["τelse", 365],
            [")", 365],
            ["τcase", 365],
            ["τdefault", 365]
        ]),
        new Map([
            ["$", 366],
            ["{", 366],
            ["τvar", 366],
            [";", 366],
            ["τthis", 366],
            ["θid", 366],
            ["τyield", 366],
            ["τawait", 366],
            ["τtrue", 366],
            ["τfalse", 366],
            ["τnull", 366],
            ["θstr", 366],
            ["θnum", 366],
            ["[", 366],
            ["τfunction", 366],
            ["τclass", 366],
            ["(", 366],
            ["τsuper", 366],
            ["τnew", 366],
            ["++", 366],
            ["--", 366],
            ["τdelete", 366],
            ["τvoid", 366],
            ["τtypeof", 366],
            ["+", 366],
            ["-", 366],
            ["~", 366],
            ["!", 366],
            ["τif", 366],
            ["τdo", 366],
            ["τwhile", 366],
            ["τfor", 366],
            ["τswitch", 366],
            ["τcontinue", 366],
            ["τbreak", 366],
            ["τreturn", 366],
            ["τwith", 366],
            ["τthrow", 366],
            ["τtry", 366],
            ["τdebugger", 366],
            ["τlet", 366],
            ["τconst", 366],
            ["}", 366],
            ["τelse", 366],
            [")", 366],
            ["τcase", 366],
            ["τdefault", 366]
        ]),
        new Map([
            ["$", 367],
            ["{", 367],
            ["τvar", 367],
            [";", 367],
            ["τthis", 367],
            ["θid", 367],
            ["τyield", 367],
            ["τawait", 367],
            ["τtrue", 367],
            ["τfalse", 367],
            ["τnull", 367],
            ["θstr", 367],
            ["θnum", 367],
            ["[", 367],
            ["τfunction", 367],
            ["τclass", 367],
            ["(", 367],
            ["τsuper", 367],
            ["τnew", 367],
            ["++", 367],
            ["--", 367],
            ["τdelete", 367],
            ["τvoid", 367],
            ["τtypeof", 367],
            ["+", 367],
            ["-", 367],
            ["~", 367],
            ["!", 367],
            ["τif", 367],
            ["τdo", 367],
            ["τwhile", 367],
            ["τfor", 367],
            ["τswitch", 367],
            ["τcontinue", 367],
            ["τbreak", 367],
            ["τreturn", 367],
            ["τwith", 367],
            ["τthrow", 367],
            ["τtry", 367],
            ["τdebugger", 367],
            ["τlet", 367],
            ["τconst", 367],
            ["}", 367],
            ["τelse", 367],
            [")", 367],
            ["τcase", 367],
            ["τdefault", 367]
        ]),
        new Map([
            [")", 368],
            [",", 59]
        ]),
        new Map([
            ["$", 369],
            ["{", 369],
            ["τvar", 369],
            [";", 369],
            ["τthis", 369],
            ["θid", 369],
            ["τyield", 369],
            ["τawait", 369],
            ["τtrue", 369],
            ["τfalse", 369],
            ["τnull", 369],
            ["θstr", 369],
            ["θnum", 369],
            ["[", 369],
            ["τfunction", 369],
            ["τclass", 369],
            ["(", 369],
            ["τsuper", 369],
            ["τnew", 369],
            ["++", 369],
            ["--", 369],
            ["τdelete", 369],
            ["τvoid", 369],
            ["τtypeof", 369],
            ["+", 369],
            ["-", 369],
            ["~", 369],
            ["!", 369],
            ["τif", 369],
            ["τdo", 369],
            ["τwhile", 369],
            ["τfor", 369],
            ["τswitch", 369],
            ["τcontinue", 369],
            ["τbreak", 369],
            ["τreturn", 369],
            ["τwith", 369],
            ["τthrow", 369],
            ["τtry", 369],
            ["τdebugger", 369],
            ["τlet", 369],
            ["τconst", 369],
            ["}", 369],
            ["τelse", 369],
            [")", 369],
            ["τcase", 369],
            ["τdefault", 369]
        ]),
        new Map([
            ["$", 370],
            ["{", 370],
            ["τvar", 370],
            [";", 370],
            ["τthis", 370],
            ["θid", 370],
            ["τyield", 370],
            ["τawait", 370],
            ["τtrue", 370],
            ["τfalse", 370],
            ["τnull", 370],
            ["θstr", 370],
            ["θnum", 370],
            ["[", 370],
            ["τfunction", 370],
            ["τclass", 370],
            ["(", 370],
            ["τsuper", 370],
            ["τnew", 370],
            ["++", 370],
            ["--", 370],
            ["τdelete", 370],
            ["τvoid", 370],
            ["τtypeof", 370],
            ["+", 370],
            ["-", 370],
            ["~", 370],
            ["!", 370],
            ["τif", 370],
            ["τdo", 370],
            ["τwhile", 370],
            ["τfor", 370],
            ["τswitch", 370],
            ["τcontinue", 370],
            ["τbreak", 370],
            ["τreturn", 370],
            ["τwith", 370],
            ["τthrow", 370],
            ["τtry", 370],
            ["τdebugger", 370],
            ["τlet", 370],
            ["τconst", 370],
            ["}", 370],
            ["τelse", 370],
            [")", 370],
            ["τcase", 370],
            ["τdefault", 370]
        ]),
        new Map([
            ["$", 370],
            [";", 370],
            ["[", 370],
            [".", 143],
            ["(", 370],
            ["++", 370],
            ["--", 370],
            ["**", 143],
            ["*", 143],
            ["/", 143],
            ["%", 143],
            ["+", 370],
            ["-", 370],
            ["<<", 143],
            [">>", 143],
            [">>>", 143],
            ["<", 143],
            [">", 143],
            ["<=", 143],
            [">=", 143],
            ["τinstanceof", 143],
            ["τin", 143],
            ["==", 143],
            ["!=", 143],
            ["===", 143],
            ["!==", 143],
            ["&", 143],
            ["^", 143],
            ["|", 143],
            ["&&", 143],
            ["||", 143],
            ["?", 143],
            ["=", 143],
            ["*=", 143],
            ["/=", 143],
            ["%=", 143],
            ["+=", 143],
            ["-=", 143],
            ["<<=", 143],
            [">>=", 143],
            [">>>=", 143],
            ["&=", 143],
            ["^=", 143],
            ["|=", 143],
            ["**=", 143],
            [",", 143],
            ["{", 370],
            ["τvar", 370],
            ["τthis", 370],
            ["θid", 370],
            ["τyield", 370],
            ["τawait", 370],
            ["τtrue", 370],
            ["τfalse", 370],
            ["τnull", 370],
            ["θstr", 370],
            ["θnum", 370],
            ["τfunction", 370],
            ["τclass", 370],
            ["τsuper", 370],
            ["τnew", 370],
            ["τdelete", 370],
            ["τvoid", 370],
            ["τtypeof", 370],
            ["~", 370],
            ["!", 370],
            ["τif", 370],
            ["τdo", 370],
            ["τwhile", 370],
            ["τfor", 370],
            ["τswitch", 370],
            ["τcontinue", 370],
            ["τbreak", 370],
            ["τreturn", 370],
            ["τwith", 370],
            ["τthrow", 370],
            ["τtry", 370],
            ["τdebugger", 370],
            ["τlet", 370],
            ["τconst", 370],
            ["}", 370],
            ["τelse", 370],
            [")", 370],
            ["τcase", 370],
            ["τdefault", 370]
        ]),
        new Map([
            ["$", 371],
            ["{", 371],
            ["τvar", 371],
            [";", 371],
            ["τthis", 371],
            ["θid", 371],
            ["τyield", 371],
            ["τawait", 371],
            ["τtrue", 371],
            ["τfalse", 371],
            ["τnull", 371],
            ["θstr", 371],
            ["θnum", 371],
            ["[", 371],
            ["τfunction", 371],
            ["τclass", 371],
            ["(", 371],
            ["τsuper", 371],
            ["τnew", 371],
            ["++", 371],
            ["--", 371],
            ["τdelete", 371],
            ["τvoid", 371],
            ["τtypeof", 371],
            ["+", 371],
            ["-", 371],
            ["~", 371],
            ["!", 371],
            ["τif", 371],
            ["τdo", 371],
            ["τwhile", 371],
            ["τfor", 371],
            ["τswitch", 371],
            ["τcontinue", 371],
            ["τbreak", 371],
            ["τreturn", 371],
            ["τwith", 371],
            ["τthrow", 371],
            ["τtry", 371],
            ["τdebugger", 371],
            ["τlet", 371],
            ["τconst", 371],
            ["}", 371],
            ["τelse", 371],
            [")", 371],
            ["τcase", 371],
            ["τdefault", 371]
        ]),
        new Map([
            ["$", 372],
            ["{", 372],
            ["τvar", 372],
            [";", 372],
            ["τthis", 372],
            ["θid", 372],
            ["τyield", 372],
            ["τawait", 372],
            ["τtrue", 372],
            ["τfalse", 372],
            ["τnull", 372],
            ["θstr", 372],
            ["θnum", 372],
            ["[", 372],
            ["τfunction", 372],
            ["τclass", 372],
            ["(", 372],
            ["τsuper", 372],
            ["τnew", 372],
            ["++", 372],
            ["--", 372],
            ["τdelete", 372],
            ["τvoid", 372],
            ["τtypeof", 372],
            ["+", 372],
            ["-", 372],
            ["~", 372],
            ["!", 372],
            ["τif", 372],
            ["τdo", 372],
            ["τwhile", 372],
            ["τfor", 372],
            ["τswitch", 372],
            ["τcontinue", 372],
            ["τbreak", 372],
            ["τreturn", 372],
            ["τwith", 372],
            ["τthrow", 372],
            ["τtry", 372],
            ["τdebugger", 372],
            ["τlet", 372],
            ["τconst", 372],
            ["τfinally", 250],
            ["}", 372],
            ["τelse", 372],
            [")", 372],
            ["τcase", 372],
            ["τdefault", 372]
        ]),
        new Map([
            ["$", 373],
            ["{", 373],
            ["τvar", 373],
            [";", 373],
            ["τthis", 373],
            ["θid", 373],
            ["τyield", 373],
            ["τawait", 373],
            ["τtrue", 373],
            ["τfalse", 373],
            ["τnull", 373],
            ["θstr", 373],
            ["θnum", 373],
            ["[", 373],
            ["τfunction", 373],
            ["τclass", 373],
            ["(", 373],
            ["τsuper", 373],
            ["τnew", 373],
            ["++", 373],
            ["--", 373],
            ["τdelete", 373],
            ["τvoid", 373],
            ["τtypeof", 373],
            ["+", 373],
            ["-", 373],
            ["~", 373],
            ["!", 373],
            ["τif", 373],
            ["τdo", 373],
            ["τwhile", 373],
            ["τfor", 373],
            ["τswitch", 373],
            ["τcontinue", 373],
            ["τbreak", 373],
            ["τreturn", 373],
            ["τwith", 373],
            ["τthrow", 373],
            ["τtry", 373],
            ["τdebugger", 373],
            ["τlet", 373],
            ["τconst", 373],
            ["}", 373],
            ["τelse", 373],
            [")", 373],
            ["τcase", 373],
            ["τdefault", 373]
        ]),
        new Map([
            ["(", 374]
        ]),
        new Map([
            ["$", 375],
            ["{", 375],
            ["τvar", 375],
            [";", 375],
            ["τthis", 375],
            ["θid", 375],
            ["τyield", 375],
            ["τawait", 375],
            ["τtrue", 375],
            ["τfalse", 375],
            ["τnull", 375],
            ["θstr", 375],
            ["θnum", 375],
            ["[", 375],
            ["τfunction", 375],
            ["τclass", 375],
            ["(", 375],
            ["τsuper", 375],
            ["τnew", 375],
            ["++", 375],
            ["--", 375],
            ["τdelete", 375],
            ["τvoid", 375],
            ["τtypeof", 375],
            ["+", 375],
            ["-", 375],
            ["~", 375],
            ["!", 375],
            ["τif", 375],
            ["τdo", 375],
            ["τwhile", 375],
            ["τfor", 375],
            ["τswitch", 375],
            ["τcontinue", 375],
            ["τbreak", 375],
            ["τreturn", 375],
            ["τwith", 375],
            ["τthrow", 375],
            ["τtry", 375],
            ["τdebugger", 375],
            ["τlet", 375],
            ["τconst", 375],
            ["}", 375],
            ["τcase", 375],
            ["τdefault", 375]
        ]),
        new Map([
            [";", 376],
            [",", 376]
        ]),
        new Map([
            [")", 377],
            [",", 59]
        ]),
        new Map([
            [";", 378],
            [",", 59]
        ]),
        new Map([
            ["τvar", 363],
            ["τlet", 41],
            ["τconst", 42],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["{", 372],
            ["τvar", 372],
            [";", 372],
            ["τthis", 372],
            ["θid", 372],
            ["τyield", 372],
            ["τawait", 372],
            ["τtrue", 372],
            ["τfalse", 372],
            ["τnull", 372],
            ["θstr", 372],
            ["θnum", 372],
            ["[", 372],
            ["τfunction", 372],
            ["τclass", 372],
            ["(", 372],
            ["τsuper", 372],
            ["τnew", 372],
            ["++", 372],
            ["--", 372],
            ["τdelete", 372],
            ["τvoid", 372],
            ["τtypeof", 372],
            ["+", 372],
            ["-", 372],
            ["~", 372],
            ["!", 372],
            ["τif", 372],
            ["τdo", 372],
            ["τwhile", 372],
            ["τfor", 372],
            ["τswitch", 372],
            ["τcontinue", 372],
            ["τbreak", 372],
            ["τreturn", 372],
            ["τwith", 372],
            ["τthrow", 372],
            ["τtry", 372],
            ["τdebugger", 372],
            ["τlet", 372],
            ["τconst", 372],
            ["τfinally", 250]
        ]),
        new Map([
            [";", 379],
            ["[", 379],
            [".", 379],
            ["(", 379],
            ["++", 379],
            ["--", 379],
            ["**", 379],
            ["*", 379],
            ["/", 379],
            ["%", 379],
            ["+", 379],
            ["-", 379],
            ["<<", 379],
            [">>", 379],
            [">>>", 379],
            ["<", 379],
            [">", 379],
            ["<=", 379],
            [">=", 379],
            ["τinstanceof", 379],
            ["τin", 379],
            ["==", 379],
            ["!=", 379],
            ["===", 379],
            ["!==", 379],
            ["&", 379],
            ["^", 379],
            ["|", 379],
            ["&&", 379],
            ["||", 379],
            ["?", 379],
            ["=", 379],
            ["*=", 379],
            ["/=", 379],
            ["%=", 379],
            ["+=", 379],
            ["-=", 379],
            ["<<=", 379],
            [">>=", 379],
            [">>>=", 379],
            ["&=", 379],
            ["^=", 379],
            ["|=", 379],
            ["**=", 379],
            [",", 379],
            ["]", 379],
            [")", 379],
            ["}", 379],
            [":", 379],
            ["{", 379],
            ["τof", 379]
        ]),
        new Map([
            ["}", 380],
            [",", 380]
        ]),
        new Map([
            ["}", 381],
            [",", 381],
            [";", 381],
            ["]", 381],
            [")", 381]
        ]),
        new Map([
            [":", 382],
            ["(", 382]
        ]),
        new Map([
            ["}", 383],
            [",", 383]
        ]),
        new Map([
            [")", 384]
        ]),
        new Map([
            [")", 385]
        ]),
        new Map([
            [")", 386]
        ]),
        new Map([
            [";", 387],
            [",", 387]
        ]),
        new Map([
            ["=", 388],
            ["]", 388],
            [",", 388],
            [")", 388],
            ["}", 388]
        ]),
        new Map([
            ["}", 389],
            ["...", 192],
            ["θid", 18],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 183]
        ]),
        new Map([
            ["}", 390]
        ]),
        new Map([
            ["}", 391],
            [",", 391],
            ["]", 391],
            [")", 391]
        ]),
        new Map([
            ["]", 392]
        ]),
        new Map([
            ["=", 393],
            ["]", 393],
            [",", 393],
            [")", 393],
            ["}", 393]
        ]),
        new Map([
            ["]", 394],
            [",", 394]
        ]),
        new Map([
            ["]", 395],
            [",", 141],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["]", 396],
            [")", 396]
        ]),
        new Map([
            ["]", 397],
            [",", 397],
            [")", 397],
            ["}", 397]
        ]),
        new Map([
            [";", 398],
            [".", 398],
            ["(", 398],
            ["[", 398],
            ["++", 398],
            ["--", 398],
            ["**", 398],
            ["*", 398],
            ["/", 398],
            ["%", 398],
            ["+", 398],
            ["-", 398],
            ["<<", 398],
            [">>", 398],
            [">>>", 398],
            ["<", 398],
            [">", 398],
            ["<=", 398],
            [">=", 398],
            ["τinstanceof", 398],
            ["τin", 398],
            ["==", 398],
            ["!=", 398],
            ["===", 398],
            ["!==", 398],
            ["&", 398],
            ["^", 398],
            ["|", 398],
            ["&&", 398],
            ["||", 398],
            ["?", 398],
            ["=", 398],
            ["*=", 398],
            ["/=", 398],
            ["%=", 398],
            ["+=", 398],
            ["-=", 398],
            ["<<=", 398],
            [">>=", 398],
            [">>>=", 398],
            ["&=", 398],
            ["^=", 398],
            ["|=", 398],
            ["**=", 398],
            [",", 398],
            ["]", 398],
            [")", 398],
            ["}", 398],
            [":", 398],
            ["{", 398],
            ["τof", 398]
        ]),
        new Map([
            [";", 399],
            [".", 399],
            ["(", 399],
            ["[", 399],
            ["++", 399],
            ["--", 399],
            ["**", 399],
            ["*", 399],
            ["/", 399],
            ["%", 399],
            ["+", 399],
            ["-", 399],
            ["<<", 399],
            [">>", 399],
            [">>>", 399],
            ["<", 399],
            [">", 399],
            ["<=", 399],
            [">=", 399],
            ["τinstanceof", 399],
            ["τin", 399],
            ["==", 399],
            ["!=", 399],
            ["===", 399],
            ["!==", 399],
            ["&", 399],
            ["^", 399],
            ["|", 399],
            ["&&", 399],
            ["||", 399],
            ["?", 399],
            ["=", 399],
            ["*=", 399],
            ["/=", 399],
            ["%=", 399],
            ["+=", 399],
            ["-=", 399],
            ["<<=", 399],
            [">>=", 399],
            [">>>=", 399],
            ["&=", 399],
            ["^=", 399],
            ["|=", 399],
            ["**=", 399],
            [",", 399],
            ["]", 399],
            [")", 399],
            ["}", 399],
            [":", 399],
            ["{", 399],
            ["τof", 399]
        ]),
        new Map([
            [")", 400],
            ["...", 401],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [")", 402],
            [",", 402]
        ]),
        new Map([
            [";", 403],
            ["[", 403],
            [".", 403],
            ["(", 403],
            ["++", 403],
            ["--", 403],
            ["**", 403],
            ["*", 403],
            ["/", 403],
            ["%", 403],
            ["+", 403],
            ["-", 403],
            ["<<", 403],
            [">>", 403],
            [">>>", 403],
            ["<", 403],
            [">", 403],
            ["<=", 403],
            [">=", 403],
            ["τinstanceof", 403],
            ["τin", 403],
            ["==", 403],
            ["!=", 403],
            ["===", 403],
            ["!==", 403],
            ["&", 403],
            ["^", 403],
            ["|", 403],
            ["&&", 403],
            ["||", 403],
            ["?", 403],
            ["=", 403],
            ["*=", 403],
            ["/=", 403],
            ["%=", 403],
            ["+=", 403],
            ["-=", 403],
            ["<<=", 403],
            [">>=", 403],
            [">>>=", 403],
            ["&=", 403],
            ["^=", 403],
            ["|=", 403],
            ["**=", 403],
            [",", 403],
            ["]", 403],
            [")", 403],
            ["}", 403],
            [":", 403],
            ["{", 403],
            ["τof", 403]
        ]),
        new Map([
            [";", 404],
            ["[", 404],
            [".", 404],
            ["(", 404],
            ["++", 404],
            ["--", 404],
            ["**", 404],
            ["*", 404],
            ["/", 404],
            ["%", 404],
            ["+", 404],
            ["-", 404],
            ["<<", 404],
            [">>", 404],
            [">>>", 404],
            ["<", 404],
            [">", 404],
            ["<=", 404],
            [">=", 404],
            ["τinstanceof", 404],
            ["τin", 404],
            ["==", 404],
            ["!=", 404],
            ["===", 404],
            ["!==", 404],
            ["&", 404],
            ["^", 404],
            ["|", 404],
            ["&&", 404],
            ["||", 404],
            ["?", 404],
            ["=", 404],
            ["*=", 404],
            ["/=", 404],
            ["%=", 404],
            ["+=", 404],
            ["-=", 404],
            ["<<=", 404],
            [">>=", 404],
            [">>>=", 404],
            ["&=", 404],
            ["^=", 404],
            ["|=", 404],
            ["**=", 404],
            [",", 404],
            ["]", 404],
            [")", 404],
            ["}", 404],
            [":", 404],
            ["{", 404],
            ["τof", 404]
        ]),
        new Map([
            ["]", 405],
            [",", 405]
        ]),
        new Map([
            [",", 216],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            ["{", 406]
        ]),
        new Map([
            [")", 407],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            [")", 408]
        ]),
        new Map([
            ["}", 409]
        ]),
        new Map([
            [";", 410],
            ["[", 410],
            [".", 410],
            ["(", 410],
            ["++", 410],
            ["--", 410],
            ["**", 410],
            ["*", 410],
            ["/", 410],
            ["%", 410],
            ["+", 410],
            ["-", 410],
            ["<<", 410],
            [">>", 410],
            [">>>", 410],
            ["<", 410],
            [">", 410],
            ["<=", 410],
            [">=", 410],
            ["τinstanceof", 410],
            ["τin", 410],
            ["==", 410],
            ["!=", 410],
            ["===", 410],
            ["!==", 410],
            ["&", 410],
            ["^", 410],
            ["|", 410],
            ["&&", 410],
            ["||", 410],
            ["?", 410],
            ["=", 410],
            ["*=", 410],
            ["/=", 410],
            ["%=", 410],
            ["+=", 410],
            ["-=", 410],
            ["<<=", 410],
            [">>=", 410],
            [">>>=", 410],
            ["&=", 410],
            ["^=", 410],
            ["|=", 410],
            ["**=", 410],
            [",", 410],
            ["$", 410],
            ["{", 410],
            ["τvar", 410],
            ["τthis", 410],
            ["θid", 410],
            ["τyield", 410],
            ["τawait", 410],
            ["τtrue", 410],
            ["τfalse", 410],
            ["τnull", 410],
            ["θstr", 410],
            ["θnum", 410],
            ["τfunction", 410],
            ["τclass", 410],
            ["τsuper", 410],
            ["τnew", 410],
            ["τdelete", 410],
            ["τvoid", 410],
            ["τtypeof", 410],
            ["~", 410],
            ["!", 410],
            ["τif", 410],
            ["τdo", 410],
            ["τwhile", 410],
            ["τfor", 410],
            ["τswitch", 410],
            ["τcontinue", 410],
            ["τbreak", 410],
            ["τreturn", 410],
            ["τwith", 410],
            ["τthrow", 410],
            ["τtry", 410],
            ["τdebugger", 410],
            ["τlet", 410],
            ["τconst", 410],
            ["}", 410],
            ["]", 410],
            [")", 410],
            [":", 410],
            ["τof", 410],
            ["τcase", 410],
            ["τdefault", 410]
        ]),
        new Map([
            [";", 411],
            ["[", 411],
            [".", 411],
            ["(", 411],
            ["++", 411],
            ["--", 411],
            ["**", 411],
            ["*", 411],
            ["/", 411],
            ["%", 411],
            ["+", 411],
            ["-", 411],
            ["<<", 411],
            [">>", 411],
            [">>>", 411],
            ["<", 411],
            [">", 411],
            ["<=", 411],
            [">=", 411],
            ["τinstanceof", 411],
            ["τin", 411],
            ["==", 411],
            ["!=", 411],
            ["===", 411],
            ["!==", 411],
            ["&", 411],
            ["^", 411],
            ["|", 411],
            ["&&", 411],
            ["||", 411],
            ["?", 411],
            ["=", 411],
            ["*=", 411],
            ["/=", 411],
            ["%=", 411],
            ["+=", 411],
            ["-=", 411],
            ["<<=", 411],
            [">>=", 411],
            [">>>=", 411],
            ["&=", 411],
            ["^=", 411],
            ["|=", 411],
            ["**=", 411],
            [",", 411],
            ["$", 411],
            ["{", 411],
            ["τvar", 411],
            ["τthis", 411],
            ["θid", 411],
            ["τyield", 411],
            ["τawait", 411],
            ["τtrue", 411],
            ["τfalse", 411],
            ["τnull", 411],
            ["θstr", 411],
            ["θnum", 411],
            ["τfunction", 411],
            ["τclass", 411],
            ["τsuper", 411],
            ["τnew", 411],
            ["τdelete", 411],
            ["τvoid", 411],
            ["τtypeof", 411],
            ["~", 411],
            ["!", 411],
            ["τif", 411],
            ["τdo", 411],
            ["τwhile", 411],
            ["τfor", 411],
            ["τswitch", 411],
            ["τcontinue", 411],
            ["τbreak", 411],
            ["τreturn", 411],
            ["τwith", 411],
            ["τthrow", 411],
            ["τtry", 411],
            ["τdebugger", 411],
            ["τlet", 411],
            ["τconst", 411],
            ["}", 411],
            ["]", 411],
            [")", 411],
            [":", 411],
            ["τof", 411],
            ["τcase", 411],
            ["τdefault", 411]
        ]),
        new Map([
            ["}", 412],
            ["θid", 412],
            ["θstr", 412],
            ["θnum", 412],
            ["[", 412],
            ["τget", 412],
            ["τset", 412],
            ["τstatic", 412],
            [";", 412]
        ]),
        new Map([
            ["}", 413],
            ["θid", 413],
            ["θstr", 413],
            ["θnum", 413],
            ["[", 413],
            ["τget", 413],
            ["τset", 413],
            ["τstatic", 413],
            [";", 413]
        ]),
        new Map([
            [";", 414],
            ["[", 414],
            [".", 414],
            ["(", 414],
            ["++", 414],
            ["--", 414],
            ["**", 414],
            ["*", 414],
            ["/", 414],
            ["%", 414],
            ["+", 414],
            ["-", 414],
            ["<<", 414],
            [">>", 414],
            [">>>", 414],
            ["<", 414],
            [">", 414],
            ["<=", 414],
            [">=", 414],
            ["τinstanceof", 414],
            ["τin", 414],
            ["==", 414],
            ["!=", 414],
            ["===", 414],
            ["!==", 414],
            ["&", 414],
            ["^", 414],
            ["|", 414],
            ["&&", 414],
            ["||", 414],
            ["?", 414],
            ["=>", 414],
            ["=", 414],
            ["*=", 414],
            ["/=", 414],
            ["%=", 414],
            ["+=", 414],
            ["-=", 414],
            ["<<=", 414],
            [">>=", 414],
            [">>>=", 414],
            ["&=", 414],
            ["^=", 414],
            ["|=", 414],
            ["**=", 414],
            [",", 414],
            ["]", 414],
            [")", 414],
            ["}", 414],
            [":", 414],
            ["{", 414],
            ["τof", 414]
        ]),
        new Map([
            [";", 415],
            ["[", 415],
            [".", 415],
            ["(", 415],
            ["++", 415],
            ["--", 415],
            ["**", 415],
            ["*", 415],
            ["/", 415],
            ["%", 415],
            ["+", 415],
            ["-", 415],
            ["<<", 415],
            [">>", 415],
            [">>>", 415],
            ["<", 415],
            [">", 415],
            ["<=", 415],
            [">=", 415],
            ["τinstanceof", 415],
            ["τin", 415],
            ["==", 415],
            ["!=", 415],
            ["===", 415],
            ["!==", 415],
            ["&", 415],
            ["^", 415],
            ["|", 415],
            ["&&", 415],
            ["||", 415],
            ["?", 415],
            ["=>", 415],
            ["=", 415],
            ["*=", 415],
            ["/=", 415],
            ["%=", 415],
            ["+=", 415],
            ["-=", 415],
            ["<<=", 415],
            [">>=", 415],
            [">>>=", 415],
            ["&=", 415],
            ["^=", 415],
            ["|=", 415],
            ["**=", 415],
            [",", 415],
            ["]", 415],
            [")", 415],
            ["}", 415],
            [":", 415],
            ["{", 415],
            ["τof", 415]
        ]),
        new Map([
            [".", 416],
            ["[", 416],
            [";", 416],
            ["(", 416],
            ["++", 416],
            ["--", 416],
            ["**", 416],
            ["*", 416],
            ["/", 416],
            ["%", 416],
            ["+", 416],
            ["-", 416],
            ["<<", 416],
            [">>", 416],
            [">>>", 416],
            ["<", 416],
            [">", 416],
            ["<=", 416],
            [">=", 416],
            ["τinstanceof", 416],
            ["τin", 416],
            ["==", 416],
            ["!=", 416],
            ["===", 416],
            ["!==", 416],
            ["&", 416],
            ["^", 416],
            ["|", 416],
            ["&&", 416],
            ["||", 416],
            ["?", 416],
            ["=", 416],
            ["*=", 416],
            ["/=", 416],
            ["%=", 416],
            ["+=", 416],
            ["-=", 416],
            ["<<=", 416],
            [">>=", 416],
            [">>>=", 416],
            ["&=", 416],
            ["^=", 416],
            ["|=", 416],
            ["**=", 416],
            [",", 416],
            ["]", 416],
            [")", 416],
            ["}", 416],
            [":", 416],
            ["{", 416],
            ["τof", 416]
        ]),
        new Map([
            ["}", 417]
        ]),
        new Map([
            [";", 418],
            ["[", 174],
            [".", 174],
            ["(", 174],
            ["++", 174],
            ["--", 174],
            ["**", 174],
            ["*", 174],
            ["/", 174],
            ["%", 174],
            ["+", 174],
            ["-", 174],
            ["<<", 174],
            [">>", 174],
            [">>>", 174],
            ["<", 174],
            [">", 174],
            ["<=", 174],
            [">=", 174],
            ["τinstanceof", 174],
            ["τin", 174],
            ["==", 174],
            ["!=", 174],
            ["===", 174],
            ["!==", 174],
            ["&", 174],
            ["^", 174],
            ["|", 174],
            ["&&", 174],
            ["||", 174],
            ["?", 174],
            ["=", 174],
            ["*=", 174],
            ["/=", 174],
            ["%=", 174],
            ["+=", 174],
            ["-=", 174],
            ["<<=", 174],
            [">>=", 174],
            [">>>=", 174],
            ["&=", 174],
            ["^=", 174],
            ["|=", 174],
            ["**=", 174],
            [",", 418],
            ["]", 418],
            [")", 418],
            ["}", 418],
            [":", 418]
        ]),
        new Map([
            ["}", 419],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            [";", 420],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 421],
            [",", 59]
        ]),
        new Map([
            [")", 422],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [";", 423],
            [",", 185]
        ]),
        new Map([
            ["τin", 424],
            ["τof", 425]
        ]),
        new Map([
            [";", 426],
            ["{", 2],
            ["τvar", 3],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            ["τin", 427],
            ["τof", 427]
        ]),
        new Map([
            ["τin", 189],
            ["τof", 189]
        ]),
        new Map([
            ["τof", 428]
        ]),
        new Map([
            ["τof", 429]
        ]),
        new Map([
            ["{", 430]
        ]),
        new Map([
            ["$", 431],
            ["{", 431],
            ["τvar", 431],
            [";", 431],
            ["τthis", 431],
            ["θid", 431],
            ["τyield", 431],
            ["τawait", 431],
            ["τtrue", 431],
            ["τfalse", 431],
            ["τnull", 431],
            ["θstr", 431],
            ["θnum", 431],
            ["[", 431],
            ["τfunction", 431],
            ["τclass", 431],
            ["(", 431],
            ["τsuper", 431],
            ["τnew", 431],
            ["++", 431],
            ["--", 431],
            ["τdelete", 431],
            ["τvoid", 431],
            ["τtypeof", 431],
            ["+", 431],
            ["-", 431],
            ["~", 431],
            ["!", 431],
            ["τif", 431],
            ["τdo", 431],
            ["τwhile", 431],
            ["τfor", 431],
            ["τswitch", 431],
            ["τcontinue", 431],
            ["τbreak", 431],
            ["τreturn", 431],
            ["τwith", 431],
            ["τthrow", 431],
            ["τtry", 431],
            ["τdebugger", 431],
            ["τlet", 431],
            ["τconst", 431],
            ["}", 431],
            ["τelse", 431],
            [")", 431],
            ["τcase", 431],
            ["τdefault", 431]
        ]),
        new Map([
            ["$", 432],
            ["{", 432],
            ["τvar", 432],
            [";", 432],
            ["τthis", 432],
            ["θid", 432],
            ["τyield", 432],
            ["τawait", 432],
            ["τtrue", 432],
            ["τfalse", 432],
            ["τnull", 432],
            ["θstr", 432],
            ["θnum", 432],
            ["[", 432],
            ["τfunction", 432],
            ["τclass", 432],
            ["(", 432],
            ["τsuper", 432],
            ["τnew", 432],
            ["++", 432],
            ["--", 432],
            ["τdelete", 432],
            ["τvoid", 432],
            ["τtypeof", 432],
            ["+", 432],
            ["-", 432],
            ["~", 432],
            ["!", 432],
            ["τif", 432],
            ["τdo", 432],
            ["τwhile", 432],
            ["τfor", 432],
            ["τswitch", 432],
            ["τcontinue", 432],
            ["τbreak", 432],
            ["τreturn", 432],
            ["τwith", 432],
            ["τthrow", 432],
            ["τtry", 432],
            ["τdebugger", 432],
            ["τlet", 432],
            ["τconst", 432],
            ["}", 432],
            ["τelse", 432],
            [")", 432],
            ["τcase", 432],
            ["τdefault", 432]
        ]),
        new Map([
            [";", 433],
            [",", 433]
        ]),
        new Map([
            [";", 434],
            [",", 185]
        ]),
        new Map([
            ["{", 435]
        ]),
        new Map([
            ["{", 436]
        ]),
        new Map([
            [")", 437]
        ]),
        new Map([
            [")", 438]
        ]),
        new Map([
            ["}", 439]
        ]),
        new Map([
            ["=", 440],
            ["]", 440],
            [",", 440],
            [")", 440],
            ["}", 440]
        ]),
        new Map([
            ["}", 441],
            [",", 441]
        ]),
        new Map([
            ["}", 442],
            [",", 442]
        ]),
        new Map([
            ["=", 443],
            ["]", 443],
            [",", 443],
            [")", 443],
            ["}", 443]
        ]),
        new Map([
            ["]", 444],
            [",", 216],
            ["...", 194],
            ["θid", 18],
            ["{", 55],
            ["[", 56]
        ]),
        new Map([
            ["]", 445]
        ]),
        new Map([
            ["]", 446],
            [",", 446]
        ]),
        new Map([
            [";", 447],
            [",", 447],
            ["]", 447],
            [")", 447],
            ["}", 447],
            [":", 447]
        ]),
        new Map([
            [";", 448],
            [".", 448],
            ["(", 448],
            ["[", 448],
            ["++", 448],
            ["--", 448],
            ["**", 448],
            ["*", 448],
            ["/", 448],
            ["%", 448],
            ["+", 448],
            ["-", 448],
            ["<<", 448],
            [">>", 448],
            [">>>", 448],
            ["<", 448],
            [">", 448],
            ["<=", 448],
            [">=", 448],
            ["τinstanceof", 448],
            ["τin", 448],
            ["==", 448],
            ["!=", 448],
            ["===", 448],
            ["!==", 448],
            ["&", 448],
            ["^", 448],
            ["|", 448],
            ["&&", 448],
            ["||", 448],
            ["?", 448],
            ["=", 448],
            ["*=", 448],
            ["/=", 448],
            ["%=", 448],
            ["+=", 448],
            ["-=", 448],
            ["<<=", 448],
            [">>=", 448],
            [">>>=", 448],
            ["&=", 448],
            ["^=", 448],
            ["|=", 448],
            ["**=", 448],
            [",", 448],
            ["]", 448],
            [")", 448],
            ["}", 448],
            [":", 448],
            ["{", 448],
            ["τof", 448]
        ]),
        new Map([
            [")", 449],
            [",", 449]
        ]),
        new Map([
            ["]", 450],
            [",", 450]
        ]),
        new Map([
            ["}", 451],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            [")", 452]
        ]),
        new Map([
            [")", 453],
            [",", 453]
        ]),
        new Map([
            ["{", 454]
        ]),
        new Map([
            [";", 455],
            ["[", 455],
            [".", 455],
            ["(", 455],
            ["++", 455],
            ["--", 455],
            ["**", 455],
            ["*", 455],
            ["/", 455],
            ["%", 455],
            ["+", 455],
            ["-", 455],
            ["<<", 455],
            [">>", 455],
            [">>>", 455],
            ["<", 455],
            [">", 455],
            ["<=", 455],
            [">=", 455],
            ["τinstanceof", 455],
            ["τin", 455],
            ["==", 455],
            ["!=", 455],
            ["===", 455],
            ["!==", 455],
            ["&", 455],
            ["^", 455],
            ["|", 455],
            ["&&", 455],
            ["||", 455],
            ["?", 455],
            ["=", 455],
            ["*=", 455],
            ["/=", 455],
            ["%=", 455],
            ["+=", 455],
            ["-=", 455],
            ["<<=", 455],
            [">>=", 455],
            [">>>=", 455],
            ["&=", 455],
            ["^=", 455],
            ["|=", 455],
            ["**=", 455],
            [",", 455],
            ["$", 455],
            ["{", 455],
            ["τvar", 455],
            ["τthis", 455],
            ["θid", 455],
            ["τyield", 455],
            ["τawait", 455],
            ["τtrue", 455],
            ["τfalse", 455],
            ["τnull", 455],
            ["θstr", 455],
            ["θnum", 455],
            ["τfunction", 455],
            ["τclass", 455],
            ["τsuper", 455],
            ["τnew", 455],
            ["τdelete", 455],
            ["τvoid", 455],
            ["τtypeof", 455],
            ["~", 455],
            ["!", 455],
            ["τif", 455],
            ["τdo", 455],
            ["τwhile", 455],
            ["τfor", 455],
            ["τswitch", 455],
            ["τcontinue", 455],
            ["τbreak", 455],
            ["τreturn", 455],
            ["τwith", 455],
            ["τthrow", 455],
            ["τtry", 455],
            ["τdebugger", 455],
            ["τlet", 455],
            ["τconst", 455],
            ["}", 455],
            ["]", 455],
            [")", 455],
            [":", 455],
            ["τof", 455],
            ["τcase", 455],
            ["τdefault", 455]
        ]),
        new Map([
            [")", 456]
        ]),
        new Map([
            [")", 457]
        ]),
        new Map([
            [";", 458],
            [",", 458],
            ["]", 458],
            [")", 458],
            ["}", 458],
            [":", 458]
        ]),
        new Map([
            ["τelse", 459],
            ["$", 460],
            ["{", 460],
            ["τvar", 460],
            [";", 460],
            ["τthis", 460],
            ["θid", 460],
            ["τyield", 460],
            ["τawait", 460],
            ["τtrue", 460],
            ["τfalse", 460],
            ["τnull", 460],
            ["θstr", 460],
            ["θnum", 460],
            ["[", 460],
            ["τfunction", 460],
            ["τclass", 460],
            ["(", 460],
            ["τsuper", 460],
            ["τnew", 460],
            ["++", 460],
            ["--", 460],
            ["τdelete", 460],
            ["τvoid", 460],
            ["τtypeof", 460],
            ["+", 460],
            ["-", 460],
            ["~", 460],
            ["!", 460],
            ["τif", 460],
            ["τdo", 460],
            ["τwhile", 460],
            ["τfor", 460],
            ["τswitch", 460],
            ["τcontinue", 460],
            ["τbreak", 460],
            ["τreturn", 460],
            ["τwith", 460],
            ["τthrow", 460],
            ["τtry", 460],
            ["τdebugger", 460],
            ["τlet", 460],
            ["τconst", 460],
            ["}", 460],
            [")", 460],
            ["τcase", 460],
            ["τdefault", 460]
        ]),
        new Map([
            [")", 461],
            [",", 59]
        ]),
        new Map([
            ["$", 462],
            ["{", 462],
            ["τvar", 462],
            [";", 462],
            ["τthis", 462],
            ["θid", 462],
            ["τyield", 462],
            ["τawait", 462],
            ["τtrue", 462],
            ["τfalse", 462],
            ["τnull", 462],
            ["θstr", 462],
            ["θnum", 462],
            ["[", 462],
            ["τfunction", 462],
            ["τclass", 462],
            ["(", 462],
            ["τsuper", 462],
            ["τnew", 462],
            ["++", 462],
            ["--", 462],
            ["τdelete", 462],
            ["τvoid", 462],
            ["τtypeof", 462],
            ["+", 462],
            ["-", 462],
            ["~", 462],
            ["!", 462],
            ["τif", 462],
            ["τdo", 462],
            ["τwhile", 462],
            ["τfor", 462],
            ["τswitch", 462],
            ["τcontinue", 462],
            ["τbreak", 462],
            ["τreturn", 462],
            ["τwith", 462],
            ["τthrow", 462],
            ["τtry", 462],
            ["τdebugger", 462],
            ["τlet", 462],
            ["τconst", 462],
            ["}", 462],
            ["τelse", 462],
            [")", 462],
            ["τcase", 462],
            ["τdefault", 462]
        ]),
        new Map([
            [";", 463],
            [",", 59]
        ]),
        new Map([
            [")", 464],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [")", 465],
            [",", 59]
        ]),
        new Map([
            [";", 466],
            ["{", 2],
            ["τvar", 3],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            [";", 467]
        ]),
        new Map([
            [")", 468],
            [";", 57],
            ["{", 2],
            ["τvar", 3],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            [")", 469],
            [",", 59]
        ]),
        new Map([
            [")", 470]
        ]),
        new Map([
            [")", 471],
            [",", 59]
        ]),
        new Map([
            [")", 472]
        ]),
        new Map([
            ["τof", 473]
        ]),
        new Map([
            ["$", 474],
            ["{", 474],
            ["τvar", 474],
            [";", 474],
            ["τthis", 474],
            ["θid", 474],
            ["τyield", 474],
            ["τawait", 474],
            ["τtrue", 474],
            ["τfalse", 474],
            ["τnull", 474],
            ["θstr", 474],
            ["θnum", 474],
            ["[", 474],
            ["τfunction", 474],
            ["τclass", 474],
            ["(", 474],
            ["τsuper", 474],
            ["τnew", 474],
            ["++", 474],
            ["--", 474],
            ["τdelete", 474],
            ["τvoid", 474],
            ["τtypeof", 474],
            ["+", 474],
            ["-", 474],
            ["~", 474],
            ["!", 474],
            ["τif", 474],
            ["τdo", 474],
            ["τwhile", 474],
            ["τfor", 474],
            ["τswitch", 474],
            ["τcontinue", 474],
            ["τbreak", 474],
            ["τreturn", 474],
            ["τwith", 474],
            ["τthrow", 474],
            ["τtry", 474],
            ["τdebugger", 474],
            ["τlet", 474],
            ["τconst", 474],
            ["}", 474],
            ["τelse", 474],
            [")", 474],
            ["τcase", 474],
            ["τdefault", 474]
        ]),
        new Map([
            ["}", 475],
            ["τcase", 476],
            ["τdefault", 477]
        ]),
        new Map([
            ["$", 478],
            ["{", 478],
            ["τvar", 478],
            [";", 478],
            ["τthis", 478],
            ["θid", 478],
            ["τyield", 478],
            ["τawait", 478],
            ["τtrue", 478],
            ["τfalse", 478],
            ["τnull", 478],
            ["θstr", 478],
            ["θnum", 478],
            ["[", 478],
            ["τfunction", 478],
            ["τclass", 478],
            ["(", 478],
            ["τsuper", 478],
            ["τnew", 478],
            ["++", 478],
            ["--", 478],
            ["τdelete", 478],
            ["τvoid", 478],
            ["τtypeof", 478],
            ["+", 478],
            ["-", 478],
            ["~", 478],
            ["!", 478],
            ["τif", 478],
            ["τdo", 478],
            ["τwhile", 478],
            ["τfor", 478],
            ["τswitch", 478],
            ["τcontinue", 478],
            ["τbreak", 478],
            ["τreturn", 478],
            ["τwith", 478],
            ["τthrow", 478],
            ["τtry", 478],
            ["τdebugger", 478],
            ["τlet", 478],
            ["τconst", 478],
            ["}", 478],
            ["τelse", 478],
            [")", 478],
            ["τcase", 478],
            ["τdefault", 478]
        ]),
        new Map([
            [")", 479]
        ]),
        new Map([
            [")", 480]
        ]),
        new Map([
            ["$", 460],
            ["τelse", 459],
            ["{", 460],
            ["τvar", 460],
            [";", 460],
            ["τthis", 460],
            ["θid", 460],
            ["τyield", 460],
            ["τawait", 460],
            ["τtrue", 460],
            ["τfalse", 460],
            ["τnull", 460],
            ["θstr", 460],
            ["θnum", 460],
            ["[", 460],
            ["τfunction", 460],
            ["τclass", 460],
            ["(", 460],
            ["τsuper", 460],
            ["τnew", 460],
            ["++", 460],
            ["--", 460],
            ["τdelete", 460],
            ["τvoid", 460],
            ["τtypeof", 460],
            ["+", 460],
            ["-", 460],
            ["~", 460],
            ["!", 460],
            ["τif", 460],
            ["τdo", 460],
            ["τwhile", 460],
            ["τfor", 460],
            ["τswitch", 460],
            ["τcontinue", 460],
            ["τbreak", 460],
            ["τreturn", 460],
            ["τwith", 460],
            ["τthrow", 460],
            ["τtry", 460],
            ["τdebugger", 460],
            ["τlet", 460],
            ["τconst", 460]
        ]),
        new Map([
            [";", 481],
            [",", 59]
        ]),
        new Map([
            [";", 482]
        ]),
        new Map([
            ["{", 483]
        ]),
        new Map([
            ["=", 484],
            ["]", 484],
            [",", 484],
            [")", 484],
            ["}", 484]
        ]),
        new Map([
            ["=", 485],
            ["]", 485],
            [",", 485],
            [")", 485],
            ["}", 485]
        ]),
        new Map([
            ["]", 486]
        ]),
        new Map([
            [")", 487],
            [",", 487]
        ]),
        new Map([
            ["}", 488]
        ]),
        new Map([
            ["}", 489]
        ]),
        new Map([
            [";", 490],
            ["[", 490],
            [".", 490],
            ["(", 490],
            ["++", 490],
            ["--", 490],
            ["**", 490],
            ["*", 490],
            ["/", 490],
            ["%", 490],
            ["+", 490],
            ["-", 490],
            ["<<", 490],
            [">>", 490],
            [">>>", 490],
            ["<", 490],
            [">", 490],
            ["<=", 490],
            [">=", 490],
            ["τinstanceof", 490],
            ["τin", 490],
            ["==", 490],
            ["!=", 490],
            ["===", 490],
            ["!==", 490],
            ["&", 490],
            ["^", 490],
            ["|", 490],
            ["&&", 490],
            ["||", 490],
            ["?", 490],
            ["=>", 490],
            ["=", 490],
            ["*=", 490],
            ["/=", 490],
            ["%=", 490],
            ["+=", 490],
            ["-=", 490],
            ["<<=", 490],
            [">>=", 490],
            [">>>=", 490],
            ["&=", 490],
            ["^=", 490],
            ["|=", 490],
            ["**=", 490],
            [",", 490],
            ["]", 490],
            [")", 490],
            ["}", 490],
            [":", 490],
            ["{", 490],
            ["τof", 490]
        ]),
        new Map([
            [";", 491]
        ]),
        new Map([
            [")", 492],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["{", 116],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28]
        ]),
        new Map([
            [")", 493],
            [",", 59]
        ]),
        new Map([
            [")", 494],
            [",", 59]
        ]),
        new Map([
            ["$", 495],
            ["{", 495],
            ["τvar", 495],
            [";", 495],
            ["τthis", 495],
            ["θid", 495],
            ["τyield", 495],
            ["τawait", 495],
            ["τtrue", 495],
            ["τfalse", 495],
            ["τnull", 495],
            ["θstr", 495],
            ["θnum", 495],
            ["[", 495],
            ["τfunction", 495],
            ["τclass", 495],
            ["(", 495],
            ["τsuper", 495],
            ["τnew", 495],
            ["++", 495],
            ["--", 495],
            ["τdelete", 495],
            ["τvoid", 495],
            ["τtypeof", 495],
            ["+", 495],
            ["-", 495],
            ["~", 495],
            ["!", 495],
            ["τif", 495],
            ["τdo", 495],
            ["τwhile", 495],
            ["τfor", 495],
            ["τswitch", 495],
            ["τcontinue", 495],
            ["τbreak", 495],
            ["τreturn", 495],
            ["τwith", 495],
            ["τthrow", 495],
            ["τtry", 495],
            ["τdebugger", 495],
            ["τlet", 495],
            ["τconst", 495],
            ["}", 495],
            ["τelse", 495],
            [")", 495],
            ["τcase", 495],
            ["τdefault", 495]
        ]),
        new Map([
            [";", 496]
        ]),
        new Map([
            [")", 497],
            [";", 57],
            ["{", 2],
            ["τvar", 3],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            [")", 498],
            [",", 59]
        ]),
        new Map([
            [")", 499]
        ]),
        new Map([
            [")", 500],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            [")", 501]
        ]),
        new Map([
            [")", 502]
        ]),
        new Map([
            [")", 503]
        ]),
        new Map([
            ["$", 504],
            ["{", 504],
            ["τvar", 504],
            [";", 504],
            ["τthis", 504],
            ["θid", 504],
            ["τyield", 504],
            ["τawait", 504],
            ["τtrue", 504],
            ["τfalse", 504],
            ["τnull", 504],
            ["θstr", 504],
            ["θnum", 504],
            ["[", 504],
            ["τfunction", 504],
            ["τclass", 504],
            ["(", 504],
            ["τsuper", 504],
            ["τnew", 504],
            ["++", 504],
            ["--", 504],
            ["τdelete", 504],
            ["τvoid", 504],
            ["τtypeof", 504],
            ["+", 504],
            ["-", 504],
            ["~", 504],
            ["!", 504],
            ["τif", 504],
            ["τdo", 504],
            ["τwhile", 504],
            ["τfor", 504],
            ["τswitch", 504],
            ["τcontinue", 504],
            ["τbreak", 504],
            ["τreturn", 504],
            ["τwith", 504],
            ["τthrow", 504],
            ["τtry", 504],
            ["τdebugger", 504],
            ["τlet", 504],
            ["τconst", 504],
            ["}", 504],
            ["τelse", 504],
            [")", 504],
            ["τcase", 504],
            ["τdefault", 504]
        ]),
        new Map([
            ["}", 505],
            ["τdefault", 477],
            ["τcase", 476]
        ]),
        new Map([
            ["}", 506],
            ["τcase", 476]
        ]),
        new Map([
            ["τdefault", 507],
            ["τcase", 507],
            ["}", 507]
        ]),
        new Map([
            [":", 508],
            ["τcase", 509],
            ["}", 509]
        ]),
        new Map([
            [";", 510]
        ]),
        new Map([
            ["}", 511]
        ]),
        new Map([
            ["}", 512]
        ]),
        new Map([
            ["=", 513],
            ["]", 513],
            [",", 513],
            [")", 513],
            ["}", 513]
        ]),
        new Map([
            [";", 514],
            ["[", 514],
            [".", 514],
            ["(", 514],
            ["++", 514],
            ["--", 514],
            ["**", 514],
            ["*", 514],
            ["/", 514],
            ["%", 514],
            ["+", 514],
            ["-", 514],
            ["<<", 514],
            [">>", 514],
            [">>>", 514],
            ["<", 514],
            [">", 514],
            ["<=", 514],
            [">=", 514],
            ["τinstanceof", 514],
            ["τin", 514],
            ["==", 514],
            ["!=", 514],
            ["===", 514],
            ["!==", 514],
            ["&", 514],
            ["^", 514],
            ["|", 514],
            ["&&", 514],
            ["||", 514],
            ["?", 514],
            ["=", 514],
            ["*=", 514],
            ["/=", 514],
            ["%=", 514],
            ["+=", 514],
            ["-=", 514],
            ["<<=", 514],
            [">>=", 514],
            [">>>=", 514],
            ["&=", 514],
            ["^=", 514],
            ["|=", 514],
            ["**=", 514],
            [",", 514],
            ["]", 514],
            [")", 514],
            ["}", 514],
            [":", 514],
            ["{", 514],
            ["τof", 514],
            ["$", 514],
            ["τvar", 514],
            ["τthis", 514],
            ["θid", 514],
            ["τyield", 514],
            ["τawait", 514],
            ["τtrue", 514],
            ["τfalse", 514],
            ["τnull", 514],
            ["θstr", 514],
            ["θnum", 514],
            ["τfunction", 514],
            ["τclass", 514],
            ["τsuper", 514],
            ["τnew", 514],
            ["τdelete", 514],
            ["τvoid", 514],
            ["τtypeof", 514],
            ["~", 514],
            ["!", 514],
            ["τif", 514],
            ["τdo", 514],
            ["τwhile", 514],
            ["τfor", 514],
            ["τswitch", 514],
            ["τcontinue", 514],
            ["τbreak", 514],
            ["τreturn", 514],
            ["τwith", 514],
            ["τthrow", 514],
            ["τtry", 514],
            ["τdebugger", 514],
            ["τlet", 514],
            ["τconst", 514],
            ["τelse", 514],
            ["τcase", 514],
            ["τdefault", 514]
        ]),
        new Map([
            ["}", 515]
        ]),
        new Map([
            ["$", 516],
            ["{", 516],
            ["τvar", 516],
            [";", 516],
            ["τthis", 516],
            ["θid", 516],
            ["τyield", 516],
            ["τawait", 516],
            ["τtrue", 516],
            ["τfalse", 516],
            ["τnull", 516],
            ["θstr", 516],
            ["θnum", 516],
            ["[", 516],
            ["τfunction", 516],
            ["τclass", 516],
            ["(", 516],
            ["τsuper", 516],
            ["τnew", 516],
            ["++", 516],
            ["--", 516],
            ["τdelete", 516],
            ["τvoid", 516],
            ["τtypeof", 516],
            ["+", 516],
            ["-", 516],
            ["~", 516],
            ["!", 516],
            ["τif", 516],
            ["τdo", 516],
            ["τwhile", 516],
            ["τfor", 516],
            ["τswitch", 516],
            ["τcontinue", 516],
            ["τbreak", 516],
            ["τreturn", 516],
            ["τwith", 516],
            ["τthrow", 516],
            ["τtry", 516],
            ["τdebugger", 516],
            ["τlet", 516],
            ["τconst", 516],
            ["}", 516],
            ["τelse", 516],
            [")", 516],
            ["τcase", 516],
            ["τdefault", 516]
        ]),
        new Map([
            ["$", 517],
            ["{", 517],
            ["τvar", 517],
            [";", 517],
            ["τthis", 517],
            ["θid", 517],
            ["τyield", 517],
            ["τawait", 517],
            ["τtrue", 517],
            ["τfalse", 517],
            ["τnull", 517],
            ["θstr", 517],
            ["θnum", 517],
            ["[", 517],
            ["τfunction", 517],
            ["τclass", 517],
            ["(", 517],
            ["τsuper", 517],
            ["τnew", 517],
            ["++", 517],
            ["--", 517],
            ["τdelete", 517],
            ["τvoid", 517],
            ["τtypeof", 517],
            ["+", 517],
            ["-", 517],
            ["~", 517],
            ["!", 517],
            ["τif", 517],
            ["τdo", 517],
            ["τwhile", 517],
            ["τfor", 517],
            ["τswitch", 517],
            ["τcontinue", 517],
            ["τbreak", 517],
            ["τreturn", 517],
            ["τwith", 517],
            ["τthrow", 517],
            ["τtry", 517],
            ["τdebugger", 517],
            ["τlet", 517],
            ["τconst", 517],
            ["}", 517],
            ["τelse", 517],
            [")", 517],
            ["τcase", 517],
            ["τdefault", 517]
        ]),
        new Map([
            [")", 518],
            [",", 59]
        ]),
        new Map([
            ["$", 519],
            ["{", 519],
            ["τvar", 519],
            [";", 519],
            ["τthis", 519],
            ["θid", 519],
            ["τyield", 519],
            ["τawait", 519],
            ["τtrue", 519],
            ["τfalse", 519],
            ["τnull", 519],
            ["θstr", 519],
            ["θnum", 519],
            ["[", 519],
            ["τfunction", 519],
            ["τclass", 519],
            ["(", 519],
            ["τsuper", 519],
            ["τnew", 519],
            ["++", 519],
            ["--", 519],
            ["τdelete", 519],
            ["τvoid", 519],
            ["τtypeof", 519],
            ["+", 519],
            ["-", 519],
            ["~", 519],
            ["!", 519],
            ["τif", 519],
            ["τdo", 519],
            ["τwhile", 519],
            ["τfor", 519],
            ["τswitch", 519],
            ["τcontinue", 519],
            ["τbreak", 519],
            ["τreturn", 519],
            ["τwith", 519],
            ["τthrow", 519],
            ["τtry", 519],
            ["τdebugger", 519],
            ["τlet", 519],
            ["τconst", 519],
            ["}", 519],
            ["τelse", 519],
            [")", 519],
            ["τcase", 519],
            ["τdefault", 519]
        ]),
        new Map([
            ["$", 520],
            ["{", 520],
            ["τvar", 520],
            [";", 520],
            ["τthis", 520],
            ["θid", 520],
            ["τyield", 520],
            ["τawait", 520],
            ["τtrue", 520],
            ["τfalse", 520],
            ["τnull", 520],
            ["θstr", 520],
            ["θnum", 520],
            ["[", 520],
            ["τfunction", 520],
            ["τclass", 520],
            ["(", 520],
            ["τsuper", 520],
            ["τnew", 520],
            ["++", 520],
            ["--", 520],
            ["τdelete", 520],
            ["τvoid", 520],
            ["τtypeof", 520],
            ["+", 520],
            ["-", 520],
            ["~", 520],
            ["!", 520],
            ["τif", 520],
            ["τdo", 520],
            ["τwhile", 520],
            ["τfor", 520],
            ["τswitch", 520],
            ["τcontinue", 520],
            ["τbreak", 520],
            ["τreturn", 520],
            ["τwith", 520],
            ["τthrow", 520],
            ["τtry", 520],
            ["τdebugger", 520],
            ["τlet", 520],
            ["τconst", 520],
            ["}", 520],
            ["τelse", 520],
            [")", 520],
            ["τcase", 520],
            ["τdefault", 520]
        ]),
        new Map([
            [")", 521],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40]
        ]),
        new Map([
            [")", 522]
        ]),
        new Map([
            [")", 523]
        ]),
        new Map([
            ["$", 524],
            ["{", 524],
            ["τvar", 524],
            [";", 524],
            ["τthis", 524],
            ["θid", 524],
            ["τyield", 524],
            ["τawait", 524],
            ["τtrue", 524],
            ["τfalse", 524],
            ["τnull", 524],
            ["θstr", 524],
            ["θnum", 524],
            ["[", 524],
            ["τfunction", 524],
            ["τclass", 524],
            ["(", 524],
            ["τsuper", 524],
            ["τnew", 524],
            ["++", 524],
            ["--", 524],
            ["τdelete", 524],
            ["τvoid", 524],
            ["τtypeof", 524],
            ["+", 524],
            ["-", 524],
            ["~", 524],
            ["!", 524],
            ["τif", 524],
            ["τdo", 524],
            ["τwhile", 524],
            ["τfor", 524],
            ["τswitch", 524],
            ["τcontinue", 524],
            ["τbreak", 524],
            ["τreturn", 524],
            ["τwith", 524],
            ["τthrow", 524],
            ["τtry", 524],
            ["τdebugger", 524],
            ["τlet", 524],
            ["τconst", 524],
            ["}", 524],
            ["τelse", 524],
            [")", 524],
            ["τcase", 524],
            ["τdefault", 524]
        ]),
        new Map([
            ["$", 525],
            ["{", 525],
            ["τvar", 525],
            [";", 525],
            ["τthis", 525],
            ["θid", 525],
            ["τyield", 525],
            ["τawait", 525],
            ["τtrue", 525],
            ["τfalse", 525],
            ["τnull", 525],
            ["θstr", 525],
            ["θnum", 525],
            ["[", 525],
            ["τfunction", 525],
            ["τclass", 525],
            ["(", 525],
            ["τsuper", 525],
            ["τnew", 525],
            ["++", 525],
            ["--", 525],
            ["τdelete", 525],
            ["τvoid", 525],
            ["τtypeof", 525],
            ["+", 525],
            ["-", 525],
            ["~", 525],
            ["!", 525],
            ["τif", 525],
            ["τdo", 525],
            ["τwhile", 525],
            ["τfor", 525],
            ["τswitch", 525],
            ["τcontinue", 525],
            ["τbreak", 525],
            ["τreturn", 525],
            ["τwith", 525],
            ["τthrow", 525],
            ["τtry", 525],
            ["τdebugger", 525],
            ["τlet", 525],
            ["τconst", 525],
            ["}", 525],
            ["τelse", 525],
            [")", 525],
            ["τcase", 525],
            ["τdefault", 525]
        ]),
        new Map([
            [")", 526]
        ]),
        new Map([
            ["}", 527],
            ["τcase", 476]
        ]),
        new Map([
            ["$", 528],
            ["{", 528],
            ["τvar", 528],
            [";", 528],
            ["τthis", 528],
            ["θid", 528],
            ["τyield", 528],
            ["τawait", 528],
            ["τtrue", 528],
            ["τfalse", 528],
            ["τnull", 528],
            ["θstr", 528],
            ["θnum", 528],
            ["[", 528],
            ["τfunction", 528],
            ["τclass", 528],
            ["(", 528],
            ["τsuper", 528],
            ["τnew", 528],
            ["++", 528],
            ["--", 528],
            ["τdelete", 528],
            ["τvoid", 528],
            ["τtypeof", 528],
            ["+", 528],
            ["-", 528],
            ["~", 528],
            ["!", 528],
            ["τif", 528],
            ["τdo", 528],
            ["τwhile", 528],
            ["τfor", 528],
            ["τswitch", 528],
            ["τcontinue", 528],
            ["τbreak", 528],
            ["τreturn", 528],
            ["τwith", 528],
            ["τthrow", 528],
            ["τtry", 528],
            ["τdebugger", 528],
            ["τlet", 528],
            ["τconst", 528],
            ["}", 528],
            ["τelse", 528],
            [")", 528],
            ["τcase", 528],
            ["τdefault", 528]
        ]),
        new Map([
            ["τdefault", 529],
            ["τcase", 529],
            ["}", 529]
        ]),
        new Map([
            ["}", 530],
            ["τcase", 476]
        ]),
        new Map([
            [":", 531],
            [",", 59]
        ]),
        new Map([
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["$", 532],
            ["τfinally", 532],
            ["{", 532],
            ["τvar", 532],
            [";", 532],
            ["τthis", 532],
            ["θid", 532],
            ["τyield", 532],
            ["τawait", 532],
            ["τtrue", 532],
            ["τfalse", 532],
            ["τnull", 532],
            ["θstr", 532],
            ["θnum", 532],
            ["[", 532],
            ["τfunction", 532],
            ["τclass", 532],
            ["(", 532],
            ["τsuper", 532],
            ["τnew", 532],
            ["++", 532],
            ["--", 532],
            ["τdelete", 532],
            ["τvoid", 532],
            ["τtypeof", 532],
            ["+", 532],
            ["-", 532],
            ["~", 532],
            ["!", 532],
            ["τif", 532],
            ["τdo", 532],
            ["τwhile", 532],
            ["τfor", 532],
            ["τswitch", 532],
            ["τcontinue", 532],
            ["τbreak", 532],
            ["τreturn", 532],
            ["τwith", 532],
            ["τthrow", 532],
            ["τtry", 532],
            ["τdebugger", 532],
            ["τlet", 532],
            ["τconst", 532],
            ["}", 532],
            ["τelse", 532],
            [")", 532],
            ["τcase", 532],
            ["τdefault", 532]
        ]),
        new Map([
            [":", 533],
            [",", 59]
        ]),
        new Map([
            ["}", 534],
            [",", 534],
            ["θid", 534],
            ["θstr", 534],
            ["θnum", 534],
            ["[", 534],
            ["τget", 534],
            ["τset", 534],
            ["τstatic", 534],
            [";", 534]
        ]),
        new Map([
            ["}", 535],
            [",", 535],
            ["θid", 535],
            ["θstr", 535],
            ["θnum", 535],
            ["[", 535],
            ["τget", 535],
            ["τset", 535],
            ["τstatic", 535],
            [";", 535]
        ]),
        new Map([
            ["}", 536]
        ]),
        new Map([
            [";", 537],
            ["[", 537],
            [".", 537],
            ["(", 537],
            ["++", 537],
            ["--", 537],
            ["**", 537],
            ["*", 537],
            ["/", 537],
            ["%", 537],
            ["+", 537],
            ["-", 537],
            ["<<", 537],
            [">>", 537],
            [">>>", 537],
            ["<", 537],
            [">", 537],
            ["<=", 537],
            [">=", 537],
            ["τinstanceof", 537],
            ["τin", 537],
            ["==", 537],
            ["!=", 537],
            ["===", 537],
            ["!==", 537],
            ["&", 537],
            ["^", 537],
            ["|", 537],
            ["&&", 537],
            ["||", 537],
            ["?", 537],
            ["=", 537],
            ["*=", 537],
            ["/=", 537],
            ["%=", 537],
            ["+=", 537],
            ["-=", 537],
            ["<<=", 537],
            [">>=", 537],
            [">>>=", 537],
            ["&=", 537],
            ["^=", 537],
            ["|=", 537],
            ["**=", 537],
            [",", 537],
            ["]", 537],
            [")", 537],
            ["}", 537],
            [":", 537],
            ["{", 537],
            ["τof", 537],
            ["$", 537],
            ["τvar", 537],
            ["τthis", 537],
            ["θid", 537],
            ["τyield", 537],
            ["τawait", 537],
            ["τtrue", 537],
            ["τfalse", 537],
            ["τnull", 537],
            ["θstr", 537],
            ["θnum", 537],
            ["τfunction", 537],
            ["τclass", 537],
            ["τsuper", 537],
            ["τnew", 537],
            ["τdelete", 537],
            ["τvoid", 537],
            ["τtypeof", 537],
            ["~", 537],
            ["!", 537],
            ["τif", 537],
            ["τdo", 537],
            ["τwhile", 537],
            ["τfor", 537],
            ["τswitch", 537],
            ["τcontinue", 537],
            ["τbreak", 537],
            ["τreturn", 537],
            ["τwith", 537],
            ["τthrow", 537],
            ["τtry", 537],
            ["τdebugger", 537],
            ["τlet", 537],
            ["τconst", 537],
            ["τelse", 537],
            ["τcase", 537],
            ["τdefault", 537]
        ]),
        new Map([
            ["$", 538],
            ["{", 538],
            ["τvar", 538],
            [";", 538],
            ["τthis", 538],
            ["θid", 538],
            ["τyield", 538],
            ["τawait", 538],
            ["τtrue", 538],
            ["τfalse", 538],
            ["τnull", 538],
            ["θstr", 538],
            ["θnum", 538],
            ["[", 538],
            ["τfunction", 538],
            ["τclass", 538],
            ["(", 538],
            ["τsuper", 538],
            ["τnew", 538],
            ["++", 538],
            ["--", 538],
            ["τdelete", 538],
            ["τvoid", 538],
            ["τtypeof", 538],
            ["+", 538],
            ["-", 538],
            ["~", 538],
            ["!", 538],
            ["τif", 538],
            ["τdo", 538],
            ["τwhile", 538],
            ["τfor", 538],
            ["τswitch", 538],
            ["τcontinue", 538],
            ["τbreak", 538],
            ["τreturn", 538],
            ["τwith", 538],
            ["τthrow", 538],
            ["τtry", 538],
            ["τdebugger", 538],
            ["τlet", 538],
            ["τconst", 538],
            ["}", 538],
            ["τelse", 538],
            [")", 538],
            ["τcase", 538],
            ["τdefault", 538]
        ]),
        new Map([
            ["$", 539],
            ["{", 539],
            ["τvar", 539],
            [";", 539],
            ["τthis", 539],
            ["θid", 539],
            ["τyield", 539],
            ["τawait", 539],
            ["τtrue", 539],
            ["τfalse", 539],
            ["τnull", 539],
            ["θstr", 539],
            ["θnum", 539],
            ["[", 539],
            ["τfunction", 539],
            ["τclass", 539],
            ["(", 539],
            ["τsuper", 539],
            ["τnew", 539],
            ["++", 539],
            ["--", 539],
            ["τdelete", 539],
            ["τvoid", 539],
            ["τtypeof", 539],
            ["+", 539],
            ["-", 539],
            ["~", 539],
            ["!", 539],
            ["τif", 539],
            ["τdo", 539],
            ["τwhile", 539],
            ["τfor", 539],
            ["τswitch", 539],
            ["τcontinue", 539],
            ["τbreak", 539],
            ["τreturn", 539],
            ["τwith", 539],
            ["τthrow", 539],
            ["τtry", 539],
            ["τdebugger", 539],
            ["τlet", 539],
            ["τconst", 539],
            ["}", 539],
            ["τelse", 539],
            [")", 539],
            ["τcase", 539],
            ["τdefault", 539]
        ]),
        new Map([
            ["$", 540],
            ["{", 540],
            ["τvar", 540],
            [";", 540],
            ["τthis", 540],
            ["θid", 540],
            ["τyield", 540],
            ["τawait", 540],
            ["τtrue", 540],
            ["τfalse", 540],
            ["τnull", 540],
            ["θstr", 540],
            ["θnum", 540],
            ["[", 540],
            ["τfunction", 540],
            ["τclass", 540],
            ["(", 540],
            ["τsuper", 540],
            ["τnew", 540],
            ["++", 540],
            ["--", 540],
            ["τdelete", 540],
            ["τvoid", 540],
            ["τtypeof", 540],
            ["+", 540],
            ["-", 540],
            ["~", 540],
            ["!", 540],
            ["τif", 540],
            ["τdo", 540],
            ["τwhile", 540],
            ["τfor", 540],
            ["τswitch", 540],
            ["τcontinue", 540],
            ["τbreak", 540],
            ["τreturn", 540],
            ["τwith", 540],
            ["τthrow", 540],
            ["τtry", 540],
            ["τdebugger", 540],
            ["τlet", 540],
            ["τconst", 540],
            ["}", 540],
            ["τelse", 540],
            [")", 540],
            ["τcase", 540],
            ["τdefault", 540]
        ]),
        new Map([
            [")", 541]
        ]),
        new Map([
            ["$", 542],
            ["{", 542],
            ["τvar", 542],
            [";", 542],
            ["τthis", 542],
            ["θid", 542],
            ["τyield", 542],
            ["τawait", 542],
            ["τtrue", 542],
            ["τfalse", 542],
            ["τnull", 542],
            ["θstr", 542],
            ["θnum", 542],
            ["[", 542],
            ["τfunction", 542],
            ["τclass", 542],
            ["(", 542],
            ["τsuper", 542],
            ["τnew", 542],
            ["++", 542],
            ["--", 542],
            ["τdelete", 542],
            ["τvoid", 542],
            ["τtypeof", 542],
            ["+", 542],
            ["-", 542],
            ["~", 542],
            ["!", 542],
            ["τif", 542],
            ["τdo", 542],
            ["τwhile", 542],
            ["τfor", 542],
            ["τswitch", 542],
            ["τcontinue", 542],
            ["τbreak", 542],
            ["τreturn", 542],
            ["τwith", 542],
            ["τthrow", 542],
            ["τtry", 542],
            ["τdebugger", 542],
            ["τlet", 542],
            ["τconst", 542],
            ["}", 542],
            ["τelse", 542],
            [")", 542],
            ["τcase", 542],
            ["τdefault", 542]
        ]),
        new Map([
            ["$", 543],
            ["{", 543],
            ["τvar", 543],
            [";", 543],
            ["τthis", 543],
            ["θid", 543],
            ["τyield", 543],
            ["τawait", 543],
            ["τtrue", 543],
            ["τfalse", 543],
            ["τnull", 543],
            ["θstr", 543],
            ["θnum", 543],
            ["[", 543],
            ["τfunction", 543],
            ["τclass", 543],
            ["(", 543],
            ["τsuper", 543],
            ["τnew", 543],
            ["++", 543],
            ["--", 543],
            ["τdelete", 543],
            ["τvoid", 543],
            ["τtypeof", 543],
            ["+", 543],
            ["-", 543],
            ["~", 543],
            ["!", 543],
            ["τif", 543],
            ["τdo", 543],
            ["τwhile", 543],
            ["τfor", 543],
            ["τswitch", 543],
            ["τcontinue", 543],
            ["τbreak", 543],
            ["τreturn", 543],
            ["τwith", 543],
            ["τthrow", 543],
            ["τtry", 543],
            ["τdebugger", 543],
            ["τlet", 543],
            ["τconst", 543],
            ["}", 543],
            ["τelse", 543],
            [")", 543],
            ["τcase", 543],
            ["τdefault", 543]
        ]),
        new Map([
            ["$", 544],
            ["{", 544],
            ["τvar", 544],
            [";", 544],
            ["τthis", 544],
            ["θid", 544],
            ["τyield", 544],
            ["τawait", 544],
            ["τtrue", 544],
            ["τfalse", 544],
            ["τnull", 544],
            ["θstr", 544],
            ["θnum", 544],
            ["[", 544],
            ["τfunction", 544],
            ["τclass", 544],
            ["(", 544],
            ["τsuper", 544],
            ["τnew", 544],
            ["++", 544],
            ["--", 544],
            ["τdelete", 544],
            ["τvoid", 544],
            ["τtypeof", 544],
            ["+", 544],
            ["-", 544],
            ["~", 544],
            ["!", 544],
            ["τif", 544],
            ["τdo", 544],
            ["τwhile", 544],
            ["τfor", 544],
            ["τswitch", 544],
            ["τcontinue", 544],
            ["τbreak", 544],
            ["τreturn", 544],
            ["τwith", 544],
            ["τthrow", 544],
            ["τtry", 544],
            ["τdebugger", 544],
            ["τlet", 544],
            ["τconst", 544],
            ["}", 544],
            ["τelse", 544],
            [")", 544],
            ["τcase", 544],
            ["τdefault", 544]
        ]),
        new Map([
            ["$", 545],
            ["{", 545],
            ["τvar", 545],
            [";", 545],
            ["τthis", 545],
            ["θid", 545],
            ["τyield", 545],
            ["τawait", 545],
            ["τtrue", 545],
            ["τfalse", 545],
            ["τnull", 545],
            ["θstr", 545],
            ["θnum", 545],
            ["[", 545],
            ["τfunction", 545],
            ["τclass", 545],
            ["(", 545],
            ["τsuper", 545],
            ["τnew", 545],
            ["++", 545],
            ["--", 545],
            ["τdelete", 545],
            ["τvoid", 545],
            ["τtypeof", 545],
            ["+", 545],
            ["-", 545],
            ["~", 545],
            ["!", 545],
            ["τif", 545],
            ["τdo", 545],
            ["τwhile", 545],
            ["τfor", 545],
            ["τswitch", 545],
            ["τcontinue", 545],
            ["τbreak", 545],
            ["τreturn", 545],
            ["τwith", 545],
            ["τthrow", 545],
            ["τtry", 545],
            ["τdebugger", 545],
            ["τlet", 545],
            ["τconst", 545],
            ["}", 545],
            ["τelse", 545],
            [")", 545],
            ["τcase", 545],
            ["τdefault", 545]
        ]),
        new Map([
            ["}", 546]
        ]),
        new Map([
            ["$", 547],
            ["{", 547],
            ["τvar", 547],
            [";", 547],
            ["τthis", 547],
            ["θid", 547],
            ["τyield", 547],
            ["τawait", 547],
            ["τtrue", 547],
            ["τfalse", 547],
            ["τnull", 547],
            ["θstr", 547],
            ["θnum", 547],
            ["[", 547],
            ["τfunction", 547],
            ["τclass", 547],
            ["(", 547],
            ["τsuper", 547],
            ["τnew", 547],
            ["++", 547],
            ["--", 547],
            ["τdelete", 547],
            ["τvoid", 547],
            ["τtypeof", 547],
            ["+", 547],
            ["-", 547],
            ["~", 547],
            ["!", 547],
            ["τif", 547],
            ["τdo", 547],
            ["τwhile", 547],
            ["τfor", 547],
            ["τswitch", 547],
            ["τcontinue", 547],
            ["τbreak", 547],
            ["τreturn", 547],
            ["τwith", 547],
            ["τthrow", 547],
            ["τtry", 547],
            ["τdebugger", 547],
            ["τlet", 547],
            ["τconst", 547],
            ["}", 547],
            ["τelse", 547],
            [")", 547],
            ["τcase", 547],
            ["τdefault", 547]
        ]),
        new Map([
            ["τdefault", 548],
            ["τcase", 548],
            ["}", 548],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["τcase", 549],
            ["}", 549],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["}", 550],
            [",", 550],
            ["θid", 550],
            ["θstr", 550],
            ["θnum", 550],
            ["[", 550],
            ["τget", 550],
            ["τset", 550],
            ["τstatic", 550],
            [";", 550]
        ]),
        new Map([
            ["$", 551],
            ["{", 551],
            ["τvar", 551],
            [";", 551],
            ["τthis", 551],
            ["θid", 551],
            ["τyield", 551],
            ["τawait", 551],
            ["τtrue", 551],
            ["τfalse", 551],
            ["τnull", 551],
            ["θstr", 551],
            ["θnum", 551],
            ["[", 551],
            ["τfunction", 551],
            ["τclass", 551],
            ["(", 551],
            ["τsuper", 551],
            ["τnew", 551],
            ["++", 551],
            ["--", 551],
            ["τdelete", 551],
            ["τvoid", 551],
            ["τtypeof", 551],
            ["+", 551],
            ["-", 551],
            ["~", 551],
            ["!", 551],
            ["τif", 551],
            ["τdo", 551],
            ["τwhile", 551],
            ["τfor", 551],
            ["τswitch", 551],
            ["τcontinue", 551],
            ["τbreak", 551],
            ["τreturn", 551],
            ["τwith", 551],
            ["τthrow", 551],
            ["τtry", 551],
            ["τdebugger", 551],
            ["τlet", 551],
            ["τconst", 551],
            ["}", 551],
            ["τelse", 551],
            [")", 551],
            ["τcase", 551],
            ["τdefault", 551]
        ]),
        new Map([
            ["$", 552],
            ["{", 552],
            ["τvar", 552],
            [";", 552],
            ["τthis", 552],
            ["θid", 552],
            ["τyield", 552],
            ["τawait", 552],
            ["τtrue", 552],
            ["τfalse", 552],
            ["τnull", 552],
            ["θstr", 552],
            ["θnum", 552],
            ["[", 552],
            ["τfunction", 552],
            ["τclass", 552],
            ["(", 552],
            ["τsuper", 552],
            ["τnew", 552],
            ["++", 552],
            ["--", 552],
            ["τdelete", 552],
            ["τvoid", 552],
            ["τtypeof", 552],
            ["+", 552],
            ["-", 552],
            ["~", 552],
            ["!", 552],
            ["τif", 552],
            ["τdo", 552],
            ["τwhile", 552],
            ["τfor", 552],
            ["τswitch", 552],
            ["τcontinue", 552],
            ["τbreak", 552],
            ["τreturn", 552],
            ["τwith", 552],
            ["τthrow", 552],
            ["τtry", 552],
            ["τdebugger", 552],
            ["τlet", 552],
            ["τconst", 552],
            ["}", 552],
            ["τelse", 552],
            [")", 552],
            ["τcase", 552],
            ["τdefault", 552]
        ]),
        new Map([
            ["$", 553],
            ["{", 553],
            ["τvar", 553],
            [";", 553],
            ["τthis", 553],
            ["θid", 553],
            ["τyield", 553],
            ["τawait", 553],
            ["τtrue", 553],
            ["τfalse", 553],
            ["τnull", 553],
            ["θstr", 553],
            ["θnum", 553],
            ["[", 553],
            ["τfunction", 553],
            ["τclass", 553],
            ["(", 553],
            ["τsuper", 553],
            ["τnew", 553],
            ["++", 553],
            ["--", 553],
            ["τdelete", 553],
            ["τvoid", 553],
            ["τtypeof", 553],
            ["+", 553],
            ["-", 553],
            ["~", 553],
            ["!", 553],
            ["τif", 553],
            ["τdo", 553],
            ["τwhile", 553],
            ["τfor", 553],
            ["τswitch", 553],
            ["τcontinue", 553],
            ["τbreak", 553],
            ["τreturn", 553],
            ["τwith", 553],
            ["τthrow", 553],
            ["τtry", 553],
            ["τdebugger", 553],
            ["τlet", 553],
            ["τconst", 553],
            ["}", 553],
            ["τelse", 553],
            [")", 553],
            ["τcase", 553],
            ["τdefault", 553]
        ]),
        new Map([
            ["$", 554],
            ["{", 554],
            ["τvar", 554],
            [";", 554],
            ["τthis", 554],
            ["θid", 554],
            ["τyield", 554],
            ["τawait", 554],
            ["τtrue", 554],
            ["τfalse", 554],
            ["τnull", 554],
            ["θstr", 554],
            ["θnum", 554],
            ["[", 554],
            ["τfunction", 554],
            ["τclass", 554],
            ["(", 554],
            ["τsuper", 554],
            ["τnew", 554],
            ["++", 554],
            ["--", 554],
            ["τdelete", 554],
            ["τvoid", 554],
            ["τtypeof", 554],
            ["+", 554],
            ["-", 554],
            ["~", 554],
            ["!", 554],
            ["τif", 554],
            ["τdo", 554],
            ["τwhile", 554],
            ["τfor", 554],
            ["τswitch", 554],
            ["τcontinue", 554],
            ["τbreak", 554],
            ["τreturn", 554],
            ["τwith", 554],
            ["τthrow", 554],
            ["τtry", 554],
            ["τdebugger", 554],
            ["τlet", 554],
            ["τconst", 554],
            ["}", 554],
            ["τelse", 554],
            [")", 554],
            ["τcase", 554],
            ["τdefault", 554]
        ]),
        new Map([
            ["$", 555],
            ["{", 555],
            ["τvar", 555],
            [";", 555],
            ["τthis", 555],
            ["θid", 555],
            ["τyield", 555],
            ["τawait", 555],
            ["τtrue", 555],
            ["τfalse", 555],
            ["τnull", 555],
            ["θstr", 555],
            ["θnum", 555],
            ["[", 555],
            ["τfunction", 555],
            ["τclass", 555],
            ["(", 555],
            ["τsuper", 555],
            ["τnew", 555],
            ["++", 555],
            ["--", 555],
            ["τdelete", 555],
            ["τvoid", 555],
            ["τtypeof", 555],
            ["+", 555],
            ["-", 555],
            ["~", 555],
            ["!", 555],
            ["τif", 555],
            ["τdo", 555],
            ["τwhile", 555],
            ["τfor", 555],
            ["τswitch", 555],
            ["τcontinue", 555],
            ["τbreak", 555],
            ["τreturn", 555],
            ["τwith", 555],
            ["τthrow", 555],
            ["τtry", 555],
            ["τdebugger", 555],
            ["τlet", 555],
            ["τconst", 555],
            ["}", 555],
            ["τelse", 555],
            [")", 555],
            ["τcase", 555],
            ["τdefault", 555]
        ]),
        new Map([
            ["τdefault", 556],
            ["τcase", 556],
            ["}", 556],
            ["{", 2],
            ["τvar", 3],
            [";", 4],
            ["τdelete", 5],
            ["τvoid", 6],
            ["τtypeof", 7],
            ["+", 8],
            ["-", 9],
            ["~", 10],
            ["!", 11],
            ["++", 12],
            ["--", 13],
            ["τnew", 14],
            ["τthis", 15],
            ["τyield", 16],
            ["τawait", 17],
            ["θid", 18],
            ["τtrue", 19],
            ["τfalse", 20],
            ["τnull", 21],
            ["θstr", 22],
            ["θnum", 23],
            ["[", 24],
            ["τfunction", 25],
            ["τclass", 26],
            ["(", 27],
            ["τsuper", 28],
            ["τif", 29],
            ["τdo", 30],
            ["τwhile", 31],
            ["τfor", 32],
            ["τswitch", 33],
            ["τcontinue", 34],
            ["τbreak", 35],
            ["τreturn", 36],
            ["τwith", 37],
            ["τthrow", 38],
            ["τtry", 39],
            ["τdebugger", 40],
            ["τlet", 41],
            ["τconst", 42]
        ]),
        new Map([
            ["$", 557],
            ["{", 557],
            ["τvar", 557],
            [";", 557],
            ["τthis", 557],
            ["θid", 557],
            ["τyield", 557],
            ["τawait", 557],
            ["τtrue", 557],
            ["τfalse", 557],
            ["τnull", 557],
            ["θstr", 557],
            ["θnum", 557],
            ["[", 557],
            ["τfunction", 557],
            ["τclass", 557],
            ["(", 557],
            ["τsuper", 557],
            ["τnew", 557],
            ["++", 557],
            ["--", 557],
            ["τdelete", 557],
            ["τvoid", 557],
            ["τtypeof", 557],
            ["+", 557],
            ["-", 557],
            ["~", 557],
            ["!", 557],
            ["τif", 557],
            ["τdo", 557],
            ["τwhile", 557],
            ["τfor", 557],
            ["τswitch", 557],
            ["τcontinue", 557],
            ["τbreak", 557],
            ["τreturn", 557],
            ["τwith", 557],
            ["τthrow", 557],
            ["τtry", 557],
            ["τdebugger", 557],
            ["τlet", 557],
            ["τconst", 557],
            ["}", 557],
            ["τelse", 557],
            [")", 557],
            ["τcase", 557],
            ["τdefault", 557]
        ])
    ],
    state = [sm[0],
        sm[1],
        sm[2],
        sm[3],
        sm[4],
        sm[5],
        sm[6],
        sm[6],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[7],
        sm[8],
        sm[9],
        sm[10],
        sm[11],
        sm[12],
        sm[13],
        sm[14],
        sm[14],
        sm[15],
        sm[16],
        sm[17],
        sm[18],
        sm[19],
        sm[20],
        sm[21],
        sm[22],
        sm[23],
        sm[24],
        sm[25],
        sm[26],
        sm[27],
        sm[28],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[30],
        sm[29],
        sm[29],
        sm[31],
        sm[32],
        sm[33],
        sm[34],
        sm[35],
        sm[35],
        sm[35],
        sm[36],
        sm[37],
        sm[38],
        sm[39],
        sm[40],
        sm[38],
        sm[38],
        sm[41],
        sm[42],
        sm[43],
        sm[44],
        sm[45],
        sm[46],
        sm[46],
        sm[47],
        sm[47],
        sm[48],
        sm[48],
        sm[49],
        sm[50],
        sm[51],
        sm[52],
        sm[53],
        sm[54],
        sm[55],
        sm[56],
        sm[57],
        sm[58],
        sm[59],
        sm[60],
        sm[60],
        sm[61],
        sm[62],
        sm[63],
        sm[63],
        sm[64],
        sm[65],
        sm[66],
        sm[67],
        sm[68],
        sm[69],
        sm[70],
        sm[71],
        sm[72],
        sm[29],
        sm[73],
        sm[74],
        sm[75],
        sm[10],
        sm[76],
        sm[77],
        sm[78],
        sm[79],
        sm[80],
        sm[81],
        sm[82],
        sm[83],
        sm[84],
        sm[83],
        sm[29],
        sm[85],
        sm[85],
        sm[86],
        sm[86],
        sm[87],
        sm[88],
        sm[89],
        sm[90],
        sm[91],
        sm[91],
        sm[92],
        sm[93],
        sm[94],
        sm[29],
        sm[29],
        sm[29],
        sm[95],
        sm[96],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[97],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[98],
        sm[30],
        sm[99],
        sm[100],
        sm[101],
        sm[102],
        sm[103],
        sm[104],
        sm[103],
        sm[105],
        sm[106],
        sm[107],
        sm[108],
        sm[109],
        sm[29],
        sm[110],
        sm[29],
        sm[108],
        sm[111],
        sm[112],
        sm[33],
        sm[113],
        sm[114],
        sm[115],
        sm[116],
        sm[117],
        sm[118],
        sm[119],
        sm[119],
        sm[29],
        sm[120],
        sm[121],
        sm[122],
        sm[123],
        sm[124],
        sm[125],
        sm[126],
        sm[127],
        sm[128],
        sm[129],
        sm[108],
        sm[29],
        sm[130],
        sm[131],
        sm[29],
        sm[132],
        sm[29],
        sm[133],
        sm[134],
        sm[29],
        sm[135],
        sm[136],
        sm[137],
        sm[138],
        sm[139],
        sm[140],
        sm[141],
        sm[142],
        sm[143],
        sm[29],
        sm[64],
        sm[144],
        sm[145],
        sm[146],
        sm[147],
        sm[148],
        sm[90],
        sm[90],
        sm[149],
        sm[150],
        sm[150],
        sm[151],
        sm[152],
        sm[29],
        sm[133],
        sm[153],
        sm[154],
        sm[155],
        sm[156],
        sm[157],
        sm[29],
        sm[158],
        sm[29],
        sm[120],
        sm[159],
        sm[160],
        sm[161],
        sm[162],
        sm[163],
        sm[10],
        sm[164],
        sm[164],
        sm[165],
        sm[166],
        sm[167],
        sm[108],
        sm[168],
        sm[169],
        sm[170],
        sm[171],
        sm[172],
        sm[173],
        sm[174],
        sm[175],
        sm[10],
        sm[176],
        sm[177],
        sm[178],
        sm[179],
        sm[180],
        sm[181],
        sm[181],
        sm[182],
        sm[183],
        sm[184],
        sm[185],
        sm[186],
        sm[187],
        sm[188],
        sm[189],
        sm[190],
        sm[191],
        sm[192],
        sm[193],
        sm[194],
        sm[195],
        sm[196],
        sm[197],
        sm[198],
        sm[199],
        sm[200],
        sm[201],
        sm[202],
        sm[203],
        sm[204],
        sm[205],
        sm[206],
        sm[207],
        sm[208],
        sm[209],
        sm[210],
        sm[211],
        sm[29],
        sm[212],
        sm[213],
        sm[214],
        sm[215],
        sm[216],
        sm[217],
        sm[218],
        sm[218],
        sm[219],
        sm[220],
        sm[221],
        sm[222],
        sm[223],
        sm[224],
        sm[225],
        sm[226],
        sm[227],
        sm[228],
        sm[120],
        sm[229],
        sm[230],
        sm[231],
        sm[232],
        sm[233],
        sm[234],
        sm[235],
        sm[236],
        sm[235],
        sm[237],
        sm[238],
        sm[239],
        sm[240],
        sm[241],
        sm[242],
        sm[243],
        sm[244],
        sm[245],
        sm[246],
        sm[247],
        sm[248],
        sm[249],
        sm[250],
        sm[251],
        sm[252],
        sm[253],
        sm[254],
        sm[255],
        sm[10],
        sm[256],
        sm[257],
        sm[258],
        sm[259],
        sm[260],
        sm[261],
        sm[262],
        sm[263],
        sm[264],
        sm[265],
        sm[266],
        sm[267],
        sm[268],
        sm[269],
        sm[270],
        sm[271],
        sm[73],
        sm[272],
        sm[10],
        sm[273],
        sm[273],
        sm[230],
        sm[274],
        sm[275],
        sm[276],
        sm[277],
        sm[278],
        sm[279],
        sm[280],
        sm[281],
        sm[282],
        sm[283],
        sm[284],
        sm[285],
        sm[10],
        sm[286],
        sm[287],
        sm[287],
        sm[288],
        sm[289],
        sm[10],
        sm[290],
        sm[291],
        sm[292],
        sm[293],
        sm[292],
        sm[292],
        sm[294],
        sm[295],
        sm[295],
        sm[296],
        sm[29],
        sm[297],
        sm[298],
        sm[299],
        sm[300],
        sm[301],
        sm[302],
        sm[303],
        sm[303],
        sm[304],
        sm[305],
        sm[306],
        sm[307],
        sm[308],
        sm[309],
        sm[310],
        sm[311],
        sm[312],
        sm[313],
        sm[129],
        sm[314],
        sm[314],
        sm[315],
        sm[316],
        sm[317],
        sm[318],
        sm[64],
        sm[29],
        sm[64],
        sm[319],
        sm[320],
        sm[321],
        sm[322],
        sm[323],
        sm[324],
        sm[29],
        sm[29],
        sm[29],
        sm[29],
        sm[325],
        sm[326],
        sm[327],
        sm[108],
        sm[328],
        sm[108],
        sm[329],
        sm[64],
        sm[330],
        sm[108],
        sm[331],
        sm[332],
        sm[64],
        sm[319],
        sm[333],
        sm[324],
        sm[334],
        sm[335],
        sm[336],
        sm[337],
        sm[338],
        sm[339],
        sm[340],
        sm[341],
        sm[342],
        sm[342],
        sm[343],
        sm[344],
        sm[345],
        sm[346],
        sm[347],
        sm[348],
        sm[29],
        sm[349],
        sm[350],
        sm[351],
        sm[352],
        sm[353],
        sm[354],
        sm[355],
        sm[356],
        sm[357],
        sm[358],
        sm[359],
        sm[360],
        sm[361],
        sm[362],
        sm[29],
        sm[363],
        sm[64],
        sm[364],
        sm[29],
        sm[29],
        sm[365],
        sm[366],
        sm[367],
        sm[368],
        sm[369],
        sm[370],
        sm[29],
        sm[371],
        sm[29],
        sm[372],
        sm[373],
        sm[374],
        sm[375],
        sm[376],
        sm[349],
        sm[377],
        sm[378],
        sm[364],
        sm[379],
        sm[350],
        sm[350],
        sm[380],
        sm[381],
        sm[382],
        sm[383],
        sm[382],
        sm[384],
        sm[385],
        sm[386],
        sm[350],
        sm[387],
        sm[387],
        sm[64],
        sm[388],
        sm[389],
        sm[390],
        sm[64],
        sm[391],
        sm[64],
        sm[392],
        sm[393],
        sm[394],
        sm[395],
        sm[396],
        sm[397],
        sm[398],
        sm[64],
        sm[64],
        sm[64],
        sm[64],
        sm[64],
        sm[399],
        sm[29],
        sm[400],
        sm[401],
        sm[402],
        sm[403],
        sm[404],
        sm[29],
        sm[405],
        sm[73],
        sm[389],
        sm[406],
        sm[397],
        sm[407],
        sm[408],
        sm[350],
        sm[409],
        sm[410],
        sm[411],
        sm[412],
        sm[413],
        sm[414],
        sm[64],
        sm[64],
        sm[415],
        sm[64],
        sm[416],
        sm[417],
        sm[418],
        sm[64],
        sm[64],
        sm[64],
        sm[419],
        sm[64],
        sm[64],
        sm[415],
        sm[420],
        sm[421],
        sm[420],
        sm[421],
        sm[64],
        sm[422],
        sm[64],
        sm[423],
        sm[424],
        sm[425],
        sm[426],
        sm[424],
        sm[427],
        sm[428],
        sm[429],
        sm[417],
        sm[430],
        sm[431],
        sm[432],
        sm[433],
        sm[434],
        sm[64],
        sm[435],
        sm[436],
        sm[437],
        sm[438],
        sm[64],
        sm[64],
        sm[439],
        sm[440],
        sm[441],
        sm[64],
        sm[435],
        sm[436],
        sm[442],
        sm[64],
        sm[442],
        sm[443],
        sm[444],
        sm[444],
        sm[445],
        sm[446],
        sm[445],
        sm[447],
        sm[448],
        sm[64],
        sm[449],
        sm[450],
        sm[448],
        sm[451],
        sm[452],
        sm[453],
        sm[454]
    ],
    re = new Set(["import", "as", "from", "export", "default", "if", "else", "do", "while", "for", "var", "in", "of", "await", "continue", "break", "return", "with", "switch", "case", "default", "throw", "try", "catch", "finally", "debugger", "let", "const", "function", "async", "class", "extends", "static", "get", "set", "new", "super", "target", "this", "instanceof", "delete", "void", "typeof", "null", "true", "false", "yield", "await"]),
    throw_ = () => { debugger },
    types = { "num": 1, "number": 1, "id": 2, "identifier": 2, "str": 4, "string": 4, "ws": 8, "white_space": 8, "ob": 16, "open_bracket": 16, "cb": 32, "close_bracket": 32, "op": 64, "operator": 64, "sym": 128, "symbol": 128, "nl": 256, "new_line": 256, "dl": 512, "data_link": 512, "alpha_numeric": 3, "white_space_new_line": 264 };

function getToken(l, reserved, state) {
    if (l.END) return "$";
    
    l.IWS = false;
    let prev = l.ch;

    while (true) {
        l.next();
        
        if (l.END) return "$";

        switch (l.ty) {
            case types.id:
                if (reserved.has(l.tx)) return "τ" + l.tx;
                l.IWS = true;
                return "θid";
            case types.num:
                l.IWS = true;
                return "θnum";
            case types.string:
                l.IWS = true;
                return "θstr";
            case types.new_line:
                // /if (![";", ")", "}",","].includes(prev)  //Check for empty statement
                // /	&& 
                // /	state.get(";") > 0) {
                // /    l.IWS = true;
                // /    return ";";
                // /}
                continue;
                return "θnl";
            case types.white_space:
                continue;
                return "θws";
            case types.data_link:
                l.IWS = true;
                return "θdl";
            default:
                l.IWS = true;
                return l.tx;
        }
    }

}

function parser(l, e = {}) {

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.off = 0;
        l.tl = 0;
    }

    let tk = getToken(l, re, state[0]),
        sp = 1,
        len = 0,
        off = 0;

    const o = [],
        ss = [0, 0];
    let time = 10000;
    outer:
        while (time-- > 0) {

            let fn = state[ss[sp]].get(tk) || 0,
                r, st = 0,
                gt = -1,
                c = 0;

            if (fn > 0) {
                r = sf[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {
                    if(!ASI_MODE && l.str.slice(l.)){
                    	ASI_MODE  = true;
                    	tk = ";";
                    	continue outer;
                    }
                //Error Encountered 
                r = re[ss[sp]];

                eh[ss[sp]](tk, e, o, l, ss[sp]);
            }

            ASI_MODE  = false;

            st = r >> 2;

            switch (r & 3) {
                case 0: // ERROR
                    console.log(` Error on input ${tk} `);

                    if (tk == "$")
                        l.throw("Unexpected EOF");


                    //pull up error routine for this production
                    const ALLOW_RECOVERY = (r >> 2) & 0xFF;

                    if (ALLOW_RECOVERY) {

                        while (sp > -1) {
                            if ((gt = goto[ss[sp]](st)) >= 0)
                                break;
                            sp -= 2;
                            c++;
                        }

                        if (gt >= 0) {
                            ss.length = sp + 1;
                            ss.push(off, gt);
                            sp += 2;

                            //o.length -= c;

                            while (!err[st](tk) && !l.END) {
                                tk = getToken(l, re, state[ss[sp]]);
                            }
                        }
                        break;
                    }
                    l.throw("Unrecoverable error encountered here");
                    break;
                case 1: // ACCEPT
                    break outer;
                case 2: //SHIFT
                    o.push((tk[0] == "θ") ? l.tx : tk);
                    ss.push(off, r >> 2);
                    sp += 2;
                    tk = getToken(l, re, state[ss[sp]]);
                    off = l.off;
                    break;
                case 3: // REDUCE

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;

                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    ss.push(off, gt);
                    sp += 2;

                    break;
            }

            ASI_MODE = false;
        }
    return o[0];
};
const js_base = parser;
