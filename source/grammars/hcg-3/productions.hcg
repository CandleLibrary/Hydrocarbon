# Copyright (C) 2021 Anthony Weathersby - The Hydrocarbon Parser Compiler
# see /source/typescript/hydrocarbon.ts for full copyright and warranty 
# disclaimer notice.

# version 3.0

@IMPORT ./production_bodies.hcg as pb

@IMPORT ./functions.hcg as fn

@IMPORT ./symbols.hcg as sym

@IMPORT ./comments.hcg as cm

@IGNORE g:ws g:nl

########################################################################################################################
######################################  PRODUCTIONS
########################################################################################################################

<> productions > production                                          
                                                            f:r {  { type:"production-section", functions:[], productions:[$sym1]   } }
    | fn::referenced_function                                    
                                                            f:r {  { type:"production-section", functions:[$sym1], productions:[]   } }
    | productions production                                  
                                                            f:r {  $sym1.productions.push($sym2), $sym1 }
    | productions cm::comment                                      
                                                            f:r { $sym1 }
    | productions fn::referenced_function                        
                                                            f:r {  $sym1.functions.push($sym2), $sym1 }

 
<> production > \<>  ( sym::production_id â†¦r{ env.prod_name = $sym1 } ) production_start_symbol  pb::production_bodies? 
                                                                        
                                                            f:r { {
                                                                type:"production", name:$sym2, bodies:$sym4, id:-1, recovery_handler:$sym5
                                                            } }
    | \+> ( sym::imported_production_symbol f:r{ env.prod_name = $sym1.val, $sym1 } ) production_start_symbol  pb::production_bodies

                                                            f:r { {
                                                                type:"production-merged-import", name:$sym2, bodies:$sym4, id:-1, recovery_handler:$sym5
                                                            } }
    
    
    
<> production_start_symbol > \>
