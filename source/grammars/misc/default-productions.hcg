@IGNORE θws θnl

<>start → defaultproductions

<> defaultproductions → defaultproduction(+)

<> defaultproduction → id
    │ hex
    │ binary
    │ octal
    │ scientific

<> hex_digit →  θint │ τa │ τb │ τc │ τd │ τe │ τf │ τA │ τB │ τC │ τD │ τE │ τF


<> hex →  θhex                                  ↦r { {val:parseFloat($sym1), type: "hex", original_val:$sym1} }
 
<> binary →  θbin                               ↦r { {val:parseFloat($sym1), type: "bin", original_val:$sym1} }

<> octal →  θoct                                ↦r { {val:parseFloat($sym1), type: "oct", original_val:$sym1} }

<> scientific → θsci                            ↦r { {val:parseFloat($sym1), type: "sci", original_val:$sym1} }
    │ float 

<> float → θflt                                 ↦r { {val:parseFloat($sym1), type: "flt", original_val:$sym1} }
    │ integer                                   

<> integer → natural                            ↦r { {val:parseFloat($sym1), type: "int", original_val:$sym1} }

<> natural →  θnum                              

<> id → θid

<> js_identifier → js_id_symbols (RED θws)

<> js_id_symbols →  js_id_symbols θid           ↦r { $sym1 + $sym2 }
    │ js_id_symbols θkeyword                    ↦r { $sym1 + $sym2 }
    │ js_id_symbols \_                          ↦r { $sym1 + $sym2 }
    │ js_id_symbols \$                          ↦r { $sym1 + $sym2 }
    │ js_id_symbols θnum                        ↦r { $sym1 + $sym2 }
    │ js_id_symbols θhex                        ↦r { $sym1 + $sym2 }
    │ js_id_symbols θbin                        ↦r { $sym1 + $sym2 }
    │ js_id_symbols θoct                        ↦r { $sym1 + $sym2 }
    │ \_ 
    │ \$ 
    │ θid
