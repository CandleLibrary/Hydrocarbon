let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["((","))","<>","+>","=>","(*","(+","::","$eof"],

    /* Goto lookup maps */
    gt0 = [0,-1,1,-18,4,3,2,5,7,8,6,9,10,-5,11,-23,12],
gt1 = [0,-2,15,16,-5,17],
gt2 = [0,-20,21,-2,5,7,8,6,9,10,-5,11,-23,12],
gt3 = [0,-60,28,29],
gt4 = [0,-3,34,-5,36,-48,35],
gt5 = [0,-55,38,37,39],
gt6 = [0,-55,41],
gt7 = [0,-57,43],
gt8 = [0,-39,46,45,-4,47,-5,48,49,50],
gt9 = [0,-37,56,55,-2,57,-1,62,61,-6,58,59,60],
gt10 = [0,-46,64,-4,65,66,67],
gt11 = [0,-60,69,29],
gt12 = [0,-57,70],
gt13 = [0,-29,71,74,72],
gt14 = [0,-59,77,-1,78],
gt15 = [0,-45,89,-5,48,49,50],
gt16 = [0,-57,90],
gt17 = [0,-57,91],
gt18 = [0,-41,94,-1,62,61,-6,58,59,60],
gt19 = [0,-42,95],
gt20 = [0,-61,78],
gt21 = [0,-30,74,102],
gt22 = [0,-30,105,-1,104],
gt23 = [0,-4,107,108,109,110,114,-8,115,-30,113,112,111,116,119,120,117,118,-1,123],
gt24 = [0,-4,127,108,109,110,114,-8,115,-30,113,112,111,116,119,120,117,118,-1,123],
gt25 = [0,-4,129,108,109,110,114,-8,115,-30,113,112,111,116,119,120,117,118,-1,123],
gt26 = [0,-57,130],
gt27 = [0,-18,131,133,-40,132,29],
gt28 = [0,-30,105,-1,136],
gt29 = [0,-33,137],
gt30 = [0,-58,142],
gt31 = [0,-8,146,-3,144,-3,143,145,-30,147,-2,116,119,120,117,118,-1,123],
gt32 = [0,-47,151],
gt33 = [0,-4,154,108,109,110,114,-8,115,-30,113,112,111,116,119,120,117,118,-1,123],
gt34 = [0,-18,161,133,-40,132,29],
gt35 = [0,-18,162,133,-40,132,29],
gt36 = [0,-33,163],
gt37 = [0,-5,165,109,110,114,-8,115,-30,113,112,111,116,119,120,117,118,-1,123],
gt38 = [0,-12,166],
gt39 = [0,-10,171,172,-1,168,169,170],
gt40 = [0,-46,179,-4,65,66,67],
gt41 = [0,-35,183,182,-9,184,-4,65,66,67],
gt42 = [0,-35,183,185,-9,184,-4,65,66,67],
gt43 = [0,-35,183,186,-9,184,-4,65,66,67],
gt44 = [0,-18,187,133,-40,132,29],
gt45 = [0,-57,188],
gt46 = [0,-10,171,172],
gt47 = [0,-46,199,-4,65,66,67],
gt48 = [0,-18,204,133,-40,132,29],
gt49 = [0,-57,205],
gt50 = [0,-57,206],
gt51 = [0,-18,207,133,-40,132,29],
gt52 = [0,-57,208],

    // State action lookup maps
    sm0=[0,1,-3,0,-4,0,-4,1,-9,1,-12,2,-20,3],
sm1=[0,4,-3,0,-4,0],
sm2=[0,5,-3,0,-4,0,-4,6,-1,7,-7,8,-33,5],
sm3=[0,9,-3,0,-4,0,-4,9,-9,9,-12,2,-20,3],
sm4=[0,10,-3,0,-4,0,-4,10,-9,10,-12,10,-20,10],
sm5=[0,11,-3,0,-4,0,-4,11,-9,11,-12,11,-20,11],
sm6=[0,12,-3,0,-4,0,-4,12,-9,12,-12,12,-20,12],
sm7=[0,-4,-1,-4,0,-28,13,14,-1,15,16,17,-4,18],
sm8=[0,-1,19,20,-1,21,-4,0,-3,22],
sm9=[0,23,-3,0,-4,0,-4,6,-1,7,-7,8,-33,3],
sm10=[0,24,-3,0,-4,0,-4,24,-1,24,-7,24,-33,24],
sm11=[0,25,-3,0,-4,0,-4,25,-1,25,-7,25,-33,25],
sm12=[0,-2,26,-1,0,-4,0],
sm13=[0,-2,27,-1,0,-4,0],
sm14=[0,-2,28,-1,0,-4,0],
sm15=[0,29,-3,0,-4,0,-4,29,-9,29,-12,29,-20,29],
sm16=[0,-4,0,-4,0,-3,30,-40,31,32,33],
sm17=[0,-4,0,-4,0,-3,34,-40,31,32,33],
sm18=[0,-4,0,-4,0,-3,35,-40,31,32,33],
sm19=[0,-2,36,-1,37,-4,0,-3,38],
sm20=[0,39,19,20,-1,21,-4,40,-3,22,-46,41],
sm21=[0,42,42,42,-1,42,-4,42,-3,42,-13,42,42,-31,42],
sm22=[0,43,43,43,-1,43,-4,43,-3,43,-13,43,43,-31,43],
sm23=[0,44,-3,0,-4,0,-4,44,-1,44,-7,44,-33,44],
sm24=[0,45,-3,0,-4,0,-4,45,-1,45,-7,45,-33,45],
sm25=[0,46,-3,0,-4,0,-4,46,-1,46,-7,46,-33,46],
sm26=[0,-4,0,-4,0,-5,47],
sm27=[0,-4,0,-4,0,-5,48],
sm28=[0,-4,0,-4,0,-5,49],
sm29=[0,50,-1,50,-1,0,-4,0,-3,50,50,50,50,50,50,50,-1,50,-2,50,-24,50,50,50,-2,50,50,50,51,50],
sm30=[0,-4,0,-4,0,-5,52],
sm31=[0,-4,0,-4,0,-47,51],
sm32=[0,-4,0,-4,0,-15,53,-1,54],
sm33=[0,50,50,50,-1,0,-4,50,-3,50,50,-1,50,50,50,50,-1,50,-2,50,50,-1,50,-21,50,50,50,-2,50,50,50,-1,50],
sm34=[0,-4,0,-4,55],
sm35=[0,-4,0,-4,56,-3,30,-40,31,32,33],
sm36=[0,-4,0,-4,57,-3,57,-40,57,57,57],
sm37=[0,-4,0,-4,58,-3,58,-40,58,58,58],
sm38=[0,-2,28,-1,-1,-4,-1],
sm39=[0,-4,-1,-4,-1,-3,59],
sm40=[0,-4,0,-4,60],
sm41=[0,-4,0,-4,61,-3,34,-40,31,32,33],
sm42=[0,-4,0,-4,62,-3,62,-40,62,62,62],
sm43=[0,-4,0,-4,63,-3,63,-40,63,63,63],
sm44=[0,-4,64,-4,65],
sm45=[0,-4,66,-4,66,-3,67],
sm46=[0,-4,68,-4,68,-3,68],
sm47=[0,-1,69,-2,0,-4,0],
sm48=[0,-1,70,-2,0,-4,0,-3,70,-7,70,-32,70,70,70],
sm49=[0,-1,71,-2,0,-4,0,-3,71,-7,71,-32,71,71,71],
sm50=[0,-1,19,20,-1,21,-4,72,-3,22],
sm51=[0,-4,0,-4,73],
sm52=[0,-2,36,-1,74,-4,0,-3,38],
sm53=[0,-2,36,-1,75,-4,0,-3,38],
sm54=[0,-2,76,-1,76,-4,0,-3,76],
sm55=[0,-2,77,-1,77,-4,0,-3,77],
sm56=[0,-2,78,-1,78,-4,0,-3,78],
sm57=[0,79,-3,0,-4,0,-4,79,-1,79,79,-3,79,-2,79,-12,79,-20,79],
sm58=[0,80,80,80,-1,80,-4,80,-3,80,-13,80,80,-31,80],
sm59=[0,81,-3,0,-4,0,-4,81,-1,81,81,-3,81,-2,81,-12,81,-20,81],
sm60=[0,82,-1,26,-1,0,-4,0,-3,83,-5,84,-4,85,-28,86,31,32,33],
sm61=[0,-2,87,-1,0,-4,0],
sm62=[0,-2,28,-1,-1,-4,0],
sm63=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,89],
sm64=[0,90,-3,0,-4,0,-4,90,-9,90,-12,90,-20,90],
sm65=[0,-4,0,-4,91,-3,91,-40,91,91,91],
sm66=[0,92,92,92,-1,0,-4,92,-3,92,92,-1,92,92,92,92,-1,92,-2,92,-24,92,92,92,-2,92,92,92,-1,92],
sm67=[0,93,93,93,-1,0,-4,93,-3,93,93,-1,93,93,93,93,-1,93,-2,93,-24,93,93,93,-2,93,93,93,-1,93],
sm68=[0,94,94,94,-1,0,-4,94,-3,94,94,-1,94,94,94,94,-1,94,-2,94,-24,94,94,94,-2,94,94,94,-1,94],
sm69=[0,95,-3,0,-4,0,-4,95,-9,95,-12,95,-20,95],
sm70=[0,-4,0,-4,96,-3,96,-40,96,96,96],
sm71=[0,-4,0,-4,97,-3,97,-40,97,97,97],
sm72=[0,-4,0,-4,98,-3,98,-40,98,98,98],
sm73=[0,-4,99,-4,99,-3,99],
sm74=[0,-4,0,-4,100],
sm75=[0,101,-3,0,-4,0,-4,101,-9,101,-12,101,-20,101],
sm76=[0,102,-3,0,-4,0,-4,102,-9,102,-12,102,-20,102],
sm77=[0,-2,103,-1,103,-4,0,-3,103],
sm78=[0,-4,104,-4,0,-36,105,106],
sm79=[0,-2,107,-1,107,-4,0,-3,107],
sm80=[0,-4,108,-4,0,-36,108,108],
sm81=[0,109,-3,0,-4,0,-4,109,-1,109,110,-6,109,-33,3],
sm82=[0,111,-3,0,-4,0,-4,111,-1,111,111,-3,111,-2,111,-33,111],
sm83=[0,112,-3,0,-4,0,-4,112,-1,112,112,-3,112,-2,112,-33,112],
sm84=[0,113,-1,26,-1,0,-4,0,-3,83,113,-1,113,113,114,84,-1,113,-2,115,-29,31,32,33,-1,113],
sm85=[0,116,-3,0,-4,0,-4,116,-1,116,116,-3,116,-2,116,-33,116],
sm86=[0,117,-3,0,-4,0,-4,117,-1,117,117,-3,117,-2,117,-33,117],
sm87=[0,118,-1,118,-1,0,-4,0,-3,118,118,-1,118,118,118,118,-1,118,-2,118,-24,119,120,121,-2,118,118,118,-1,118],
sm88=[0,118,-1,118,-1,0,-4,0,-3,118,118,-1,118,118,118,118,-1,118,-2,118,-29,118,118,118,-1,118],
sm89=[0,122,-1,122,-1,0,-4,0,-3,122,122,-1,122,122,122,122,-1,122,-2,122,-24,122,122,122,-2,122,122,122,-1,122],
sm90=[0,82,-1,26,-1,0,-4,0,-3,83,-5,84,123,-1,124,125,85,-28,86,31,32,33],
sm91=[0,126,-1,126,-1,0,-4,0,-3,126,126,-1,126,126,126,126,-1,126,-2,126,-24,126,126,126,-2,126,126,126,-1,126],
sm92=[0,127,-1,127,-1,0,-4,0,-3,127,127,-1,127,127,127,127,-1,127,-2,127,-24,127,127,127,-2,127,127,127,-1,127],
sm93=[0,-4,0,-4,0,-15,128,-1,129],
sm94=[0,130,-3,0,-4,0,-4,130,-1,130,130,-3,130,-2,130,-33,130],
sm95=[0,131,-3,0,-4,0,-4,131,-1,131,131,-3,131,-2,131,-33,131],
sm96=[0,132,-3,0,-4,0,-4,132,-1,132,110,-6,132,-33,3],
sm97=[0,133,-1,133,-1,0,-4,0,-3,133,133,133,133,133,133,133,-1,133,-2,133,-24,133,133,133,-2,133,133,133,-1,133],
sm98=[0,134,-3,0,-4,0,-4,134,-1,134,110,-6,134,-33,3],
sm99=[0,135,-3,0,-4,0,-4,135,-1,135,-7,135,-33,135],
sm100=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,136],
sm101=[0,-1,19,20,-1,21,-4,0,-3,22,-13,137,137],
sm102=[0,-1,137,137,-1,137,-4,0,-3,137,-13,137,137],
sm103=[0,138,-3,0,-4,0,-4,138,-9,138,-12,138,-20,138],
sm104=[0,-2,139,-1,0,-4,0],
sm105=[0,-4,140,-4,0,-36,140,140],
sm106=[0,-2,141,-1,0,-4,0],
sm107=[0,142,-3,0,-4,0,-4,142,-1,142,142,-3,142,-2,142,-33,142],
sm108=[0,143,-3,0,-4,0,-4,143,-1,143,143,-3,143,-2,144,-33,143],
sm109=[0,145,-3,0,-4,0,-4,145,-1,145,145,-3,145,-2,145,-33,145],
sm110=[0,146,-1,146,-1,0,-4,0,-3,146,146,-1,146,146,146,146,-1,146,-2,146,-29,146,146,146,-1,146],
sm111=[0,146,-1,146,-1,0,-4,0,-3,146,146,-1,146,146,146,146,-1,146,-2,146,-24,119,120,121,-2,146,146,146,-1,146],
sm112=[0,147,-1,147,-1,0,-4,0,-3,147,147,-1,147,147,147,147,-1,147,-2,147,-29,147,147,147,-1,147],
sm113=[0,-4,0,-4,0,-15,128,-1,129,-1,148,149,-1,150,151,152,153],
sm114=[0,154,-1,154,-1,0,-4,0,-3,154,154,-1,154,154,154,154,-1,154,-2,154,-24,154,154,154,-2,154,154,154,-1,154],
sm115=[0,-4,0,-4,0,-3,35,-7,155,-32,31,32,33],
sm116=[0,-4,0,-4,0,-3,156,-7,156,-32,156,156,156],
sm117=[0,-4,0,-4,0,-7,110,-3,157,-36,3],
sm118=[0,158,-3,0,-4,0,-4,158,-1,158,-7,158,-33,158],
sm119=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,159],
sm120=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,160],
sm121=[0,-2,161,-1,0,-4,0],
sm122=[0,-4,0,-4,162],
sm123=[0,163,-3,0,-4,0,-4,163,-1,163,163,-3,163,-2,163,-33,163],
sm124=[0,164,-3,0,-4,0,-4,164,-1,164,164,-3,164,-2,164,-33,164],
sm125=[0,-4,0,-4,0,-19,148,149],
sm126=[0,-4,0,-4,0,-17,165],
sm127=[0,-4,0,-4,0,-15,166],
sm128=[0,-4,0,-4,0,-26,167],
sm129=[0,-4,0,-4,0,-17,168],
sm130=[0,-4,0,-4,0,-15,169],
sm131=[0,-4,0,-4,0,-15,170,-1,171,-8,172],
sm132=[0,-4,0,-4,0,-15,173,-1,174],
sm133=[0,-4,0,-4,0,-11,175],
sm134=[0,176,-1,176,-1,0,-4,0,-3,176,176,-1,176,176,176,176,-1,176,-2,176,-24,176,176,176,-2,176,176,176,-1,176],
sm135=[0,177,-1,177,-1,0,-4,0,-3,177,177,-1,177,177,177,177,-1,177,-2,177,-24,177,177,177,-2,177,177,177,-1,177],
sm136=[0,-4,0,-4,0,-11,178],
sm137=[0,-4,0,-4,0,-3,35,-7,179,-32,31,32,33],
sm138=[0,-4,0,-4,0,-3,180,-7,180,-32,180,180,180],
sm139=[0,-4,0,-4,0,-11,181],
sm140=[0,-4,0,-4,0,-11,182],
sm141=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,183],
sm142=[0,184,-1,184,-1,0,-4,0,-3,184,184,-1,184,184,184,184,-1,184,-2,184,-29,184,184,184,-1,184],
sm143=[0,-1,185,185,-1,185,-4,0,-3,185,-13,185,185],
sm144=[0,-4,0,-4,186],
sm145=[0,187,-3,0,-4,0,-4,187,-9,187,-12,187,-20,187],
sm146=[0,188,-1,188,-1,0,-4,0,-3,188,188,-1,188,188,188,188,-1,188,-2,188,-24,188,188,188,-2,188,188,188,-1,188],
sm147=[0,189,-1,189,-1,0,-4,0,-3,189,189,-1,189,189,189,189,-1,189,-2,189,-29,189,189,189,-1,189],
sm148=[0,-4,0,-4,0,-3,190,-7,190,-32,190,190,190],
sm149=[0,191,-1,191,-1,0,-4,0,-3,191,191,-1,191,191,191,191,-1,191,-2,191,-29,191,191,191,-1,191],
sm150=[0,192,-1,192,-1,0,-4,0,-3,192,192,-1,192,192,192,192,-1,192,-2,192,-29,192,192,192,-1,192],
sm151=[0,193,-1,193,-1,0,-4,0,-3,193,193,-1,193,193,193,193,-1,193,-2,193,-29,193,193,193,-1,193],
sm152=[0,194,-3,0,-4,0,-4,194,-9,194,-12,194,-20,194],
sm153=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,195],
sm154=[0,196,-3,0,-4,0,-4,196,-1,196,196,-3,196,-2,196,-33,196],
sm155=[0,197,-3,0,-4,0,-4,197,-1,197,197,-3,197,-2,197,-33,197],
sm156=[0,-1,19,20,-1,21,-4,0,-3,22,-13,88,198],
sm157=[0,199,-3,0,-4,0,-4,199,-1,199,199,-3,199,-2,199,-33,199],
sm158=[0,200,-3,0,-4,0,-4,200,-1,200,200,-3,200,-2,200,-33,200],
sm159=[0,201,-3,0,-4,0,-4,201,-1,201,201,-3,201,-2,201,-33,201],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],["<>",14],["→",15],["+>",16],["│",17],["!",18],["(",19],["EXC",20],[")",21],["ERR",22],["IGN",23],["↦",24],["^",25],[null,13],["{",27],["}",28],["err",29],["e",30],["cstr",32],["c",33],["return",34],["r",35],["=>",36],["@",37],["SYMBOL",38],["PREC",39],["IGNORE",41],["NAME",42],["EXT",43],["AS",46],["as",47],["IMPORT",48],["(+",49],["(*",50],["?",51],["$eof",59],["ɛ",53],["θ",54],["τ",55],["\\",56],["::",57],["#",58],[";",60]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,"<>"],[15,"→"],[16,"+>"],[17,"│"],[18,"!"],[19,"("],[20,"EXC"],[21,")"],[22,"ERR"],[23,"IGN"],[24,"↦"],[25,"^"],[13,null],[27,"{"],[28,"}"],[29,"err"],[30,"e"],[32,"cstr"],[33,"c"],[34,"return"],[35,"r"],[36,"=>"],[37,"@"],[38,"SYMBOL"],[39,"PREC"],[41,"IGNORE"],[42,"NAME"],[43,"EXT"],[46,"AS"],[47,"as"],[48,"IMPORT"],[49,"(+"],[50,"(*"],[51,"?"],[59,"$eof"],[53,"ɛ"],[54,"θ"],[55,"τ"],[56,"\\"],[57,"::"],[58,"#"],[60,";"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm3,
sm4,
sm5,
sm6,
sm6,
sm6,
sm6,
sm6,
sm6,
sm6,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm18,
sm8,
sm14,
sm19,
sm20,
sm21,
sm22,
sm22,
sm22,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm37,
sm37,
sm37,
sm38,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm43,
sm43,
sm44,
sm45,
sm46,
sm47,
sm48,
sm48,
sm48,
sm49,
sm50,
sm51,
sm52,
sm53,
sm54,
sm55,
sm56,
sm56,
sm57,
sm58,
sm59,
sm59,
sm59,
sm60,
sm60,
sm61,
sm60,
sm62,
sm63,
sm64,
sm65,
sm66,
sm67,
sm68,
sm69,
sm70,
sm71,
sm72,
sm72,
sm73,
sm74,
sm75,
sm76,
sm53,
sm77,
sm78,
sm79,
sm80,
sm81,
sm82,
sm83,
sm84,
sm85,
sm86,
sm87,
sm88,
sm88,
sm89,
sm89,
sm89,
sm89,
sm89,
sm90,
sm91,
sm92,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm102,
sm63,
sm103,
sm78,
sm104,
sm105,
sm106,
sm106,
sm60,
sm107,
sm108,
sm109,
sm110,
sm110,
sm111,
sm112,
sm113,
sm114,
sm115,
sm116,
sm116,
sm117,
sm18,
sm18,
sm18,
sm63,
sm38,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm125,
sm126,
sm127,
sm128,
sm129,
sm130,
sm131,
sm131,
sm131,
sm131,
sm132,
sm132,
sm133,
sm134,
sm135,
sm136,
sm137,
sm138,
sm139,
sm140,
sm141,
sm142,
sm143,
sm144,
sm145,
sm63,
sm38,
sm14,
sm63,
sm38,
sm146,
sm147,
sm148,
sm149,
sm150,
sm151,
sm152,
sm153,
sm154,
sm155,
sm156,
sm157,
sm158,
sm159],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (tk,r,o,l,p)=>{if(l.END)l.throw("Unexpected end of input");else if(l.ty & (264)) l.throw(`Unexpected space character within input "${1}" `) ; else l.throw(`Unexpected token ${l.tx} within input "${111}" `)}, 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        o[ln] = new Fn(o.slice(-plen), e, l, s, o, plen);        o.length = ln + 1;        return ret;    },
redn = (ret, plen, t, e, o, l, s) => {        if(plen > 0){            let ln = max(o.length - plen, 0);            o[ln] = o[o.length -1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R0_hydrocarbon=function (sym,env,lex,state,output,len) {return env.productions},
R0_head=function (sym,env,lex,state,output,len) {return env.productions.meta = sym[0]},
R0_prd$productions=function (sym,env,lex,state,output,len) {return !sym[0].IMPORT_OVERRIDE || sym[0].IMPORT_APPEND ? env.productions.push(sym[0]) : 0},
R1_prd$productions=function (sym,env,lex,state,output,len) {return (env.refs.set(sym[0].id,sym[0]),null)},
R2_prd$productions=function (sym,env,lex,state,output,len) {return (sym[1].id = env.productions.length,!sym[1].IMPORT_OVERRIDE || sym[1].IMPORT_APPEND ? env.productions.push(sym[1]) : 0,env.productions)},
R3_prd$productions=function (sym,env,lex,state,output,len) {return (env.refs.set(sym[1].id,sym[1]),sym[0])},
C0_prd$production=function (sym,env,lex,state,output,len) {this.name = sym[1];this.bodies = sym[3];this.id = -1;env.functions.compileProduction(this);},
I1_prd$production=function (sym,env,lex,state,output,len) {env.host_lex = lex.copy(); env.prod_name = sym[sym.length - 1];},
C2_prd$production=function (sym,env,lex,state,output,len) {this.IMPORT_OVERRIDE = true;this.name = sym[1];this.bodies = sym[3];this.id = -1;env.functions.compileProduction(this);},
I3_prd$production=function (sym,env,lex,state,output,len) {env.host_lex = lex.copy(); env.prod_name = sym[sym.length - 1].name;},
C4_prd$production=function (sym,env,lex,state,output,len) {this.IMPORT_APPEND = true;this.name = sym[1];this.bodies = sym[3];this.id = -1;env.functions.compileProduction(this);},
R0_pb$production_bodies=function (sym,env,lex,state,output,len) {return (env.body_count++,[sym[0]])},
R1_pb$production_bodies=function (sym,env,lex,state,output,len) {return (env.body_count++,sym[0].push(sym[2]),sym[0])},
I2_pb$production_bodies=function (sym,env,lex,state,output,len) {env.host_lex = lex.copy()},
R3_pb$production_bodies=function (sym,env,lex,state,output,len) {return sym[0]},
C0_pb$entries=function (sym,env,lex,state,output,len) {this.body = sym[0];this.reduce = sym[1];this.err = sym[2];},
C1_pb$entries=function (sym,env,lex,state,output,len) {this.body = [];this.reduce = null;},
C2_pb$entries=function (sym,env,lex,state,output,len) {this.reduce = null;this.body = [sym[0]];},
C3_pb$entries=function (sym,env,lex,state,output,len) {this.body = sym[0];this.err = sym[1];},
C4_pb$entries=function (sym,env,lex,state,output,len) {this.body = sym[0];this.reduce = sym[1];},
C5_pb$entries=function (sym,env,lex,state,output,len) {this.body = sym[0];},
R0_pb$body_entries=function (sym,env,lex,state,output,len) {return (env.body_offset = 0,[sym[0]])},
R1_pb$body_entries=function (sym,env,lex,state,output,len) {return (env.body_offset = sym[0].length,sym[0].push(sym[1]),sym[0])},
R2_pb$body_entries=function (sym,env,lex,state,output,len) {return sym[0].map(e => (e.NO_BLANK = true,e))},
C0_pb$condition_clause=function (sym,env,lex,state,output,len) {this.type = "exc";this.sym = sym[2];this.offset = -1;},
C1_pb$condition_clause=function (sym,env,lex,state,output,len) {this.type = "err";this.sym = sym[2];this.offset = -1;},
C2_pb$condition_clause=function (sym,env,lex,state,output,len) {this.type = "ign";this.sym = sym[2];this.offset = -1;},
C0_fn$referenced_function=function (sym,env,lex,state,output,len) {this.id = sym[1];this.name = sym[3];this.txt = "";this.env = true;},
C1_fn$referenced_function=function (sym,env,lex,state,output,len) {this.id = sym[1];this.txt = sym[3];this.env = false;this.name = "";},
C0_fn$error_function=function (sym,env,lex,state,output,len) {this.type = "ERROR";this.txt = sym[3];this.name = "";this.env = false;this.ref = "";},
C1_fn$error_function=function (sym,env,lex,state,output,len) {this.type = "ERROR";this.txt = "";this.name = sym[3];this.env = true;this.ref = "";},
C0_fn$reduce_function=function (sym,env,lex,state,output,len) {this.type = sym[1][0] == "c" ? "CLASS" : "RETURNED";this.txt = sym[3];this.name = "";this.env = false;this.ref = "";},
C1_fn$reduce_function=function (sym,env,lex,state,output,len) {this.type = sym[1][0] == "c" ? "CLASS" : "RETURNED";this.txt = "";this.name = sym[3];this.env = true;this.ref = "";},
C2_fn$reduce_function=function (sym,env,lex,state,output,len) {this.type = sym[1][0] == "c" ? "CLASS" : "RETURNED";this.ref = sym[3];this.txt = "";this.name = "";this.env = true;const ref = env.refs.get(this.ref);if(ref)if(Array.isArray(ref))ref.push(this); else {let ref = env.refs.get(this.ref);this.env = ref.env;this.name = ref.name;this.txt = ref.txt;} else env.refs.set(this.ref,[this]);},
C0_fn$function_clause=function (sym,env,lex,state,output,len) {this.type = "INLINE";this.txt = sym[2];this.name = "";this.env = false;},
C1_fn$function_clause=function (sym,env,lex,state,output,len) {this.type = "INLINE";this.txt = "";this.name = sym[2];this.env = true;},
R0_fn$js_data=function (sym,env,lex,state,output,len) {return sym[0] + sym[1]},
R0_fn$js_data_block=function (sym,env,lex,state,output,len) {return sym[0] + sym[1] + sym[2]},
R0_pre$preamble101_group_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[1]),sym[0])},
R1_pre$preamble101_group_list=function (sym,env,lex,state,output,len) {return [sym[0]]},
C0_pre$symbols_preamble=function (sym,env,lex,state,output,len) {this.type = "symbols";this.symbols = sym[2];this.symbols.forEach(lex.addSymbol.bind(lex));},
C0_pre$precedence_preamble=function (sym,env,lex,state,output,len) {this.grammar_stamp = env.stamp;this.type = "precedence";this.terminal = sym[2];this.val = parseInt(sym[3]);},
C0_pre$ignore_preamble=function (sym,env,lex,state,output,len) {this.grammar_stamp = env.stamp;this.type = "ignore";this.symbols = sym[2];},
C0_pre$name_preamble=function (sym,env,lex,state,output,len) {this.type = "name";this.id = sym[2];},
C0_pre$ext_preamble=function (sym,env,lex,state,output,len) {this.type = "ext";this.id = sym[2];},
R0_pre$import_preamble1602_group_list=function (sym,env,lex,state,output,len) {return sym[0] + ""},
C0_sym$terminal_symbol=function (sym,env,lex,state,output,len) {this.type = "symbol";this.val = sym[0];},
R0_sym$symbol=function (sym,env,lex,state,output,len) {return (sym[0].IS_OPTIONAL = true,sym[0])},
C0_sym$EOF_symbol=function (sym,env,lex,state,output,len) {this.type = "eof";this.val = "$eof";},
C0_sym$empty_symbol=function (sym,env,lex,state,output,len) {this.type = "empty";},
C0_sym$generated_symbol=function (sym,env,lex,state,output,len) {this.type = "generated";this.val = sym[1];},
C0_sym$literal_symbol=function (sym,env,lex,state,output,len) {this.type = "literal";this.val = sym[1];},
C0_sym$escaped_symbol=function (sym,env,lex,state,output,len) {this.type = "escaped";this.val = sym[1];},
C0_sym$production_symbol=function (sym,env,lex,state,output,len) {this.type = "production";this.name = sym[0];this.val = -1;},
C0_cm$comment=function (sym,env,lex,state,output,len) {this.val = sym[1];},

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index+1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [(...v)=>((redn(22531,0,...v))),
()=>(54),
()=>(58),
(...v)=>(redv(5,R0_hydrocarbon,1,0,...v)),
(...v)=>((redn(2051,0,...v))),
()=>(74),
()=>(78),
()=>(82),
(...v)=>(redn(22535,1,...v)),
(...v)=>(redv(21511,R1_pre$preamble101_group_list,1,0,...v)),
(...v)=>(redn(20487,1,...v)),
(...v)=>(redn(23559,1,...v)),
()=>(94),
()=>(98),
()=>(90),
()=>(102),
()=>(106),
()=>(110),
()=>(126),
()=>(122),
()=>(130),
()=>(134),
(...v)=>(redv(1035,R0_head,2,0,...v)),
(...v)=>(redv(2055,R0_prd$productions,1,0,...v)),
(...v)=>(redv(2055,R1_prd$productions,1,0,...v)),
()=>(162),
()=>(170),
()=>(178),
(...v)=>(redv(21515,R0_pre$preamble101_group_list,2,0,...v)),
()=>(206),
()=>(210),
()=>(214),
()=>(218),
()=>(254),
()=>(274),
()=>(302),
()=>(294),
()=>(306),
()=>(322),
()=>(318),
()=>(326),
(...v)=>(redv(61447,R3_pb$production_bodies,1,0,...v)),
(...v)=>(redn(62471,1,...v)),
(...v)=>(redv(2059,R2_prd$productions,2,0,...v)),
(...v)=>(redv(2059,R0_hydrocarbon,2,0,...v)),
(...v)=>(redv(2059,R3_prd$productions,2,0,...v)),
(...v)=>(shftf(330,I1_prd$production,...v)),
(...v)=>(shftf(334,I3_prd$production,...v)),
(...v)=>(redn(57351,1,...v)),
(...v)=>(redn(58375,1,...v)),
()=>(338),
(...v)=>(shftf(342,I3_prd$production,...v)),
()=>(346),
()=>(350),
()=>(354),
(...v)=>(redn(40967,1,...v)),
(...v)=>(redv(39943,R1_pre$preamble101_group_list,1,0,...v)),
(...v)=>(redn(46087,1,...v)),
()=>(370),
()=>(374),
(...v)=>(redn(38919,1,...v)),
(...v)=>(redv(37895,R1_pre$preamble101_group_list,1,0,...v)),
(...v)=>(redn(41991,1,...v)),
()=>(390),
()=>(386),
(...v)=>(redn(45063,1,...v)),
()=>(394),
(...v)=>(redv(44039,R0_pre$import_preamble1602_group_list,1,0,...v)),
()=>(398),
(...v)=>(redn(47111,1,...v)),
(...v)=>(rednv(47111,C0_sym$terminal_symbol,1,0,...v)),
()=>(402),
()=>(406),
()=>(414),
()=>(426),
(...v)=>(redv(29703,R1_pre$preamble101_group_list,1,0,...v)),
(...v)=>(redv(31751,R0_pre$import_preamble1602_group_list,1,0,...v)),
(...v)=>(redn(30727,1,...v)),
(...v)=>(rednv(59407,C0_cm$comment,3,0,...v)),
(...v)=>(redv(61451,R0_fn$js_data,2,0,...v)),
(...v)=>(redn(60423,1,...v)),
()=>(506),
()=>(490),
()=>(486),
()=>(498),
()=>(502),
()=>(514),
()=>(538),
(...v)=>((redn(18435,0,...v))),
(...v)=>(rednv(26643,C0_pre$ignore_preamble,4,0,...v)),
(...v)=>(redv(39947,R0_pre$preamble101_group_list,2,0,...v)),
(...v)=>(rednv(52235,C0_sym$generated_symbol,2,0,...v)),
(...v)=>(rednv(53259,C0_sym$literal_symbol,2,0,...v)),
(...v)=>(rednv(54283,C0_sym$escaped_symbol,2,0,...v)),
(...v)=>(rednv(24595,C0_pre$symbols_preamble,4,0,...v)),
(...v)=>(redv(37899,R0_pre$preamble101_group_list,2,0,...v)),
(...v)=>(redv(41995,R3_pb$production_bodies,2,0,...v)),
(...v)=>(redn(43015,1,...v)),
(...v)=>(redv(44043,R0_fn$js_data,2,0,...v)),
()=>(542),
(...v)=>(rednv(27667,C0_pre$name_preamble,4,0,...v)),
(...v)=>(rednv(28691,C0_pre$ext_preamble,4,0,...v)),
(...v)=>(redv(29707,R0_pre$preamble101_group_list,2,0,...v)),
()=>(554),
()=>(558),
()=>(562),
(...v)=>(redv(31755,R0_fn$js_data,2,0,...v)),
(...v)=>(redv(32775,R1_pre$preamble101_group_list,1,0,...v)),
(...v)=>(rednv(3091,C0_prd$production,4,0,...v)),
(...v)=>(shftf(566,I2_pb$production_bodies,...v)),
(...v)=>(redv(4103,R0_pb$production_bodies,1,0,...v)),
(...v)=>(rednv(5127,fn.body,1,0,...v)),
(...v)=>(rednv(6151,C5_pb$entries,1,0,...v)),
()=>(594),
()=>(598),
(...v)=>(rednv(6151,C1_pb$entries,1,0,...v)),
(...v)=>(rednv(6151,C2_pb$entries,1,0,...v)),
(...v)=>(redv(7175,R0_pb$body_entries,1,0,...v)),
()=>(610),
()=>(614),
()=>(602),
(...v)=>(redn(49159,1,...v)),
()=>(622),
()=>(626),
()=>(630),
(...v)=>(rednv(49159,C0_sym$terminal_symbol,1,0,...v)),
(...v)=>(rednv(55303,C0_sym$production_symbol,1,0,...v)),
()=>(638),
()=>(634),
(...v)=>(rednv(51207,C0_sym$empty_symbol,1,0,...v)),
(...v)=>(rednv(50183,C0_sym$EOF_symbol,1,0,...v)),
(...v)=>(rednv(3091,C2_prd$production,4,0,...v)),
(...v)=>(rednv(56335,fn.importProduction,3,0,...v)),
(...v)=>(rednv(3091,C4_prd$production,4,0,...v)),
(...v)=>(rednv(9235,C0_fn$referenced_function,4,0,...v)),
()=>(642),
(...v)=>(redn(18439,1,...v)),
(...v)=>(rednv(25623,C0_pre$precedence_preamble,5,0,...v)),
()=>(658),
(...v)=>(redv(32779,R0_pre$preamble101_group_list,2,0,...v)),
(...v)=>(redn(33799,1,...v)),
(...v)=>(redv(4107,R3_pb$production_bodies,2,0,...v)),
(...v)=>(rednv(6155,C4_pb$entries,2,0,...v)),
()=>(670),
(...v)=>(rednv(6155,C3_pb$entries,2,0,...v)),
(...v)=>(redv(7179,R1_pb$body_entries,2,0,...v)),
(...v)=>(redv(7179,R2_pb$body_entries,2,0,...v)),
()=>(710),
()=>(714),
()=>(694),
()=>(698),
()=>(702),
()=>(706),
(...v)=>(redv(49163,R0_sym$symbol,2,0,...v)),
()=>(722),
(...v)=>(redn(48135,1,...v)),
()=>(726),
(...v)=>(rednv(9239,C1_fn$referenced_function,5,0,...v)),
(...v)=>(redv(18443,R0_fn$js_data,2,0,...v)),
()=>(758),
()=>(762),
()=>(766),
(...v)=>(redv(4111,R1_pb$production_bodies,3,0,...v)),
(...v)=>(rednv(6159,C0_pb$entries,3,0,...v)),
()=>(770),
()=>(774),
()=>(778),
()=>(782),
()=>(786),
(...v)=>(redn(14343,1,...v)),
(...v)=>(redn(13319,1,...v)),
(...v)=>(redn(15367,1,...v)),
(...v)=>(redn(11271,1,...v)),
(...v)=>(redn(10247,1,...v)),
()=>(790),
(...v)=>(rednv(49167,fn.listProduction,3,0,...v)),
(...v)=>(rednv(49167,fn.groupProduction,3,0,...v)),
()=>(794),
(...v)=>(redn(36871,1,...v)),
(...v)=>(redv(35847,R1_pre$preamble101_group_list,1,0,...v)),
()=>(802),
()=>(806),
()=>(810),
(...v)=>(rednv(17423,C1_fn$function_clause,3,0,...v)),
(...v)=>(redv(19471,R0_fn$js_data_block,3,0,...v)),
()=>(814),
(...v)=>(redv(34847,fn.importData,7,0,...v)),
(...v)=>(rednv(49171,fn.listProduction,4,0,...v)),
(...v)=>(rednv(8211,C0_pb$condition_clause,4,0,...v)),
(...v)=>(redv(35851,R0_pre$preamble101_group_list,2,0,...v)),
(...v)=>(rednv(8211,C1_pb$condition_clause,4,0,...v)),
(...v)=>(rednv(8211,C2_pb$condition_clause,4,0,...v)),
(...v)=>(rednv(17427,C0_fn$function_clause,4,0,...v)),
(...v)=>(redv(34851,fn.importData,8,0,...v)),
()=>(838),
(...v)=>(rednv(16403,C1_fn$reduce_function,4,0,...v)),
(...v)=>(rednv(16403,C2_fn$reduce_function,4,0,...v)),
()=>(842),
(...v)=>(rednv(12307,C1_fn$error_function,4,0,...v)),
(...v)=>(rednv(16407,C0_fn$reduce_function,5,0,...v)),
(...v)=>(rednv(12311,C0_fn$error_function,5,0,...v))],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
v=>lsm(v,gt1),
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
nf,
nf,
v=>lsm(v,gt5),
v=>lsm(v,gt6),
v=>lsm(v,gt7),
nf,
v=>lsm(v,gt8),
v=>lsm(v,gt9),
v=>lsm(v,gt10),
v=>lsm(v,gt11),
v=>lsm(v,gt12),
v=>lsm(v,gt13),
v=>lsm(v,gt14),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt15),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt16),
v=>lsm(v,gt17),
nf,
nf,
v=>lsm(v,gt18),
nf,
nf,
nf,
nf,
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt20),
nf,
v=>lsm(v,gt21),
v=>lsm(v,gt22),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt23),
v=>lsm(v,gt24),
nf,
v=>lsm(v,gt25),
v=>lsm(v,gt26),
v=>lsm(v,gt27),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt28),
nf,
v=>lsm(v,gt29),
nf,
nf,
v=>lsm(v,gt30),
nf,
nf,
v=>lsm(v,gt31),
nf,
nf,
v=>lsm(v,gt32),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt33),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt30),
nf,
v=>lsm(v,gt30),
nf,
v=>lsm(v,gt34),
v=>lsm(v,gt20),
nf,
v=>lsm(v,gt35),
nf,
v=>lsm(v,gt36),
nf,
nf,
nf,
nf,
v=>lsm(v,gt37),
nf,
v=>lsm(v,gt38),
nf,
nf,
nf,
v=>lsm(v,gt32),
nf,
v=>lsm(v,gt39),
nf,
v=>lsm(v,gt40),
nf,
nf,
v=>lsm(v,gt30),
v=>lsm(v,gt41),
v=>lsm(v,gt42),
v=>lsm(v,gt43),
v=>lsm(v,gt44),
v=>lsm(v,gt45),
nf,
v=>lsm(v,gt34),
v=>lsm(v,gt34),
nf,
nf,
nf,
nf,
v=>lsm(v,gt46),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt47),
nf,
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
nf,
nf,
v=>lsm(v,gt48),
v=>lsm(v,gt49),
v=>lsm(v,gt50),
v=>lsm(v,gt51),
v=>lsm(v,gt52),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*13*/

    switch (l.ty) {
        case 2:
            if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {
    
    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;
            
            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                l.next();
                tk = getToken(l, lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {
                if (RECOVERING > 1 && !l.END) {
                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], lu);

                if (RECOVERING > 0 && recovery_token) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");
                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:
                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    p.sync(l);
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;
